// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const ALL = 57362
const DISTINCT = 57363
const AS = 57364
const EXISTS = 57365
const ASC = 57366
const DESC = 57367
const INTO = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const DO = 57375
const CALL = 57376
const DISTINCTROW = 57377
const PARSER = 57378
const GENERATED = 57379
const ALWAYS = 57380
const OUTFILE = 57381
const S3 = 57382
const DATA = 57383
const LOAD = 57384
const LINES = 57385
const TERMINATED = 57386
const ESCAPED = 57387
const ENCLOSED = 57388
const DUMPFILE = 57389
const CSV = 57390
const HEADER = 57391
const MANIFEST = 57392
const OVERWRITE = 57393
const STARTING = 57394
const OPTIONALLY = 57395
const VALUES = 57396
const LAST_INSERT_ID = 57397
const NEXT = 57398
const VALUE = 57399
const SHARE = 57400
const MODE = 57401
const SQL_NO_CACHE = 57402
const SQL_CACHE = 57403
const SQL_CALC_FOUND_ROWS = 57404
const JOIN = 57405
const STRAIGHT_JOIN = 57406
const LEFT = 57407
const RIGHT = 57408
const INNER = 57409
const OUTER = 57410
const CROSS = 57411
const NATURAL = 57412
const USE = 57413
const FORCE = 57414
const ON = 57415
const USING = 57416
const INPLACE = 57417
const COPY = 57418
const ALGORITHM = 57419
const NONE = 57420
const SHARED = 57421
const EXCLUSIVE = 57422
const SUBQUERY_AS_EXPR = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const HEX = 57427
const STRING = 57428
const NCHAR_STRING = 57429
const INTEGRAL = 57430
const FLOAT = 57431
const HEXNUM = 57432
const VALUE_ARG = 57433
const LIST_ARG = 57434
const COMMENT = 57435
const COMMENT_KEYWORD = 57436
const BIT_LITERAL = 57437
const COMPRESSION = 57438
const EXTRACT = 57439
const NULL = 57440
const TRUE = 57441
const FALSE = 57442
const OFF = 57443
const DISCARD = 57444
const IMPORT = 57445
const ENABLE = 57446
const DISABLE = 57447
const TABLESPACE = 57448
const VIRTUAL = 57449
const STORED = 57450
const EMPTY_FROM_CLAUSE = 57451
const LOWER_THAN_CHARSET = 57452
const CHARSET = 57453
const UNIQUE = 57454
const KEY = 57455
const EXPRESSION_PREC_SETTER = 57456
const OR = 57457
const XOR = 57458
const AND = 57459
const NOT = 57460
const BETWEEN = 57461
const CASE = 57462
const WHEN = 57463
const THEN = 57464
const ELSE = 57465
const END = 57466
const LE = 57467
const GE = 57468
const NE = 57469
const NULL_SAFE_EQUAL = 57470
const IS = 57471
const LIKE = 57472
const REGEXP = 57473
const IN = 57474
const SHIFT_LEFT = 57475
const SHIFT_RIGHT = 57476
const DIV = 57477
const MOD = 57478
const UNARY = 57479
const COLLATE = 57480
const BINARY = 57481
const UNDERSCORE_ARMSCII8 = 57482
const UNDERSCORE_ASCII = 57483
const UNDERSCORE_BIG5 = 57484
const UNDERSCORE_BINARY = 57485
const UNDERSCORE_CP1250 = 57486
const UNDERSCORE_CP1251 = 57487
const UNDERSCORE_CP1256 = 57488
const UNDERSCORE_CP1257 = 57489
const UNDERSCORE_CP850 = 57490
const UNDERSCORE_CP852 = 57491
const UNDERSCORE_CP866 = 57492
const UNDERSCORE_CP932 = 57493
const UNDERSCORE_DEC8 = 57494
const UNDERSCORE_EUCJPMS = 57495
const UNDERSCORE_EUCKR = 57496
const UNDERSCORE_GB18030 = 57497
const UNDERSCORE_GB2312 = 57498
const UNDERSCORE_GBK = 57499
const UNDERSCORE_GEOSTD8 = 57500
const UNDERSCORE_GREEK = 57501
const UNDERSCORE_HEBREW = 57502
const UNDERSCORE_HP8 = 57503
const UNDERSCORE_KEYBCS2 = 57504
const UNDERSCORE_KOI8R = 57505
const UNDERSCORE_KOI8U = 57506
const UNDERSCORE_LATIN1 = 57507
const UNDERSCORE_LATIN2 = 57508
const UNDERSCORE_LATIN5 = 57509
const UNDERSCORE_LATIN7 = 57510
const UNDERSCORE_MACCE = 57511
const UNDERSCORE_MACROMAN = 57512
const UNDERSCORE_SJIS = 57513
const UNDERSCORE_SWE7 = 57514
const UNDERSCORE_TIS620 = 57515
const UNDERSCORE_UCS2 = 57516
const UNDERSCORE_UJIS = 57517
const UNDERSCORE_UTF16 = 57518
const UNDERSCORE_UTF16LE = 57519
const UNDERSCORE_UTF32 = 57520
const UNDERSCORE_UTF8 = 57521
const UNDERSCORE_UTF8MB4 = 57522
const INTERVAL = 57523
const JSON_EXTRACT_OP = 57524
const JSON_UNQUOTE_EXTRACT_OP = 57525
const CREATE = 57526
const ALTER = 57527
const DROP = 57528
const RENAME = 57529
const ANALYZE = 57530
const ADD = 57531
const FLUSH = 57532
const CHANGE = 57533
const MODIFY = 57534
const REVERT = 57535
const SCHEMA = 57536
const TABLE = 57537
const INDEX = 57538
const VIEW = 57539
const TO = 57540
const IGNORE = 57541
const IF = 57542
const PRIMARY = 57543
const COLUMN = 57544
const SPATIAL = 57545
const FULLTEXT = 57546
const KEY_BLOCK_SIZE = 57547
const CHECK = 57548
const INDEXES = 57549
const ACTION = 57550
const CASCADE = 57551
const CONSTRAINT = 57552
const FOREIGN = 57553
const NO = 57554
const REFERENCES = 57555
const RESTRICT = 57556
const SHOW = 57557
const DESCRIBE = 57558
const EXPLAIN = 57559
const DATE = 57560
const ESCAPE = 57561
const REPAIR = 57562
const OPTIMIZE = 57563
const TRUNCATE = 57564
const COALESCE = 57565
const EXCHANGE = 57566
const REBUILD = 57567
const PARTITIONING = 57568
const REMOVE = 57569
const MAXVALUE = 57570
const PARTITION = 57571
const REORGANIZE = 57572
const LESS = 57573
const THAN = 57574
const PROCEDURE = 57575
const TRIGGER = 57576
const VINDEX = 57577
const VINDEXES = 57578
const DIRECTORY = 57579
const NAME = 57580
const UPGRADE = 57581
const STATUS = 57582
const VARIABLES = 57583
const WARNINGS = 57584
const CASCADED = 57585
const DEFINER = 57586
const OPTION = 57587
const SQL = 57588
const UNDEFINED = 57589
const SEQUENCE = 57590
const MERGE = 57591
const TEMPORARY = 57592
const TEMPTABLE = 57593
const INVOKER = 57594
const SECURITY = 57595
const FIRST = 57596
const AFTER = 57597
const LAST = 57598
const VITESS_MIGRATION = 57599
const CANCEL = 57600
const RETRY = 57601
const COMPLETE = 57602
const CLEANUP = 57603
const BEGIN = 57604
const START = 57605
const TRANSACTION = 57606
const COMMIT = 57607
const ROLLBACK = 57608
const SAVEPOINT = 57609
const RELEASE = 57610
const WORK = 57611
const BIT = 57612
const TINYINT = 57613
const SMALLINT = 57614
const MEDIUMINT = 57615
const INT = 57616
const INTEGER = 57617
const BIGINT = 57618
const INTNUM = 57619
const REAL = 57620
const DOUBLE = 57621
const FLOAT_TYPE = 57622
const DECIMAL = 57623
const NUMERIC = 57624
const TIME = 57625
const TIMESTAMP = 57626
const DATETIME = 57627
const YEAR = 57628
const CHAR = 57629
const VARCHAR = 57630
const BOOL = 57631
const CHARACTER = 57632
const VARBINARY = 57633
const NCHAR = 57634
const TEXT = 57635
const TINYTEXT = 57636
const MEDIUMTEXT = 57637
const LONGTEXT = 57638
const BLOB = 57639
const TINYBLOB = 57640
const MEDIUMBLOB = 57641
const LONGBLOB = 57642
const JSON = 57643
const ENUM = 57644
const GEOMETRY = 57645
const POINT = 57646
const LINESTRING = 57647
const POLYGON = 57648
const GEOMETRYCOLLECTION = 57649
const MULTIPOINT = 57650
const MULTILINESTRING = 57651
const MULTIPOLYGON = 57652
const NULLX = 57653
const AUTO_INCREMENT = 57654
const APPROXNUM = 57655
const SIGNED = 57656
const UNSIGNED = 57657
const ZEROFILL = 57658
const CODE = 57659
const COLLATION = 57660
const COLUMNS = 57661
const DATABASES = 57662
const ENGINES = 57663
const EVENT = 57664
const EXTENDED = 57665
const FIELDS = 57666
const FULL = 57667
const FUNCTION = 57668
const GTID_EXECUTED = 57669
const KEYSPACES = 57670
const OPEN = 57671
const PLUGINS = 57672
const PRIVILEGES = 57673
const PROCESSLIST = 57674
const SCHEMAS = 57675
const TABLES = 57676
const TRIGGERS = 57677
const USER = 57678
const VGTID_EXECUTED = 57679
const VITESS_KEYSPACES = 57680
const VITESS_METADATA = 57681
const VITESS_MIGRATIONS = 57682
const VITESS_REPLICATION_STATUS = 57683
const VITESS_SHARDS = 57684
const VITESS_TABLETS = 57685
const VSCHEMA = 57686
const NAMES = 57687
const GLOBAL = 57688
const SESSION = 57689
const ISOLATION = 57690
const LEVEL = 57691
const READ = 57692
const WRITE = 57693
const ONLY = 57694
const REPEATABLE = 57695
const COMMITTED = 57696
const UNCOMMITTED = 57697
const SERIALIZABLE = 57698
const CURRENT_TIMESTAMP = 57699
const DATABASE = 57700
const CURRENT_DATE = 57701
const CURRENT_TIME = 57702
const LOCALTIME = 57703
const LOCALTIMESTAMP = 57704
const CURRENT_USER = 57705
const UTC_DATE = 57706
const UTC_TIME = 57707
const UTC_TIMESTAMP = 57708
const DAY = 57709
const DAY_HOUR = 57710
const DAY_MICROSECOND = 57711
const DAY_MINUTE = 57712
const DAY_SECOND = 57713
const HOUR = 57714
const HOUR_MICROSECOND = 57715
const HOUR_MINUTE = 57716
const HOUR_SECOND = 57717
const MICROSECOND = 57718
const MINUTE = 57719
const MINUTE_MICROSECOND = 57720
const MINUTE_SECOND = 57721
const MONTH = 57722
const QUARTER = 57723
const SECOND = 57724
const SECOND_MICROSECOND = 57725
const YEAR_MONTH = 57726
const WEEK = 57727
const REPLACE = 57728
const CONVERT = 57729
const CAST = 57730
const SUBSTR = 57731
const SUBSTRING = 57732
const GROUP_CONCAT = 57733
const SEPARATOR = 57734
const TIMESTAMPADD = 57735
const TIMESTAMPDIFF = 57736
const MATCH = 57737
const AGAINST = 57738
const BOOLEAN = 57739
const LANGUAGE = 57740
const WITH = 57741
const QUERY = 57742
const EXPANSION = 57743
const WITHOUT = 57744
const VALIDATION = 57745
const UNUSED = 57746
const ARRAY = 57747
const CUME_DIST = 57748
const DESCRIPTION = 57749
const DENSE_RANK = 57750
const EMPTY = 57751
const EXCEPT = 57752
const FIRST_VALUE = 57753
const GROUPING = 57754
const GROUPS = 57755
const JSON_TABLE = 57756
const LAG = 57757
const LAST_VALUE = 57758
const LATERAL = 57759
const LEAD = 57760
const MEMBER = 57761
const NTH_VALUE = 57762
const NTILE = 57763
const OF = 57764
const OVER = 57765
const PERCENT_RANK = 57766
const RANK = 57767
const RECURSIVE = 57768
const ROW_NUMBER = 57769
const SYSTEM = 57770
const WINDOW = 57771
const ACTIVE = 57772
const ADMIN = 57773
const BUCKETS = 57774
const CLONE = 57775
const COMPONENT = 57776
const DEFINITION = 57777
const ENFORCED = 57778
const EXCLUDE = 57779
const FOLLOWING = 57780
const GEOMCOLLECTION = 57781
const GET_MASTER_PUBLIC_KEY = 57782
const HISTOGRAM = 57783
const HISTORY = 57784
const INACTIVE = 57785
const INVISIBLE = 57786
const LOCKED = 57787
const MASTER_COMPRESSION_ALGORITHMS = 57788
const MASTER_PUBLIC_KEY_PATH = 57789
const MASTER_TLS_CIPHERSUITES = 57790
const MASTER_ZSTD_COMPRESSION_LEVEL = 57791
const NESTED = 57792
const NETWORK_NAMESPACE = 57793
const NOWAIT = 57794
const NULLS = 57795
const OJ = 57796
const OLD = 57797
const OPTIONAL = 57798
const ORDINALITY = 57799
const ORGANIZATION = 57800
const OTHERS = 57801
const PATH = 57802
const PERSIST = 57803
const PERSIST_ONLY = 57804
const PRECEDING = 57805
const PRIVILEGE_CHECKS_USER = 57806
const PROCESS = 57807
const RANDOM = 57808
const REFERENCE = 57809
const REQUIRE_ROW_FORMAT = 57810
const RESOURCE = 57811
const RESPECT = 57812
const RESTART = 57813
const RETAIN = 57814
const REUSE = 57815
const ROLE = 57816
const SECONDARY = 57817
const SECONDARY_ENGINE = 57818
const SECONDARY_LOAD = 57819
const SECONDARY_UNLOAD = 57820
const SKIP = 57821
const SRID = 57822
const THREAD_PRIORITY = 57823
const TIES = 57824
const UNBOUNDED = 57825
const VCPU = 57826
const VISIBLE = 57827
const FORMAT = 57828
const TREE = 57829
const VITESS = 57830
const TRADITIONAL = 57831
const LOCAL = 57832
const LOW_PRIORITY = 57833
const NO_WRITE_TO_BINLOG = 57834
const LOGS = 57835
const ERROR = 57836
const GENERAL = 57837
const HOSTS = 57838
const OPTIMIZER_COSTS = 57839
const USER_RESOURCES = 57840
const SLOW = 57841
const CHANNEL = 57842
const RELAY = 57843
const EXPORT = 57844
const AVG_ROW_LENGTH = 57845
const CONNECTION = 57846
const CHECKSUM = 57847
const DELAY_KEY_WRITE = 57848
const ENCRYPTION = 57849
const ENGINE = 57850
const INSERT_METHOD = 57851
const MAX_ROWS = 57852
const MIN_ROWS = 57853
const PACK_KEYS = 57854
const PASSWORD = 57855
const FIXED = 57856
const DYNAMIC = 57857
const COMPRESSED = 57858
const REDUNDANT = 57859
const COMPACT = 57860
const ROW_FORMAT = 57861
const STATS_AUTO_RECALC = 57862
const STATS_PERSISTENT = 57863
const STATS_SAMPLE_PAGES = 57864
const STORAGE = 57865
const MEMORY = 57866
const DISK = 57867
const PARTITIONS = 57868
const LINEAR = 57869
const RANGE = 57870
const LIST = 57871
const SUBPARTITION = 57872
const SUBPARTITIONS = 57873
const HASH = 57874

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	9, 43,
	10, 43,
	-2, 33,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 42,
	1, 152,
	550, 152,
	-2, 158,
	-1, 43,
	114, 158,
	154, 158,
	307, 158,
	-2, 456,
	-1, 50,
	32, 629,
	213, 629,
	224, 629,
	257, 643,
	258, 643,
	-2, 631,
	-1, 55,
	215, 653,
	-2, 651,
	-1, 105,
	212, 1099,
	-2, 131,
	-1, 107,
	1, 153,
	550, 153,
	-2, 158,
	-1, 117,
	115, 359,
	218, 359,
	-2, 450,
	-1, 136,
	114, 158,
	154, 158,
	307, 158,
	-2, 465,
	-1, 595,
	198, 1120,
	-2, 1116,
	-1, 596,
	198, 1121,
	-2, 1117,
	-1, 666,
	56, 721,
	-2, 729,
	-1, 702,
	130, 1478,
	-2, 124,
	-1, 703,
	130, 1355,
	-2, 125,
	-1, 709,
	130, 1409,
	-2, 1093,
	-1, 851,
	130, 1288,
	-2, 1090,
	-1, 887,
	223, 37,
	228, 37,
	-2, 370,
	-1, 964,
	1, 504,
	550, 504,
	-2, 158,
	-1, 1160,
	56, 722,
	-2, 734,
	-1, 1161,
	56, 723,
	-2, 735,
	-1, 1212,
	114, 158,
	154, 158,
	307, 158,
	-2, 400,
	-1, 1215,
	22, 177,
	-2, 179,
	-1, 1288,
	115, 359,
	218, 359,
	-2, 450,
	-1, 1297,
	223, 38,
	228, 38,
	-2, 371,
	-1, 1547,
	198, 1125,
	-2, 1119,
	-1, 1623,
	114, 158,
	154, 158,
	307, 158,
	-2, 401,
	-1, 1858,
	74, 89,
	83, 89,
	-2, 788,
	-1, 2026,
	46, 1061,
	-2, 1055,
	-1, 2214,
	5, 49,
	15, 49,
	17, 49,
	84, 49,
	-2, 763,
}

const yyPrivate = 57344

const yyLast = 33660

var yyAct = [...]int{
	595, 2511, 2507, 587, 2506, 1620, 2082, 604, 2434, 2366,
	597, 2370, 2372, 2467, 2260, 2221, 2440, 1578, 1215, 2134,
	2122, 2421, 2408, 1561, 2334, 3, 681, 1878, 2035, 1885,
	1142, 1887, 2038, 2123, 659, 1804, 2284, 2039, 589, 33,
	1027, 2289, 590, 1175, 2185, 2036, 173, 88, 544, 173,
	2178, 511, 173, 547, 1853, 2027, 2402, 527, 598, 173,
	2033, 1582, 1824, 1655, 975, 588, 545, 173, 2205, 1594,
	2276, 1904, 1927, 1965, 2081, 1660, 543, 551, 1675, 173,
	1905, 573, 917, 1906, 145, 707, 1842, 1609, 682, 1816,
	1599, 34, 1541, 539, 1162, 1269, 1598, 1499, 32, 131,
	527, 1720, 1981, 527, 173, 527, 1492, 1451, 663, 1295,
	667, 1898, 854, 1674, 1688, 1662, 661, 882, 1204, 1184,
	1860, 1601, 87, 1511, 83, 1469, 1563, 1045, 684, 556,
	1145, 1402, 1544, 1399, 895, 1302, 861, 888, 2017, 1672,
	704, 858, 862, 1587, 1385, 883, 884, 885, 1188, 1203,
	1287, 673, 1407, 1264, 1201, 1025, 148, 1651, 90, 108,
	1020, 1583, 1311, 669, 671, 114, 115, 960, 694, 77,
	668, 1111, 1554, 109, 1115, 2484, 534, 2316, 81, 2512,
	2223, 2224, 2225, 2223, 2403, 68, 2373, 1718, 89, 1945,
	1944, 7, 689, 6, 116, 670, 69, 5, 1973, 110,
	1974, 2510, 175, 176, 177, 82, 2521, 675, 2522, 1558,
	1559, 1458, 484, 1457, 1371, 1456, 919, 1455, 1454, 1453,
	855, 922, 1046, 1440, 537, 1445, 538, 2454, 1802, 933,
	934, 2023, 937, 938, 939, 940, 2498, 535, 943, 944,
	945, 946, 947, 948, 949, 950, 951, 952, 953, 954,
	955, 956, 957, 899, 701, 662, 676, 660, 1826, 683,
	2462, 708, 870, 865, 110, 2477, 898, 876, 1004, 94,
	2103, 2237, 877, 2330, 2509, 2329, 921, 1046, 920, 930,
	2255, 875, 1758, 2256, 70, 923, 924, 925, 2497, 2431,
	2489, 2522, 2388, 2475, 70, 2261, 72, 1667, 2422, 1706,
	2430, 1980, 169, 2166, 70, 70, 96, 1833, 99, 2387,
	935, 105, 1923, 1278, 170, 2073, 2074, 479, 1952, 1205,
	1665, 1206, 1951, 1869, 1056, 111, 1868, 133, 110, 1870,
	963, 874, 1834, 969, 970, 2072, 869, 658, 153, 871,
	666, 1615, 1616, 1803, 1972, 1011, 1756, 1013, 1755, 1614,
	1560, 982, 2302, 999, 1000, 994, 983, 1168, 1023, 169,
	79, 656, 655, 2318, 981, 2367, 980, 696, 697, 143,
	79, 982, 995, 1895, 132, 988, 983, 1635, 1634, 1056,
	79, 79, 111, 1010, 1012, 2158, 2182, 872, 525, 2136,
	175, 176, 177, 514, 150, 153, 151, 1982, 514, 1077,
	2156, 1391, 1289, 1290, 142, 141, 168, 514, 1444, 529,
	523, 1446, 1447, 1448, 1149, 1052, 1928, 1689, 1044, 514,
	2339, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1086, 1085,
	1087, 1088, 874, 959, 866, 2130, 1361, 1875, 936, 1948,
	1001, 868, 867, 2131, 1734, 1664, 1735, 878, 1736, 996,
	1002, 150, 989, 151, 1721, 2488, 1022, 1732, 1729, 1731,
	1730, 1386, 1726, 168, 874, 958, 2137, 997, 998, 1017,
	1052, 1003, 1008, 965, 2455, 1960, 1009, 1984, 1362, 173,
	1363, 173, 1737, 942, 173, 941, 1014, 2138, 872, 1725,
	1723, 879, 2326, 2250, 1691, 873, 1891, 1595, 1874, 137,
	1291, 144, 1015, 1288, 906, 138, 139, 915, 1007, 904,
	154, 914, 527, 527, 527, 1727, 913, 912, 911, 159,
	910, 909, 908, 1089, 1089, 2485, 1281, 962, 903, 1724,
	527, 527, 916, 175, 176, 177, 2471, 1756, 859, 2473,
	1986, 859, 1990, 891, 1985, 857, 1983, 897, 859, 890,
	978, 1988, 984, 985, 986, 987, 1400, 1038, 992, 1301,
	1987, 1673, 514, 1805, 1807, 695, 1961, 154, 1712, 897,
	33, 932, 1396, 1989, 1991, 1024, 159, 1051, 1048, 1049,
	1050, 1055, 1057, 1054, 2009, 1053, 515, 1392, 1032, 1964,
	926, 515, 1047, 2110, 1947, 2008, 873, 2007, 1276, 1275,
	515, 2102, 1274, 501, 1937, 1976, 1769, 1708, 2483, 1397,
	2315, 1272, 515, 1950, 961, 897, 483, 2319, 478, 1092,
	1093, 1094, 1095, 1090, 1091, 2363, 146, 1016, 873, 1100,
	2220, 1103, 1051, 1048, 1049, 1050, 1055, 1057, 1054, 1666,
	1053, 907, 1390, 2201, 896, 1140, 905, 1047, 2183, 500,
	890, 893, 894, 2386, 859, 1865, 173, 1831, 887, 891,
	498, 1959, 1300, 1794, 1958, 897, 896, 1553, 1029, 1030,
	1192, 900, 890, 173, 1122, 973, 107, 886, 1621, 1757,
	1967, 901, 1135, 146, 2508, 1966, 1150, 1089, 1096, 1088,
	2071, 73, 527, 678, 78, 173, 2340, 1153, 495, 1152,
	527, 140, 977, 1156, 78, 1141, 527, 509, 1806, 663,
	661, 1155, 896, 134, 78, 78, 135, 1373, 1372, 1374,
	1375, 1376, 506, 1041, 102, 1039, 1005, 69, 1408, 1040,
	1021, 2401, 1967, 2469, 2382, 2195, 2470, 1966, 2468, 991,
	704, 897, 971, 968, 1113, 979, 1114, 918, 1722, 1393,
	993, 1117, 1154, 1207, 1042, 515, 87, 1997, 1512, 1512,
	1783, 1917, 896, 1141, 931, 1061, 1128, 1129, 1130, 1131,
	1387, 2298, 1388, 2092, 1018, 1389, 1059, 1146, 1060, 1061,
	103, 1707, 2091, 485, 1695, 487, 502, 1310, 517, 1309,
	516, 491, 90, 489, 493, 503, 494, 1705, 488, 1474,
	499, 1060, 1061, 490, 504, 505, 507, 521, 520, 508,
	1299, 497, 518, 1475, 1476, 1473, 1700, 147, 152, 149,
	155, 156, 157, 158, 160, 161, 162, 163, 976, 1703,
	1151, 1143, 906, 164, 165, 166, 167, 1174, 896, 904,
	2448, 1171, 1704, 900, 890, 2077, 2486, 1700, 964, 1881,
	79, 660, 1193, 901, 173, 1006, 662, 1409, 1265, 2449,
	2518, 708, 1202, 1472, 2391, 1197, 1198, 1273, 175, 176,
	177, 902, 1494, 1702, 147, 152, 149, 155, 156, 157,
	158, 160, 161, 162, 163, 2439, 527, 2404, 1297, 2356,
	164, 165, 166, 167, 1882, 2392, 1306, 175, 176, 177,
	1308, 1828, 1380, 527, 527, 2236, 527, 1169, 527, 527,
	1169, 527, 527, 527, 527, 527, 527, 1516, 1884, 2487,
	2357, 2163, 1879, 609, 610, 1059, 527, 1060, 1061, 1137,
	173, 1344, 2235, 2108, 1999, 1157, 1889, 1890, 1495, 1761,
	1762, 1763, 1902, 1880, 1901, 897, 173, 1081, 1082, 1083,
	1084, 1086, 1085, 1087, 1088, 519, 1670, 527, 1378, 173,
	1279, 1280, 699, 1381, 2414, 1379, 1366, 1829, 2412, 1365,
	1398, 1364, 1779, 512, 173, 1886, 1307, 2416, 2417, 1355,
	1368, 1286, 1889, 1890, 1349, 1346, 1169, 1345, 513, 2413,
	173, 1083, 1084, 1086, 1085, 1087, 1088, 173, 1293, 2161,
	1169, 1339, 1340, 1772, 1320, 1305, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 527, 527, 527, 1347, 1348,
	1059, 1377, 1060, 1061, 1353, 1354, 1170, 1172, 1303, 1303,
	1304, 1283, 1271, 2360, 1059, 1178, 1060, 1061, 1341, 1888,
	2359, 1296, 896, 1367, 1778, 173, 1284, 1282, 890, 893,
	894, 1891, 859, 1412, 2358, 2503, 887, 891, 2297, 1404,
	1416, 2295, 1418, 1419, 1420, 1421, 1313, 2273, 1314, 1425,
	1316, 1318, 1357, 2233, 1322, 1324, 1326, 1328, 1330, 1059,
	2088, 1060, 1061, 1439, 1179, 1888, 1911, 1899, 1342, 1059,
	1493, 1060, 1061, 579, 1716, 1588, 1589, 1891, 1715, 1059,
	1581, 1060, 1061, 1502, 527, 1401, 1065, 1066, 1067, 1068,
	1069, 1070, 1071, 1063, 1567, 1470, 596, 1497, 1496, 527,
	527, 110, 1441, 1477, 876, 1479, 1480, 1481, 1482, 1483,
	1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 875, 1405,
	1277, 1468, 1478, 1414, 1182, 1464, 1466, 1467, 173, 1369,
	1883, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1086, 1085,
	1087, 1088, 174, 1545, 1356, 174, 1465, 1352, 174, 2215,
	1435, 1436, 1437, 528, 173, 174, 1169, 527, 1438, 1566,
	1568, 2133, 1569, 174, 175, 176, 177, 173, 1513, 1059,
	527, 1060, 1061, 1351, 1350, 174, 173, 2169, 173, 173,
	527, 1180, 1471, 527, 1059, 1019, 1060, 1061, 1547, 1181,
	1059, 2396, 1060, 1061, 527, 93, 528, 1549, 1550, 528,
	174, 528, 175, 176, 177, 92, 2089, 91, 2437, 87,
	1498, 2324, 1059, 1545, 1060, 1061, 86, 1504, 1505, 1774,
	704, 1822, 2513, 704, 1059, 87, 1060, 1061, 1773, 1410,
	1411, 2323, 1597, 2259, 1546, 1929, 1548, 1574, 2034, 1551,
	1552, 1914, 1059, 1415, 1060, 1061, 2253, 2482, 2194, 527,
	1422, 1423, 1424, 2405, 1629, 1676, 1677, 1678, 1547, 2194,
	1680, 1682, 2196, 1059, 1861, 1060, 1061, 2018, 1641, 1642,
	1643, 1644, 1573, 527, 1169, 2168, 675, 1624, 1058, 527,
	1306, 1822, 2464, 1306, 86, 1306, 1607, 1059, 2322, 1060,
	1061, 1699, 92, 175, 176, 177, 1636, 1872, 1637, 1638,
	1639, 1640, 2459, 2458, 1593, 1576, 1625, 1657, 1690, 1903,
	1059, 1628, 1060, 1061, 1647, 1648, 1649, 1650, 1591, 1822,
	2443, 527, 1059, 1493, 1060, 1061, 1663, 1862, 1493, 1493,
	1612, 175, 176, 177, 1611, 1683, 1864, 84, 1839, 1627,
	1626, 708, 1169, 1059, 708, 1060, 1061, 591, 85, 574,
	576, 592, 593, 93, 572, 575, 594, 175, 176, 177,
	1770, 1681, 2381, 92, 173, 91, 1822, 2428, 1822, 2395,
	2066, 173, 1822, 2376, 2346, 1169, 173, 173, 2018, 1756,
	173, 1822, 173, 577, 578, 1687, 1658, 1839, 173, 1694,
	2098, 1668, 1697, 1669, 1698, 173, 1671, 1679, 1653, 1654,
	1613, 84, 1169, 2253, 1169, 1861, 899, 1838, 86, 1822,
	2251, 1770, 85, 1701, 1692, 1693, 1303, 1696, 1658, 898,
	1700, 1169, 1788, 173, 527, 2199, 1169, 2100, 2099, 1711,
	2096, 2097, 1169, 1709, 1713, 1714, 1710, 1079, 1080, 1081,
	1082, 1083, 1084, 1086, 1085, 1087, 1088, 2096, 2095, 2194,
	1514, 1839, 1169, 1787, 1515, 1747, 1748, 1770, 1169, 1700,
	1750, 1839, 1077, 1756, 1946, 1073, 1169, 1074, 1862, 1751,
	1700, 1719, 1268, 1931, 1925, 1926, 1684, 1756, 1586, 1170,
	1555, 1075, 1076, 1072, 1078, 1079, 1080, 1081, 1082, 1083,
	1084, 1086, 1085, 1087, 1088, 1818, 1470, 1822, 1821, 1058,
	1169, 1173, 1077, 1765, 1975, 1767, 1268, 1267, 1556, 1575,
	86, 1740, 1213, 1212, 1449, 1395, 1199, 881, 880, 2238,
	2501, 2441, 1766, 665, 1078, 1079, 1080, 1081, 1082, 1083,
	1084, 1086, 1085, 1087, 1088, 2495, 2400, 173, 2397, 79,
	2375, 2369, 2336, 1176, 2309, 173, 2230, 1540, 1270, 1656,
	2132, 2094, 1932, 527, 1335, 1857, 1652, 1754, 1646, 580,
	1645, 1383, 1298, 1294, 1827, 1266, 1077, 1770, 1768, 2239,
	2240, 2241, 104, 2371, 1800, 174, 1908, 174, 1907, 1764,
	174, 963, 2135, 1471, 173, 2206, 2207, 173, 1078, 1079,
	1080, 1081, 1082, 1083, 1084, 1086, 1085, 1087, 1088, 79,
	1835, 2337, 1871, 2242, 1336, 1337, 1338, 1667, 528, 528,
	528, 2520, 2516, 33, 1782, 2445, 526, 2409, 2209, 1547,
	1780, 2212, 1855, 1823, 2115, 1908, 528, 528, 1532, 1521,
	1522, 1523, 1524, 1534, 1525, 1526, 1527, 1539, 1535, 1528,
	1529, 1536, 1537, 1538, 1530, 1531, 1533, 2114, 527, 1819,
	2243, 2244, 1332, 173, 2113, 1791, 1792, 2034, 1146, 706,
	173, 1918, 856, 1741, 863, 1546, 527, 1801, 691, 1442,
	2211, 1809, 527, 2053, 1167, 1163, 1306, 1306, 1815, 1896,
	1897, 527, 1854, 1924, 2052, 2056, 1830, 1820, 1876, 1164,
	2057, 2054, 2457, 1943, 1859, 2429, 2055, 1942, 1580, 1333,
	1334, 1177, 1572, 2200, 173, 173, 173, 173, 173, 1863,
	2028, 2030, 1866, 2119, 1570, 1571, 1166, 1077, 1165, 2031,
	1663, 173, 173, 1877, 2015, 2014, 2058, 1910, 1848, 1849,
	2355, 540, 2288, 2290, 2190, 2025, 1394, 173, 1900, 1078,
	1079, 1080, 1081, 1082, 1083, 1084, 1086, 1085, 1087, 1088,
	2187, 679, 174, 1915, 1893, 1493, 654, 1909, 2186, 680,
	685, 1632, 1912, 1941, 1286, 928, 927, 1508, 2145, 174,
	1919, 1920, 1921, 84, 1907, 527, 1844, 1847, 1848, 1849,
	1845, 1509, 1846, 1850, 85, 1933, 1934, 84, 528, 527,
	1970, 174, 1031, 1939, 86, 1996, 528, 1938, 85, 173,
	111, 2192, 528, 527, 1940, 1588, 1589, 2491, 661, 86,
	2111, 1744, 527, 2378, 2332, 2006, 1978, 527, 527, 1892,
	173, 173, 173, 173, 173, 1977, 1852, 1577, 1962, 687,
	688, 1733, 173, 1760, 91, 2442, 1771, 173, 2296, 173,
	1775, 173, 1776, 1777, 173, 173, 173, 2046, 1979, 2294,
	2013, 1785, 2006, 2019, 1786, 667, 1992, 2040, 2012, 93,
	2293, 1993, 2065, 2286, 93, 2084, 2005, 2090, 2191, 92,
	92, 91, 173, 2189, 92, 1156, 91, 2116, 2075, 1790,
	86, 1685, 686, 2285, 2179, 2016, 1795, 1796, 1797, 1798,
	1799, 2037, 1575, 2109, 2020, 2067, 2037, 93, 2068, 173,
	2018, 1818, 1789, 1810, 2447, 2446, 527, 92, 669, 1186,
	95, 2048, 2049, 527, 2051, 668, 2047, 2059, 173, 2050,
	2447, 1167, 1163, 2084, 87, 97, 98, 2083, 173, 2361,
	2121, 1404, 2069, 2087, 677, 2063, 1164, 80, 1, 2411,
	2076, 496, 173, 2080, 1557, 173, 1144, 510, 2407, 1370,
	174, 2010, 1360, 2262, 2333, 2146, 1661, 889, 136, 1622,
	1623, 1160, 1161, 1166, 2424, 1165, 101, 2105, 852, 2104,
	2106, 2107, 100, 892, 990, 1686, 2254, 1894, 1633, 1219,
	2045, 1217, 528, 1218, 1216, 2083, 2118, 2120, 1221, 1220,
	1663, 1443, 173, 2127, 2125, 1968, 524, 1851, 1969, 528,
	528, 171, 528, 1208, 528, 528, 1187, 528, 528, 528,
	528, 528, 528, 2143, 2144, 2141, 2140, 929, 2117, 486,
	2101, 1717, 528, 2148, 492, 1101, 174, 2011, 1867, 705,
	2154, 698, 2147, 1844, 1847, 1848, 1849, 1845, 2042, 1846,
	1850, 2184, 174, 2206, 2207, 2024, 2026, 173, 1825, 2029,
	2022, 2354, 2287, 528, 2377, 174, 1630, 1183, 2151, 2152,
	1781, 2153, 2188, 1108, 2155, 2181, 2157, 1510, 1602, 1565,
	174, 706, 706, 706, 1463, 549, 2193, 548, 546, 1811,
	1832, 1064, 599, 1194, 2213, 1843, 174, 1841, 1840, 1033,
	1035, 173, 1742, 174, 173, 173, 173, 527, 1608, 2210,
	2208, 2217, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 528, 528, 528, 2249, 2216, 527, 527, 527, 527,
	2204, 2229, 2505, 2433, 2227, 2228, 1604, 1600, 1817, 2003,
	2004, 557, 550, 2269, 542, 2177, 2079, 2232, 1631, 2234,
	1949, 174, 2129, 1043, 1159, 2490, 536, 864, 1507, 2338,
	1759, 2165, 2258, 527, 527, 527, 173, 1158, 1519, 1520,
	2317, 1873, 58, 36, 1138, 2203, 531, 2453, 1034, 693,
	31, 30, 2272, 29, 2043, 28, 27, 22, 2267, 2282,
	527, 21, 527, 20, 19, 18, 2218, 2219, 24, 17,
	16, 2061, 2062, 15, 2268, 106, 45, 42, 40, 113,
	528, 112, 43, 2312, 2303, 2291, 2311, 39, 2283, 2292,
	1062, 527, 966, 2305, 2301, 528, 528, 33, 2307, 2040,
	2299, 37, 26, 2040, 2280, 2281, 25, 14, 2321, 13,
	12, 661, 11, 10, 9, 8, 4, 1037, 1109, 23,
	2, 2222, 527, 0, 174, 0, 0, 0, 0, 0,
	0, 1190, 2037, 0, 0, 0, 0, 0, 0, 706,
	0, 0, 0, 2327, 0, 1209, 0, 2328, 0, 2325,
	174, 0, 0, 528, 0, 540, 0, 0, 0, 0,
	0, 0, 2335, 174, 0, 0, 528, 0, 0, 0,
	527, 0, 174, 0, 174, 174, 528, 2353, 2350, 528,
	2351, 0, 0, 0, 0, 0, 0, 2365, 0, 0,
	528, 0, 0, 0, 2364, 2362, 0, 527, 173, 2150,
	0, 0, 0, 0, 0, 2040, 0, 527, 2368, 0,
	2159, 2160, 2162, 2164, 2383, 2313, 2314, 0, 2380, 0,
	2170, 661, 0, 2171, 527, 0, 0, 0, 2175, 0,
	0, 33, 0, 0, 0, 1185, 527, 0, 0, 0,
	0, 0, 527, 527, 0, 528, 0, 0, 0, 0,
	2393, 0, 0, 2406, 0, 2398, 0, 173, 527, 2197,
	2198, 527, 0, 2202, 2418, 2410, 2423, 2415, 0, 528,
	0, 0, 0, 0, 0, 528, 0, 33, 2438, 0,
	2432, 2214, 2335, 2425, 0, 0, 0, 0, 0, 0,
	2444, 0, 0, 0, 0, 0, 0, 0, 0, 2037,
	2450, 0, 0, 0, 0, 0, 0, 0, 2456, 0,
	2463, 0, 0, 0, 2461, 0, 0, 528, 2466, 0,
	527, 2472, 2465, 0, 0, 856, 0, 2478, 2476, 0,
	2312, 2474, 0, 2479, 0, 0, 0, 2481, 1138, 0,
	2252, 0, 1312, 1312, 0, 1312, 0, 1312, 1312, 2492,
	1321, 1312, 1312, 1312, 1312, 1312, 2496, 2493, 0, 0,
	174, 0, 527, 1138, 1138, 856, 2312, 174, 2515, 2502,
	2514, 2499, 174, 174, 2084, 2519, 174, 2517, 174, 2504,
	2480, 0, 0, 0, 174, 0, 0, 0, 0, 0,
	2277, 174, 0, 0, 0, 0, 1382, 0, 2494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 174,
	528, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 2320, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 706, 706, 706, 0, 111, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 0, 0, 2331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2341, 2342,
	2343, 0, 2344, 2345, 2347, 0, 0, 0, 2348, 2349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1406, 150, 0, 151,
	0, 0, 0, 174, 0, 0, 0, 0, 0, 168,
	0, 174, 0, 1503, 0, 0, 0, 0, 0, 528,
	1138, 0, 0, 0, 0, 0, 2385, 0, 1517, 1518,
	0, 0, 706, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	174, 0, 0, 174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1459, 1460, 1461,
	1462, 0, 0, 0, 0, 0, 1579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1190,
	0, 0, 706, 0, 0, 0, 0, 2451, 2452, 706,
	0, 0, 706, 154, 528, 0, 0, 1500, 1501, 174,
	0, 0, 159, 856, 0, 1506, 174, 0, 0, 0,
	0, 0, 528, 0, 0, 0, 0, 0, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 540, 0, 0,
	174, 174, 174, 174, 174, 0, 0, 0, 863, 0,
	0, 0, 0, 0, 0, 0, 0, 174, 174, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1584, 1585, 856, 174, 0, 0, 0, 0, 863, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1619, 0, 0, 146,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	856, 0, 0, 0, 0, 528, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 174, 0, 0, 0, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 528, 111,
	0, 133, 0, 528, 528, 1659, 174, 174, 174, 174,
	174, 0, 153, 0, 0, 0, 0, 0, 174, 0,
	0, 0, 0, 174, 0, 174, 0, 174, 0, 0,
	174, 174, 174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 143, 0, 0, 0, 0, 132, 0,
	0, 0, 0, 0, 0, 0, 0, 581, 174, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 150, 0,
	151, 0, 0, 1753, 0, 0, 120, 121, 142, 141,
	168, 0, 0, 0, 0, 174, 0, 0, 0, 0,
	0, 0, 528, 0, 0, 0, 0, 0, 0, 528,
	0, 0, 0, 172, 174, 0, 482, 0, 0, 522,
	0, 0, 0, 0, 174, 0, 482, 606, 71, 0,
	0, 0, 0, 0, 482, 0, 0, 0, 174, 0,
	0, 174, 1147, 0, 0, 0, 674, 0, 0, 0,
	147, 152, 149, 155, 156, 157, 158, 160, 161, 162,
	163, 0, 692, 0, 0, 0, 164, 165, 166, 167,
	0, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 118, 144, 125, 117, 174, 138,
	139, 481, 0, 706, 154, 0, 0, 664, 0, 71,
	0, 530, 0, 159, 126, 0, 0, 0, 0, 657,
	0, 0, 1812, 0, 0, 0, 0, 664, 129, 127,
	122, 123, 124, 128, 0, 0, 0, 0, 119, 0,
	0, 0, 0, 0, 0, 0, 0, 130, 0, 0,
	0, 0, 0, 174, 0, 0, 860, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1784, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 174, 0, 0,
	174, 174, 174, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1913, 0, 0,
	146, 0, 528, 528, 528, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1579, 0, 0, 0, 0,
	0, 1930, 0, 0, 0, 1185, 0, 0, 0, 0,
	1935, 0, 0, 0, 0, 0, 0, 0, 0, 528,
	528, 528, 174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 528, 0, 528, 0,
	0, 0, 0, 0, 0, 140, 0, 70, 35, 72,
	0, 0, 0, 0, 0, 0, 0, 134, 0, 0,
	135, 0, 0, 0, 0, 0, 76, 528, 0, 0,
	38, 64, 65, 0, 62, 66, 0, 0, 0, 0,
	0, 0, 0, 63, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 706, 0, 0, 0, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1312, 0,
	0, 0, 51, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2021, 79, 0, 0, 0, 0, 0, 0,
	0, 706, 0, 1138, 0, 0, 2044, 1312, 1138, 0,
	0, 0, 0, 0, 0, 0, 528, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 152, 149, 155, 156, 157, 158, 160, 161,
	162, 163, 0, 528, 174, 0, 0, 164, 165, 166,
	167, 0, 0, 528, 0, 0, 0, 1994, 1995, 0,
	0, 0, 1998, 0, 0, 0, 2000, 2001, 2002, 0,
	528, 0, 0, 0, 0, 0, 482, 0, 482, 0,
	0, 482, 528, 0, 0, 0, 0, 0, 528, 528,
	0, 0, 0, 0, 0, 856, 0, 0, 1138, 0,
	0, 0, 1579, 174, 528, 0, 0, 528, 0, 0,
	0, 0, 41, 44, 47, 46, 49, 0, 61, 0,
	0, 67, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2064, 0, 0, 0,
	0, 0, 0, 50, 75, 74, 0, 0, 59, 60,
	48, 967, 0, 972, 0, 0, 974, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 528, 0, 0, 1026,
	1026, 1026, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 71,
	52, 53, 0, 54, 55, 56, 57, 0, 0, 0,
	0, 0, 1139, 0, 0, 0, 0, 0, 528, 0,
	0, 0, 0, 0, 0, 0, 664, 1097, 1098, 1099,
	0, 1102, 0, 1104, 1105, 1106, 1107, 0, 1110, 1112,
	1112, 0, 1112, 1116, 1116, 1118, 1119, 1120, 1121, 0,
	1123, 1124, 1125, 1126, 1127, 0, 0, 0, 0, 1116,
	1116, 1116, 1116, 482, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	674, 0, 0, 0, 0, 0, 0, 0, 2167, 0,
	0, 0, 0, 0, 0, 0, 1579, 0, 0, 0,
	0, 0, 482, 0, 0, 0, 0, 2180, 0, 0,
	0, 0, 0, 0, 0, 2263, 2264, 2265, 2266, 0,
	0, 0, 0, 0, 73, 1148, 0, 0, 664, 0,
	540, 0, 664, 0, 0, 0, 0, 78, 664, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2278, 2278, 2278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2226, 0, 0,
	0, 0, 0, 0, 1138, 0, 0, 1196, 0, 2304,
	0, 2306, 0, 2231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1579, 0, 0, 0, 0, 2257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 706, 0, 0, 0, 0, 169, 0, 0, 0,
	2270, 0, 2271, 0, 0, 0, 1285, 2274, 2275, 0,
	0, 482, 0, 0, 0, 0, 0, 0, 0, 111,
	0, 133, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 2300, 0, 0, 0, 0, 1579,
	0, 0, 0, 0, 0, 2308, 0, 0, 2310, 0,
	0, 0, 0, 0, 0, 0, 1139, 0, 0, 0,
	0, 0, 0, 143, 0, 0, 1579, 0, 132, 0,
	0, 0, 0, 0, 0, 0, 2389, 0, 0, 0,
	0, 1139, 1139, 0, 0, 0, 1214, 482, 150, 0,
	151, 1138, 0, 2394, 0, 0, 1289, 1290, 142, 141,
	168, 0, 0, 1358, 0, 1579, 0, 0, 0, 0,
	0, 706, 706, 0, 0, 0, 482, 0, 0, 0,
	0, 0, 0, 0, 2352, 540, 0, 2435, 0, 0,
	1579, 1403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 482, 0, 0,
	0, 0, 0, 0, 482, 0, 0, 2374, 0, 0,
	0, 0, 1343, 1426, 1427, 482, 482, 482, 482, 482,
	482, 482, 2460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1236, 0, 0, 0, 0, 0, 0, 2435,
	0, 1384, 0, 137, 1291, 144, 0, 1288, 0, 138,
	139, 0, 482, 0, 154, 0, 0, 0, 2399, 0,
	0, 0, 0, 159, 0, 0, 0, 0, 2419, 0,
	0, 0, 1413, 0, 0, 0, 0, 0, 0, 1417,
	0, 1579, 1026, 1026, 1026, 0, 0, 0, 0, 0,
	1428, 1429, 1430, 1431, 1432, 1433, 1434, 0, 0, 0,
	0, 0, 0, 0, 0, 692, 0, 0, 0, 0,
	0, 0, 692, 692, 0, 0, 0, 0, 1139, 0,
	0, 0, 0, 0, 0, 0, 0, 1452, 0, 692,
	1403, 692, 692, 692, 692, 692, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1358, 0, 0, 1224, 0,
	0, 0, 0, 0, 0, 0, 0, 692, 0, 0,
	146, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 674, 0, 0, 2500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 482, 0, 0, 0, 0, 0,
	1403, 0, 0, 482, 0, 482, 1610, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1237, 0,
	0, 0, 0, 0, 0, 140, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 0, 0,
	135, 0, 0, 0, 0, 1603, 0, 0, 0, 1590,
	0, 0, 0, 0, 0, 0, 0, 0, 1596, 0,
	0, 1452, 0, 0, 0, 0, 0, 0, 0, 0,
	1250, 1253, 1254, 1255, 1256, 1257, 1258, 0, 1259, 1260,
	1261, 1262, 1263, 1238, 1239, 1240, 1241, 1222, 1223, 1251,
	0, 1225, 0, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
	1233, 1234, 1235, 1242, 1243, 1244, 1245, 1246, 1247, 1248,
	1249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 152, 149, 155, 156, 157, 158, 160, 161,
	162, 163, 0, 0, 0, 0, 0, 164, 165, 166,
	167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 482, 0, 0, 0, 0, 0, 0, 482, 0,
	0, 0, 0, 482, 482, 0, 0, 482, 0, 1745,
	0, 0, 0, 0, 0, 482, 0, 1252, 0, 0,
	0, 0, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1452, 0, 0, 0,
	0, 0, 0, 1728, 0, 0, 0, 0, 1738, 1739,
	0, 0, 1743, 0, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 0, 0, 1749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 692, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1752, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	692, 692, 0, 0, 0, 0, 0, 0, 1224, 0,
	0, 1403, 0, 0, 482, 0, 0, 0, 0, 0,
	0, 0, 1358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 482, 0, 1793, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1808, 0, 0, 0, 0, 0, 0, 0, 1237, 0,
	0, 0, 0, 0, 0, 664, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1836, 1837, 0, 0, 0, 0, 0, 0,
	0, 1856, 0, 0, 0, 0, 0, 0, 0, 0,
	482, 0, 0, 0, 0, 0, 0, 1922, 0, 1858,
	1250, 1253, 1254, 1255, 1256, 1257, 1258, 0, 1259, 1260,
	1261, 1262, 1263, 1238, 1239, 1240, 1241, 1222, 1223, 1251,
	0, 1225, 0, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
	1233, 1234, 1235, 1242, 1243, 1244, 1245, 1246, 1247, 1248,
	1249, 482, 482, 482, 482, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 482, 482,
	0, 0, 0, 0, 0, 1916, 0, 0, 0, 0,
	0, 0, 0, 0, 482, 0, 0, 0, 0, 1936,
	0, 0, 0, 0, 0, 0, 0, 0, 692, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 692, 0, 0, 0, 0, 1953, 1954, 1955, 1956,
	1957, 0, 0, 0, 0, 0, 0, 1252, 0, 0,
	0, 0, 0, 1452, 1963, 0, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1971,
	0, 1139, 0, 0, 0, 0, 1139, 482, 482, 482,
	482, 482, 0, 0, 0, 0, 0, 0, 0, 2060,
	0, 0, 0, 0, 482, 0, 1358, 0, 482, 0,
	0, 482, 2070, 1403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1603, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 482,
	0, 0, 2041, 0, 71, 0, 0, 1603, 1603, 1603,
	1603, 1603, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1856, 0, 482, 0, 1603, 0,
	0, 1603, 0, 0, 0, 0, 1139, 0, 0, 0,
	0, 0, 0, 0, 0, 482, 0, 0, 0, 2078,
	0, 0, 0, 0, 0, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 482,
	0, 0, 482, 0, 2093, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2112, 0, 0, 0, 0, 0, 2126, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 482,
	2124, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2128, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2139, 0, 0, 2142, 2149, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 482, 2172, 2173, 2174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 482, 0,
	0, 482, 482, 482, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 1603, 600, 607, 608, 609, 610,
	601, 603, 0, 0, 0, 602, 0, 0, 605, 611,
	612, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1358, 0, 0, 0, 0, 0, 0,
	0, 2085, 2086, 2245, 0, 0, 2246, 2247, 2248, 0,
	0, 0, 1139, 613, 614, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2041, 0, 71, 0, 2041, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1139,
	2041, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2379, 0, 0, 0, 0, 0,
	71, 0, 0, 0, 1358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2384, 591, 0, 0, 0, 592, 593, 0, 0, 0,
	594, 834, 820, 406, 768, 837, 738, 756, 847, 759,
	762, 802, 717, 781, 329, 753, 71, 742, 713, 748,
	714, 740, 770, 233, 737, 822, 785, 836, 285, 230,
	719, 743, 343, 758, 184, 804, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	843, 289, 791, 0, 391, 314, 0, 0, 0, 772,
	826, 779, 816, 767, 803, 727, 790, 838, 754, 799,
	839, 275, 216, 183, 326, 392, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 2426, 0, 2427, 0, 0,
	0, 0, 0, 207, 0, 214, 750, 796, 833, 751,
	798, 228, 273, 235, 227, 410, 844, 825, 0, 0,
	199, 835, 774, 0, 801, 0, 850, 712, 793, 0,
	715, 718, 846, 829, 746, 238, 0, 0, 0, 0,
	0, 0, 0, 771, 780, 813, 765, 0, 0, 0,
	0, 0, 0, 0, 744, 0, 789, 0, 0, 0,
	723, 716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 769, 0, 0, 0, 726, 0, 745,
	814, 0, 710, 256, 720, 315, 0, 818, 828, 766,
	442, 832, 764, 763, 808, 724, 824, 757, 284, 722,
	281, 179, 195, 0, 755, 325, 365, 371, 823, 741,
	749, 219, 747, 369, 339, 427, 203, 246, 362, 344,
	367, 788, 806, 368, 290, 415, 357, 425, 443, 444,
	226, 319, 433, 404, 439, 455, 196, 223, 333, 397,
	430, 388, 312, 411, 412, 280, 387, 254, 182, 288,
	449, 194, 377, 211, 201, 187, 399, 423, 208, 380,
	0, 0, 457, 189, 421, 396, 308, 277, 278, 188,
	0, 361, 231, 252, 221, 328, 418, 419, 220, 458,
	198, 438, 191, 1028, 437, 321, 414, 422, 309, 300,
	190, 420, 307, 299, 283, 242, 263, 355, 293, 356,
	264, 317, 316, 318, 0, 185, 0, 393, 431, 459,
	204, 205, 206, 736, 241, 245, 251, 253, 259, 260,
	267, 286, 332, 354, 352, 358, 819, 409, 426, 434,
	441, 447, 448, 450, 451, 452, 453, 454, 320, 266,
	389, 282, 291, 811, 849, 338, 370, 209, 429, 390,
	731, 735, 729, 730, 783, 784, 732, 840, 841, 842,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 815,
	725, 0, 733, 734, 0, 821, 830, 831, 787, 178,
	192, 287, 845, 359, 249, 456, 436, 432, 711, 728,
	225, 739, 0, 0, 752, 760, 761, 773, 775, 776,
	777, 778, 311, 794, 795, 797, 805, 807, 810, 812,
	817, 827, 848, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 270, 271, 274, 279, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 378, 379, 383, 384,
	385, 386, 394, 398, 416, 417, 428, 440, 445, 258,
	424, 446, 0, 296, 786, 792, 298, 243, 261, 272,
	800, 435, 395, 197, 366, 250, 186, 215, 200, 222,
	237, 240, 276, 306, 313, 342, 346, 255, 234, 213,
	363, 210, 381, 401, 402, 403, 405, 310, 229, 345,
	782, 809, 294, 407, 408, 268, 834, 820, 406, 768,
	837, 738, 756, 847, 759, 762, 802, 717, 781, 329,
	753, 0, 742, 713, 748, 714, 740, 770, 233, 737,
	822, 785, 836, 285, 230, 719, 743, 343, 758, 184,
	804, 382, 218, 295, 292, 413, 244, 236, 232, 217,
	269, 301, 341, 400, 335, 843, 289, 791, 0, 391,
	314, 0, 0, 0, 772, 826, 779, 816, 767, 803,
	727, 790, 838, 754, 799, 839, 275, 216, 183, 326,
	392, 248, 0, 0, 0, 0, 175, 176, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 0,
	214, 750, 796, 833, 751, 798, 228, 273, 235, 227,
	410, 844, 825, 0, 0, 199, 835, 774, 0, 801,
	0, 850, 712, 793, 0, 715, 718, 846, 829, 746,
	238, 0, 0, 0, 0, 0, 0, 0, 771, 780,
	813, 765, 0, 0, 0, 0, 0, 2071, 0, 744,
	0, 789, 0, 0, 0, 723, 716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 769, 0,
	0, 0, 726, 0, 745, 814, 0, 710, 256, 720,
	315, 0, 818, 828, 766, 442, 832, 764, 763, 808,
	724, 824, 757, 284, 722, 281, 179, 195, 0, 755,
	325, 365, 371, 823, 741, 749, 219, 747, 369, 339,
	427, 203, 246, 362, 344, 367, 788, 806, 368, 290,
	415, 357, 425, 443, 444, 226, 319, 433, 404, 439,
	455, 196, 223, 333, 397, 430, 388, 312, 411, 412,
	280, 387, 254, 182, 288, 449, 194, 377, 211, 201,
	187, 399, 423, 208, 380, 0, 0, 457, 189, 421,
	396, 308, 277, 278, 188, 0, 361, 231, 252, 221,
	328, 418, 419, 220, 458, 198, 438, 191, 1028, 437,
	321, 414, 422, 309, 300, 190, 420, 307, 299, 283,
	242, 263, 355, 293, 356, 264, 317, 316, 318, 0,
	185, 0, 393, 431, 459, 204, 205, 206, 736, 241,
	245, 251, 253, 259, 260, 267, 286, 332, 354, 352,
	358, 819, 409, 426, 434, 441, 447, 448, 450, 451,
	452, 453, 454, 320, 266, 389, 282, 291, 811, 849,
	338, 370, 209, 429, 390, 731, 735, 729, 730, 783,
	784, 732, 840, 841, 842, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 815, 725, 0, 733, 734, 0,
	821, 830, 831, 787, 178, 192, 287, 845, 359, 249,
	456, 436, 432, 711, 728, 225, 739, 0, 0, 752,
	760, 761, 773, 775, 776, 777, 778, 311, 794, 795,
	797, 805, 807, 810, 812, 817, 827, 848, 180, 181,
	193, 202, 212, 224, 239, 247, 257, 262, 265, 270,
	271, 274, 279, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 347, 348,
	349, 350, 351, 353, 360, 364, 372, 373, 374, 375,
	376, 378, 379, 383, 384, 385, 386, 394, 398, 416,
	417, 428, 440, 445, 258, 424, 446, 0, 296, 786,
	792, 298, 243, 261, 272, 800, 435, 395, 197, 366,
	250, 186, 215, 200, 222, 237, 240, 276, 306, 313,
	342, 346, 255, 234, 213, 363, 210, 381, 401, 402,
	403, 405, 310, 229, 345, 782, 809, 294, 407, 408,
	268, 834, 820, 406, 768, 837, 738, 756, 847, 759,
	762, 802, 717, 781, 329, 753, 0, 742, 713, 748,
	714, 740, 770, 233, 737, 822, 785, 836, 285, 230,
	719, 743, 343, 758, 184, 804, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	843, 289, 791, 0, 391, 314, 0, 0, 0, 772,
	826, 779, 816, 767, 803, 727, 790, 838, 754, 799,
	839, 275, 216, 183, 326, 392, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 750, 796, 833, 751,
	798, 228, 273, 235, 227, 410, 844, 825, 0, 0,
	199, 835, 774, 0, 801, 0, 850, 712, 793, 0,
	715, 718, 846, 829, 746, 238, 0, 0, 0, 0,
	0, 0, 0, 771, 780, 813, 765, 0, 0, 0,
	0, 0, 2032, 0, 744, 0, 789, 0, 0, 0,
	723, 716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 769, 0, 0, 0, 726, 0, 745,
	814, 0, 710, 256, 720, 315, 0, 818, 828, 766,
	442, 832, 764, 763, 808, 724, 824, 757, 284, 722,
	281, 179, 195, 0, 755, 325, 365, 371, 823, 741,
	749, 219, 747, 369, 339, 427, 203, 246, 362, 344,
	367, 788, 806, 368, 290, 415, 357, 425, 443, 444,
	226, 319, 433, 404, 439, 455, 196, 223, 333, 397,
	430, 388, 312, 411, 412, 280, 387, 254, 182, 288,
	449, 194, 377, 211, 201, 187, 399, 423, 208, 380,
	0, 0, 457, 189, 421, 396, 308, 277, 278, 188,
	0, 361, 231, 252, 221, 328, 418, 419, 220, 458,
	198, 438, 191, 1028, 437, 321, 414, 422, 309, 300,
	190, 420, 307, 299, 283, 242, 263, 355, 293, 356,
	264, 317, 316, 318, 0, 185, 0, 393, 431, 459,
	204, 205, 206, 736, 241, 245, 251, 253, 259, 260,
	267, 286, 332, 354, 352, 358, 819, 409, 426, 434,
	441, 447, 448, 450, 451, 452, 453, 454, 320, 266,
	389, 282, 291, 811, 849, 338, 370, 209, 429, 390,
	731, 735, 729, 730, 783, 784, 732, 840, 841, 842,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 815,
	725, 0, 733, 734, 0, 821, 830, 831, 787, 178,
	192, 287, 845, 359, 249, 456, 436, 432, 711, 728,
	225, 739, 0, 0, 752, 760, 761, 773, 775, 776,
	777, 778, 311, 794, 795, 797, 805, 807, 810, 812,
	817, 827, 848, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 270, 271, 274, 279, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 378, 379, 383, 384,
	385, 386, 394, 398, 416, 417, 428, 440, 445, 258,
	424, 446, 0, 296, 786, 792, 298, 243, 261, 272,
	800, 435, 395, 197, 366, 250, 186, 215, 200, 222,
	237, 240, 276, 306, 313, 342, 346, 255, 234, 213,
	363, 210, 381, 401, 402, 403, 405, 310, 229, 345,
	782, 809, 294, 407, 408, 268, 834, 820, 406, 768,
	837, 738, 756, 847, 759, 762, 802, 717, 781, 329,
	753, 0, 742, 713, 748, 714, 740, 770, 233, 737,
	822, 785, 836, 285, 230, 719, 743, 343, 758, 184,
	804, 382, 218, 295, 292, 413, 244, 236, 232, 217,
	269, 301, 341, 400, 335, 843, 289, 791, 0, 391,
	314, 0, 0, 0, 772, 826, 779, 816, 767, 803,
	727, 790, 838, 754, 799, 839, 275, 216, 183, 326,
	392, 248, 0, 0, 0, 0, 175, 176, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 0,
	214, 750, 796, 833, 751, 798, 228, 273, 235, 227,
	410, 844, 825, 0, 0, 199, 835, 774, 0, 801,
	0, 850, 712, 793, 0, 715, 718, 846, 829, 746,
	238, 0, 0, 0, 0, 0, 0, 0, 771, 780,
	813, 765, 0, 0, 0, 0, 0, 1592, 0, 744,
	0, 789, 0, 0, 0, 723, 716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 769, 0,
	0, 0, 726, 0, 745, 814, 0, 710, 256, 720,
	315, 0, 818, 828, 766, 442, 832, 764, 763, 808,
	724, 824, 757, 284, 722, 281, 179, 195, 0, 755,
	325, 365, 371, 823, 741, 749, 219, 747, 369, 339,
	427, 203, 246, 362, 344, 367, 788, 806, 368, 290,
	415, 357, 425, 443, 444, 226, 319, 433, 404, 439,
	455, 196, 223, 333, 397, 430, 388, 312, 411, 412,
	280, 387, 254, 182, 288, 449, 194, 377, 211, 201,
	187, 399, 423, 208, 380, 0, 0, 457, 189, 421,
	396, 308, 277, 278, 188, 0, 361, 231, 252, 221,
	328, 418, 419, 220, 458, 198, 438, 191, 1028, 437,
	321, 414, 422, 309, 300, 190, 420, 307, 299, 283,
	242, 263, 355, 293, 356, 264, 317, 316, 318, 0,
	185, 0, 393, 431, 459, 204, 205, 206, 736, 241,
	245, 251, 253, 259, 260, 267, 286, 332, 354, 352,
	358, 819, 409, 426, 434, 441, 447, 448, 450, 451,
	452, 453, 454, 320, 266, 389, 282, 291, 811, 849,
	338, 370, 209, 429, 390, 731, 735, 729, 730, 783,
	784, 732, 840, 841, 842, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 815, 725, 0, 733, 734, 0,
	821, 830, 831, 787, 178, 192, 287, 845, 359, 249,
	456, 436, 432, 711, 728, 225, 739, 0, 0, 752,
	760, 761, 773, 775, 776, 777, 778, 311, 794, 795,
	797, 805, 807, 810, 812, 817, 827, 848, 180, 181,
	193, 202, 212, 224, 239, 247, 257, 262, 265, 270,
	271, 274, 279, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 347, 348,
	349, 350, 351, 353, 360, 364, 372, 373, 374, 375,
	376, 378, 379, 383, 384, 385, 386, 394, 398, 416,
	417, 428, 440, 445, 258, 424, 446, 0, 296, 786,
	792, 298, 243, 261, 272, 800, 435, 395, 197, 366,
	250, 186, 215, 200, 222, 237, 240, 276, 306, 313,
	342, 346, 255, 234, 213, 363, 210, 381, 401, 402,
	403, 405, 310, 229, 345, 782, 809, 294, 407, 408,
	268, 834, 820, 406, 768, 837, 738, 756, 847, 759,
	762, 802, 717, 781, 329, 753, 0, 742, 713, 748,
	714, 740, 770, 233, 737, 822, 785, 836, 285, 230,
	719, 743, 343, 758, 184, 804, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	843, 289, 791, 0, 391, 314, 0, 0, 0, 772,
	826, 779, 816, 767, 803, 727, 790, 838, 754, 799,
	839, 275, 216, 183, 326, 392, 248, 0, 79, 0,
	0, 175, 176, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 750, 796, 833, 751,
	798, 228, 273, 235, 227, 410, 844, 825, 0, 0,
	199, 835, 774, 0, 801, 0, 850, 712, 793, 0,
	715, 718, 846, 829, 746, 238, 0, 0, 0, 0,
	0, 0, 0, 771, 780, 813, 765, 0, 0, 0,
	0, 0, 0, 0, 744, 0, 789, 0, 0, 0,
	723, 716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 769, 0, 0, 0, 726, 0, 745,
	814, 0, 710, 256, 720, 315, 0, 818, 828, 766,
	442, 832, 764, 763, 808, 724, 824, 757, 284, 722,
	281, 179, 195, 0, 755, 325, 365, 371, 823, 741,
	749, 219, 747, 369, 339, 427, 203, 246, 362, 344,
	367, 788, 806, 368, 290, 415, 357, 425, 443, 444,
	226, 319, 433, 404, 439, 455, 196, 223, 333, 397,
	430, 388, 312, 411, 412, 280, 387, 254, 182, 288,
	449, 194, 377, 211, 201, 187, 399, 423, 208, 380,
	0, 0, 457, 189, 421, 396, 308, 277, 278, 188,
	0, 361, 231, 252, 221, 328, 418, 419, 220, 458,
	198, 438, 191, 1028, 437, 321, 414, 422, 309, 300,
	190, 420, 307, 299, 283, 242, 263, 355, 293, 356,
	264, 317, 316, 318, 0, 185, 0, 393, 431, 459,
	204, 205, 206, 736, 241, 245, 251, 253, 259, 260,
	267, 286, 332, 354, 352, 358, 819, 409, 426, 434,
	441, 447, 448, 450, 451, 452, 453, 454, 320, 266,
	389, 282, 291, 811, 849, 338, 370, 209, 429, 390,
	731, 735, 729, 730, 783, 784, 732, 840, 841, 842,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 815,
	725, 0, 733, 734, 0, 821, 830, 831, 787, 178,
	192, 287, 845, 359, 249, 456, 436, 432, 711, 728,
	225, 739, 0, 0, 752, 760, 761, 773, 775, 776,
	777, 778, 311, 794, 795, 797, 805, 807, 810, 812,
	817, 827, 848, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 270, 271, 274, 279, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 378, 379, 383, 384,
	385, 386, 394, 398, 416, 417, 428, 440, 445, 258,
	424, 446, 0, 296, 786, 792, 298, 243, 261, 272,
	800, 435, 395, 197, 366, 250, 186, 215, 200, 222,
	237, 240, 276, 306, 313, 342, 346, 255, 234, 213,
	363, 210, 381, 401, 402, 403, 405, 310, 229, 345,
	782, 809, 294, 407, 408, 268, 834, 820, 406, 768,
	837, 738, 756, 847, 759, 762, 802, 717, 781, 329,
	753, 0, 742, 713, 748, 714, 740, 770, 233, 737,
	822, 785, 836, 285, 230, 719, 743, 343, 758, 184,
	804, 382, 218, 295, 292, 413, 244, 236, 232, 217,
	269, 301, 341, 400, 335, 843, 289, 791, 0, 391,
	314, 0, 0, 0, 772, 826, 779, 816, 767, 803,
	727, 790, 838, 754, 799, 839, 275, 216, 183, 326,
	392, 248, 0, 0, 0, 0, 175, 176, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 0,
	214, 750, 796, 833, 751, 798, 228, 273, 235, 227,
	410, 844, 825, 0, 0, 199, 835, 774, 0, 801,
	0, 850, 712, 793, 0, 715, 718, 846, 829, 746,
	238, 0, 0, 0, 0, 0, 0, 0, 771, 780,
	813, 765, 0, 0, 0, 0, 0, 0, 0, 744,
	0, 789, 0, 0, 0, 723, 716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 769, 0,
	0, 0, 726, 0, 745, 814, 0, 710, 256, 720,
	315, 0, 818, 828, 766, 442, 832, 764, 763, 808,
	724, 824, 757, 284, 722, 281, 179, 195, 0, 755,
	325, 365, 371, 823, 741, 749, 219, 747, 369, 339,
	427, 203, 246, 362, 344, 367, 788, 806, 368, 290,
	415, 357, 425, 443, 444, 226, 319, 433, 404, 439,
	455, 196, 223, 333, 397, 430, 388, 312, 411, 412,
	280, 387, 254, 182, 288, 449, 194, 377, 211, 201,
	187, 399, 423, 208, 380, 0, 0, 457, 189, 421,
	396, 308, 277, 278, 188, 0, 361, 231, 252, 221,
	328, 418, 419, 220, 458, 198, 438, 191, 1028, 437,
	321, 414, 422, 309, 300, 190, 420, 307, 299, 283,
	242, 263, 355, 293, 356, 264, 317, 316, 318, 0,
	185, 0, 393, 431, 459, 204, 205, 206, 736, 241,
	245, 251, 253, 259, 260, 267, 286, 332, 354, 352,
	358, 819, 409, 426, 434, 441, 447, 448, 450, 451,
	452, 453, 454, 320, 266, 389, 282, 291, 811, 849,
	338, 370, 209, 429, 390, 731, 735, 729, 730, 783,
	784, 732, 840, 841, 842, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 815, 725, 0, 733, 734, 0,
	821, 830, 831, 787, 178, 192, 287, 845, 359, 249,
	456, 436, 432, 711, 728, 225, 739, 0, 0, 752,
	760, 761, 773, 775, 776, 777, 778, 311, 794, 795,
	797, 805, 807, 810, 812, 817, 827, 848, 180, 181,
	193, 202, 212, 224, 239, 247, 257, 262, 265, 270,
	271, 274, 279, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 347, 348,
	349, 350, 351, 353, 360, 364, 372, 373, 374, 375,
	376, 378, 379, 383, 384, 385, 386, 394, 398, 416,
	417, 428, 440, 445, 258, 424, 446, 0, 296, 786,
	792, 298, 243, 261, 272, 800, 435, 395, 197, 366,
	250, 186, 215, 200, 222, 237, 240, 276, 306, 313,
	342, 346, 255, 234, 213, 363, 210, 381, 401, 402,
	403, 405, 310, 229, 345, 782, 809, 294, 407, 408,
	268, 834, 820, 406, 768, 837, 738, 756, 847, 759,
	762, 802, 717, 781, 329, 753, 0, 742, 713, 748,
	714, 740, 770, 233, 737, 822, 785, 836, 285, 230,
	719, 743, 343, 758, 184, 804, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	843, 289, 791, 0, 391, 314, 0, 0, 0, 772,
	826, 779, 816, 767, 803, 727, 790, 838, 754, 799,
	839, 275, 216, 183, 326, 392, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 750, 796, 833, 751,
	798, 228, 273, 235, 227, 410, 844, 825, 0, 0,
	851, 835, 774, 0, 801, 0, 850, 712, 793, 0,
	715, 718, 846, 829, 746, 238, 0, 0, 0, 0,
	0, 0, 0, 771, 780, 813, 765, 0, 0, 0,
	0, 0, 0, 0, 744, 0, 789, 0, 0, 0,
	723, 716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 769, 0, 0, 0, 726, 0, 745,
	814, 0, 710, 256, 720, 315, 0, 818, 828, 766,
	442, 832, 764, 763, 808, 724, 824, 757, 284, 722,
	281, 179, 195, 0, 755, 325, 365, 371, 823, 741,
	749, 219, 747, 369, 339, 427, 203, 246, 362, 344,
	367, 788, 806, 368, 290, 415, 357, 425, 443, 444,
	226, 319, 433, 404, 439, 455, 196, 223, 333, 397,
	430, 388, 312, 411, 412, 280, 387, 254, 182, 288,
	449, 194, 377, 211, 201, 187, 399, 423, 208, 380,
	0, 0, 457, 189, 421, 396, 308, 277, 278, 188,
	0, 361, 231, 252, 221, 328, 418, 419, 220, 458,
	198, 438, 191, 721, 437, 321, 414, 422, 309, 300,
	190, 420, 307, 299, 283, 242, 263, 355, 293, 356,
	264, 317, 316, 318, 0, 185, 0, 393, 431, 459,
	204, 205, 206, 736, 241, 245, 251, 253, 259, 260,
	267, 286, 332, 354, 352, 358, 819, 409, 426, 434,
	441, 447, 448, 450, 451, 452, 453, 454, 709, 703,
	702, 282, 291, 811, 849, 338, 370, 209, 429, 390,
	731, 735, 729, 730, 783, 784, 732, 840, 841, 842,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 815,
	725, 0, 733, 734, 0, 821, 830, 831, 787, 178,
	192, 287, 845, 359, 249, 456, 436, 432, 711, 728,
	225, 739, 0, 0, 752, 760, 761, 773, 775, 776,
	777, 778, 311, 794, 795, 797, 805, 807, 810, 812,
	817, 827, 848, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 270, 271, 274, 279, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 378, 379, 383, 384,
	385, 386, 394, 398, 416, 417, 428, 440, 445, 258,
	424, 446, 0, 296, 786, 792, 298, 243, 261, 272,
	800, 435, 395, 197, 366, 250, 186, 215, 200, 222,
	237, 240, 276, 306, 313, 342, 346, 255, 234, 213,
	363, 210, 381, 401, 402, 403, 405, 310, 229, 345,
	782, 809, 294, 407, 408, 268, 834, 820, 406, 768,
	837, 738, 756, 847, 759, 762, 802, 717, 781, 329,
	753, 0, 742, 713, 748, 714, 740, 770, 233, 737,
	822, 785, 836, 285, 230, 719, 743, 343, 758, 184,
	804, 382, 218, 295, 292, 413, 244, 236, 232, 217,
	269, 301, 341, 400, 335, 843, 289, 791, 0, 391,
	314, 0, 0, 0, 772, 826, 779, 816, 767, 803,
	727, 790, 838, 754, 799, 839, 275, 216, 183, 326,
	392, 248, 0, 0, 0, 0, 175, 176, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 0,
	214, 750, 796, 833, 751, 798, 228, 273, 235, 227,
	410, 844, 825, 0, 0, 851, 835, 774, 0, 801,
	0, 850, 712, 793, 0, 715, 718, 846, 829, 746,
	238, 0, 0, 0, 0, 0, 0, 0, 771, 780,
	813, 765, 0, 0, 0, 0, 0, 0, 0, 744,
	0, 789, 0, 0, 0, 723, 716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 769, 0,
	0, 0, 726, 0, 745, 814, 0, 710, 256, 720,
	315, 0, 818, 828, 766, 442, 832, 764, 763, 808,
	724, 824, 757, 284, 722, 281, 179, 195, 0, 755,
	325, 365, 371, 823, 741, 749, 219, 747, 369, 339,
	427, 203, 246, 362, 344, 367, 788, 806, 368, 290,
	415, 357, 425, 443, 444, 226, 319, 433, 404, 439,
	455, 196, 223, 333, 397, 430, 388, 312, 411, 412,
	280, 387, 254, 182, 288, 449, 194, 377, 211, 201,
	187, 399, 1200, 208, 380, 0, 0, 457, 189, 421,
	396, 308, 277, 278, 188, 0, 361, 231, 252, 221,
	328, 418, 419, 220, 458, 198, 438, 191, 721, 437,
	321, 414, 422, 309, 300, 190, 420, 307, 299, 283,
	242, 263, 355, 293, 356, 264, 317, 316, 318, 0,
	185, 0, 393, 431, 459, 204, 205, 206, 736, 241,
	245, 251, 253, 259, 260, 267, 286, 332, 354, 352,
	358, 819, 409, 426, 434, 441, 447, 448, 450, 451,
	452, 453, 454, 709, 703, 702, 282, 291, 811, 849,
	338, 370, 209, 429, 390, 731, 735, 729, 730, 783,
	784, 732, 840, 841, 842, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 815, 725, 0, 733, 734, 0,
	821, 830, 831, 787, 178, 192, 287, 845, 359, 249,
	456, 436, 432, 711, 728, 225, 739, 0, 0, 752,
	760, 761, 773, 775, 776, 777, 778, 311, 794, 795,
	797, 805, 807, 810, 812, 817, 827, 848, 180, 181,
	193, 202, 212, 224, 239, 247, 257, 262, 265, 270,
	271, 274, 279, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 347, 348,
	349, 350, 351, 353, 360, 364, 372, 373, 374, 375,
	376, 378, 379, 383, 384, 385, 386, 394, 398, 416,
	417, 428, 440, 445, 258, 424, 446, 0, 296, 786,
	792, 298, 243, 261, 272, 800, 435, 395, 197, 366,
	250, 186, 215, 200, 222, 237, 240, 276, 306, 313,
	342, 346, 255, 234, 213, 363, 210, 381, 401, 402,
	403, 405, 310, 229, 345, 782, 809, 294, 407, 408,
	268, 834, 820, 406, 768, 837, 738, 756, 847, 759,
	762, 802, 717, 781, 329, 753, 0, 742, 713, 748,
	714, 740, 770, 233, 737, 822, 785, 836, 285, 230,
	719, 743, 343, 758, 184, 804, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	843, 289, 791, 0, 391, 314, 0, 0, 0, 772,
	826, 779, 816, 767, 803, 727, 790, 838, 754, 799,
	839, 275, 216, 183, 326, 392, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 750, 796, 833, 751,
	798, 228, 273, 235, 227, 410, 844, 825, 0, 0,
	851, 835, 774, 0, 801, 0, 850, 712, 793, 0,
	715, 718, 846, 829, 746, 238, 0, 0, 0, 0,
	0, 0, 0, 771, 780, 813, 765, 0, 0, 0,
	0, 0, 0, 0, 744, 0, 789, 0, 0, 0,
	723, 716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 769, 0, 0, 0, 726, 0, 745,
	814, 0, 710, 256, 720, 315, 0, 818, 828, 766,
	442, 832, 764, 763, 808, 724, 824, 757, 284, 722,
	281, 179, 195, 0, 755, 325, 365, 371, 823, 741,
	749, 219, 747, 369, 339, 427, 203, 246, 362, 344,
	367, 788, 806, 368, 290, 415, 357, 425, 443, 444,
	226, 319, 433, 404, 439, 455, 196, 223, 333, 397,
	430, 388, 312, 411, 412, 280, 387, 254, 182, 288,
	449, 194, 377, 211, 201, 187, 399, 700, 208, 380,
	0, 0, 457, 189, 421, 396, 308, 277, 278, 188,
	0, 361, 231, 252, 221, 328, 418, 419, 220, 458,
	198, 438, 191, 721, 437, 321, 414, 422, 309, 300,
	190, 420, 307, 299, 283, 242, 263, 355, 293, 356,
	264, 317, 316, 318, 0, 185, 0, 393, 431, 459,
	204, 205, 206, 736, 241, 245, 251, 253, 259, 260,
	267, 286, 332, 354, 352, 358, 819, 409, 426, 434,
	441, 447, 448, 450, 451, 452, 453, 454, 709, 703,
	702, 282, 291, 811, 849, 338, 370, 209, 429, 390,
	731, 735, 729, 730, 783, 784, 732, 840, 841, 842,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 815,
	725, 0, 733, 734, 0, 821, 830, 831, 787, 178,
	192, 287, 845, 359, 249, 456, 436, 432, 711, 728,
	225, 739, 0, 0, 752, 760, 761, 773, 775, 776,
	777, 778, 311, 794, 795, 797, 805, 807, 810, 812,
	817, 827, 848, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 270, 271, 274, 279, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 378, 379, 383, 384,
	385, 386, 394, 398, 416, 417, 428, 440, 445, 258,
	424, 446, 0, 296, 786, 792, 298, 243, 261, 272,
	800, 435, 395, 197, 366, 250, 186, 215, 200, 222,
	237, 240, 276, 306, 313, 342, 346, 255, 234, 213,
	363, 210, 381, 401, 402, 403, 405, 310, 229, 345,
	782, 809, 294, 407, 408, 268, 406, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 0, 0,
	1542, 0, 558, 0, 0, 0, 233, 563, 0, 0,
	0, 285, 230, 0, 1543, 343, 0, 184, 0, 382,
	218, 295, 292, 413, 244, 236, 232, 217, 269, 301,
	341, 400, 335, 570, 289, 0, 0, 391, 314, 0,
	0, 0, 0, 0, 565, 566, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 216, 183, 326, 392, 248,
	0, 79, 0, 0, 175, 176, 177, 600, 607, 608,
	609, 610, 601, 603, 0, 0, 207, 602, 214, 579,
	605, 611, 612, 0, 228, 273, 235, 227, 410, 0,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 0,
	0, 541, 555, 0, 569, 0, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 552, 553, 690, 0, 0, 0, 585,
	0, 554, 0, 0, 562, 613, 614, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 564, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 315, 0,
	584, 0, 0, 442, 0, 0, 582, 0, 0, 0,
	0, 284, 0, 281, 179, 195, 0, 0, 325, 365,
	371, 0, 0, 0, 219, 0, 369, 339, 427, 203,
	246, 362, 344, 367, 0, 0, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	423, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 0, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 0, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 0,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 320, 266, 389, 282, 291, 0, 0, 338, 370,
	209, 429, 390, 591, 583, 574, 576, 592, 593, 571,
	572, 575, 594, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 586, 561, 560, 0, 567, 568, 0, 577,
	578, 559, 178, 192, 287, 0, 359, 249, 456, 436,
	432, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 0, 0, 298,
	243, 261, 272, 0, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 406, 0, 294, 407, 408, 268, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 558,
	0, 0, 0, 233, 563, 0, 0, 0, 285, 230,
	0, 0, 343, 0, 184, 0, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	570, 289, 0, 0, 391, 314, 0, 0, 0, 0,
	0, 565, 566, 0, 0, 0, 0, 0, 0, 1617,
	0, 275, 216, 183, 326, 392, 248, 0, 79, 0,
	0, 175, 176, 177, 600, 607, 608, 609, 610, 601,
	603, 0, 0, 207, 602, 214, 579, 605, 611, 612,
	1618, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 541, 555,
	0, 569, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	552, 553, 0, 0, 0, 0, 585, 0, 554, 0,
	0, 562, 613, 614, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 564, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 315, 0, 584, 0, 0,
	442, 0, 0, 582, 0, 0, 0, 0, 284, 0,
	281, 179, 195, 0, 0, 325, 365, 371, 0, 0,
	0, 219, 0, 369, 339, 427, 203, 246, 362, 344,
	367, 0, 0, 368, 290, 415, 357, 425, 443, 444,
	226, 319, 433, 404, 439, 455, 196, 223, 333, 397,
	430, 388, 312, 411, 412, 280, 387, 254, 182, 288,
	449, 194, 377, 211, 201, 187, 399, 423, 208, 380,
	0, 0, 457, 189, 421, 396, 308, 277, 278, 188,
	0, 361, 231, 252, 221, 328, 418, 419, 220, 458,
	198, 438, 191, 0, 437, 321, 414, 422, 309, 300,
	190, 420, 307, 299, 283, 242, 263, 355, 293, 356,
	264, 317, 316, 318, 0, 185, 0, 393, 431, 459,
	204, 205, 206, 0, 241, 245, 251, 253, 259, 260,
	267, 286, 332, 354, 352, 358, 0, 409, 426, 434,
	441, 447, 448, 450, 451, 452, 453, 454, 320, 266,
	389, 282, 291, 0, 0, 338, 370, 209, 429, 390,
	591, 583, 574, 576, 592, 593, 571, 572, 575, 594,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 586,
	561, 560, 0, 567, 568, 0, 577, 578, 559, 178,
	192, 287, 0, 359, 249, 456, 436, 432, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 270, 271, 274, 279, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 378, 379, 383, 384,
	385, 386, 394, 398, 416, 417, 428, 440, 445, 258,
	424, 446, 0, 296, 0, 0, 298, 243, 261, 272,
	0, 435, 395, 197, 366, 250, 186, 215, 200, 222,
	237, 240, 276, 306, 313, 342, 346, 255, 234, 213,
	363, 210, 381, 401, 402, 403, 405, 310, 229, 345,
	70, 406, 294, 407, 408, 268, 0, 0, 0, 0,
	0, 0, 329, 0, 0, 0, 0, 558, 0, 0,
	0, 233, 563, 0, 0, 0, 285, 230, 0, 0,
	343, 0, 184, 0, 382, 218, 295, 292, 413, 244,
	236, 232, 217, 269, 301, 341, 400, 335, 570, 289,
	0, 0, 391, 314, 0, 0, 0, 0, 0, 565,
	566, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	216, 183, 326, 392, 248, 0, 79, 0, 0, 175,
	176, 177, 600, 607, 608, 609, 610, 601, 603, 0,
	0, 207, 602, 214, 579, 605, 611, 612, 0, 228,
	273, 235, 227, 410, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 541, 555, 0, 569,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 552, 553,
	0, 0, 0, 0, 585, 0, 554, 0, 0, 562,
	613, 614, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 564, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 315, 0, 584, 0, 0, 442, 0,
	0, 582, 0, 0, 0, 0, 284, 0, 281, 179,
	195, 0, 0, 325, 365, 371, 0, 0, 0, 219,
	0, 369, 339, 427, 203, 246, 362, 344, 367, 0,
	0, 368, 290, 415, 357, 425, 443, 444, 226, 319,
	433, 404, 439, 455, 196, 223, 333, 397, 430, 388,
	312, 411, 412, 280, 387, 254, 182, 288, 449, 194,
	377, 211, 201, 187, 399, 423, 208, 380, 0, 0,
	457, 189, 421, 396, 308, 277, 278, 188, 0, 361,
	231, 252, 221, 328, 418, 419, 220, 458, 198, 438,
	191, 0, 437, 321, 414, 422, 309, 300, 190, 420,
	307, 299, 283, 242, 263, 355, 293, 356, 264, 317,
	316, 318, 0, 185, 0, 393, 431, 459, 204, 205,
	206, 0, 241, 245, 251, 253, 259, 260, 267, 286,
	332, 354, 352, 358, 0, 409, 426, 434, 441, 447,
	448, 450, 451, 452, 453, 454, 320, 266, 389, 282,
	291, 0, 0, 338, 370, 209, 429, 390, 591, 583,
	574, 576, 592, 593, 571, 572, 575, 594, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 586, 561, 560,
	0, 567, 568, 0, 577, 578, 559, 178, 192, 287,
	78, 359, 249, 456, 436, 432, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 181, 193, 202, 212, 224, 239, 247, 257,
	262, 265, 270, 271, 274, 279, 297, 302, 303, 304,
	305, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 347, 348, 349, 350, 351, 353, 360, 364, 372,
	373, 374, 375, 376, 378, 379, 383, 384, 385, 386,
	394, 398, 416, 417, 428, 440, 445, 258, 424, 446,
	0, 296, 0, 0, 298, 243, 261, 272, 0, 435,
	395, 197, 366, 250, 186, 215, 200, 222, 237, 240,
	276, 306, 313, 342, 346, 255, 234, 213, 363, 210,
	381, 401, 402, 403, 405, 310, 229, 345, 406, 0,
	294, 407, 408, 268, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 558, 0, 0, 0, 233, 563,
	0, 0, 0, 285, 230, 0, 0, 343, 0, 184,
	0, 382, 218, 295, 292, 413, 244, 236, 232, 217,
	269, 301, 341, 400, 335, 570, 289, 0, 0, 391,
	314, 0, 0, 0, 0, 0, 565, 566, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 216, 183, 326,
	392, 248, 0, 79, 0, 0, 175, 176, 177, 600,
	607, 608, 609, 610, 601, 603, 0, 0, 207, 602,
	214, 579, 605, 611, 612, 0, 228, 273, 235, 227,
	410, 0, 0, 0, 0, 199, 0, 0, 0, 0,
	0, 0, 0, 541, 555, 0, 569, 0, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 552, 553, 0, 0, 0,
	0, 585, 0, 554, 0, 0, 562, 613, 614, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 564, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	315, 0, 584, 0, 0, 442, 0, 0, 582, 0,
	0, 0, 0, 284, 0, 281, 179, 195, 0, 0,
	325, 365, 371, 0, 0, 0, 219, 0, 369, 339,
	427, 203, 246, 362, 344, 367, 2420, 0, 368, 290,
	415, 357, 425, 443, 444, 226, 319, 433, 404, 439,
	455, 196, 223, 333, 397, 430, 388, 312, 411, 412,
	280, 387, 254, 182, 288, 449, 194, 377, 211, 201,
	187, 399, 423, 208, 380, 0, 0, 457, 189, 421,
	396, 308, 277, 278, 188, 0, 361, 231, 252, 221,
	328, 418, 419, 220, 458, 198, 438, 191, 0, 437,
	321, 414, 422, 309, 300, 190, 420, 307, 299, 283,
	242, 263, 355, 293, 356, 264, 317, 316, 318, 0,
	185, 0, 393, 431, 459, 204, 205, 206, 0, 241,
	245, 251, 253, 259, 260, 267, 286, 332, 354, 352,
	358, 0, 409, 426, 434, 441, 447, 448, 450, 451,
	452, 453, 454, 320, 266, 389, 282, 291, 0, 0,
	338, 370, 209, 429, 390, 591, 583, 574, 576, 592,
	593, 571, 572, 575, 594, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 586, 561, 560, 0, 567, 568,
	0, 577, 578, 559, 178, 192, 287, 0, 359, 249,
	456, 436, 432, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 181,
	193, 202, 212, 224, 239, 247, 257, 262, 265, 270,
	271, 274, 279, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 347, 348,
	349, 350, 351, 353, 360, 364, 372, 373, 374, 375,
	376, 378, 379, 383, 384, 385, 386, 394, 398, 416,
	417, 428, 440, 445, 258, 424, 446, 0, 296, 0,
	0, 298, 243, 261, 272, 0, 435, 395, 197, 366,
	250, 186, 215, 200, 222, 237, 240, 276, 306, 313,
	342, 346, 255, 234, 213, 363, 210, 381, 401, 402,
	403, 405, 310, 229, 345, 406, 0, 294, 407, 408,
	268, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	0, 558, 0, 0, 0, 233, 563, 0, 0, 0,
	285, 230, 0, 0, 343, 0, 184, 0, 382, 218,
	295, 292, 413, 244, 236, 232, 217, 269, 301, 341,
	400, 335, 570, 289, 0, 0, 391, 314, 0, 0,
	0, 0, 0, 565, 566, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 216, 183, 326, 392, 248, 0,
	79, 0, 1169, 175, 176, 177, 600, 607, 608, 609,
	610, 601, 603, 0, 0, 207, 602, 214, 579, 605,
	611, 612, 0, 228, 273, 235, 227, 410, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	541, 555, 0, 569, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 552, 553, 0, 0, 0, 0, 585, 0,
	554, 0, 0, 562, 613, 614, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 564, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 315, 0, 584,
	0, 0, 442, 0, 0, 582, 0, 0, 0, 0,
	284, 0, 281, 179, 195, 0, 0, 325, 365, 371,
	0, 0, 0, 219, 0, 369, 339, 427, 203, 246,
	362, 344, 367, 0, 0, 368, 290, 415, 357, 425,
	443, 444, 226, 319, 433, 404, 439, 455, 196, 223,
	333, 397, 430, 388, 312, 411, 412, 280, 387, 254,
	182, 288, 449, 194, 377, 211, 201, 187, 399, 423,
	208, 380, 0, 0, 457, 189, 421, 396, 308, 277,
	278, 188, 0, 361, 231, 252, 221, 328, 418, 419,
	220, 458, 198, 438, 191, 0, 437, 321, 414, 422,
	309, 300, 190, 420, 307, 299, 283, 242, 263, 355,
	293, 356, 264, 317, 316, 318, 0, 185, 0, 393,
	431, 459, 204, 205, 206, 0, 241, 245, 251, 253,
	259, 260, 267, 286, 332, 354, 352, 358, 0, 409,
	426, 434, 441, 447, 448, 450, 451, 452, 453, 454,
	320, 266, 389, 282, 291, 0, 0, 338, 370, 209,
	429, 390, 591, 583, 574, 576, 592, 593, 571, 572,
	575, 594, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 586, 561, 560, 0, 567, 568, 0, 577, 578,
	559, 178, 192, 287, 0, 359, 249, 456, 436, 432,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 181, 193, 202, 212,
	224, 239, 247, 257, 262, 265, 270, 271, 274, 279,
	297, 302, 303, 304, 305, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 347, 348, 349, 350, 351,
	353, 360, 364, 372, 373, 374, 375, 376, 378, 379,
	383, 384, 385, 386, 394, 398, 416, 417, 428, 440,
	445, 258, 424, 446, 0, 296, 0, 0, 298, 243,
	261, 272, 0, 435, 395, 197, 366, 250, 186, 215,
	200, 222, 237, 240, 276, 306, 313, 342, 346, 255,
	234, 213, 363, 210, 381, 401, 402, 403, 405, 310,
	229, 345, 406, 0, 294, 407, 408, 268, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 558, 0,
	0, 0, 233, 563, 0, 0, 0, 285, 230, 0,
	0, 343, 0, 184, 0, 382, 218, 295, 292, 413,
	244, 236, 232, 217, 269, 301, 341, 400, 335, 570,
	289, 0, 0, 391, 314, 0, 0, 0, 0, 0,
	565, 566, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 216, 183, 326, 392, 248, 0, 79, 0, 0,
	175, 176, 177, 600, 607, 608, 609, 610, 601, 603,
	0, 0, 207, 602, 214, 579, 605, 611, 612, 0,
	228, 273, 235, 227, 410, 0, 0, 0, 0, 199,
	0, 0, 0, 0, 0, 0, 0, 541, 555, 0,
	569, 0, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 552,
	553, 690, 0, 0, 0, 585, 0, 554, 0, 0,
	562, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 315, 0, 584, 0, 0, 442,
	0, 0, 582, 0, 0, 0, 0, 284, 0, 281,
	179, 195, 0, 0, 325, 365, 371, 0, 0, 0,
	219, 0, 369, 339, 427, 203, 246, 362, 344, 367,
	0, 0, 368, 290, 415, 357, 425, 443, 444, 226,
	319, 433, 404, 439, 455, 196, 223, 333, 397, 430,
	388, 312, 411, 412, 280, 387, 254, 182, 288, 449,
	194, 377, 211, 201, 187, 399, 423, 208, 380, 0,
	0, 457, 189, 421, 396, 308, 277, 278, 188, 0,
	361, 231, 252, 221, 328, 418, 419, 220, 458, 198,
	438, 191, 0, 437, 321, 414, 422, 309, 300, 190,
	420, 307, 299, 283, 242, 263, 355, 293, 356, 264,
	317, 316, 318, 0, 185, 0, 393, 431, 459, 204,
	205, 206, 0, 241, 245, 251, 253, 259, 260, 267,
	286, 332, 354, 352, 358, 0, 409, 426, 434, 441,
	447, 448, 450, 451, 452, 453, 454, 320, 266, 389,
	282, 291, 0, 0, 338, 370, 209, 429, 390, 591,
	583, 574, 576, 592, 593, 571, 572, 575, 594, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 586, 561,
	560, 0, 567, 568, 0, 577, 578, 559, 178, 192,
	287, 0, 359, 249, 456, 436, 432, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 181, 193, 202, 212, 224, 239, 247,
	257, 262, 265, 270, 271, 274, 279, 297, 302, 303,
	304, 305, 322, 323, 324, 327, 330, 331, 334, 336,
	337, 340, 347, 348, 349, 350, 351, 353, 360, 364,
	372, 373, 374, 375, 376, 378, 379, 383, 384, 385,
	386, 394, 398, 416, 417, 428, 440, 445, 258, 424,
	446, 0, 296, 0, 0, 298, 243, 261, 272, 0,
	435, 395, 197, 366, 250, 186, 215, 200, 222, 237,
	240, 276, 306, 313, 342, 346, 255, 234, 213, 363,
	210, 381, 401, 402, 403, 405, 310, 229, 345, 406,
	0, 294, 407, 408, 268, 0, 0, 0, 0, 0,
	329, 0, 0, 0, 0, 558, 0, 0, 0, 233,
	563, 0, 0, 0, 285, 230, 0, 0, 343, 0,
	184, 0, 382, 218, 295, 292, 413, 244, 236, 232,
	217, 269, 301, 341, 400, 335, 570, 289, 0, 0,
	391, 314, 0, 0, 0, 0, 0, 565, 566, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 216, 183,
	326, 392, 248, 0, 79, 0, 0, 175, 176, 177,
	600, 607, 608, 609, 610, 601, 603, 0, 0, 207,
	602, 214, 579, 605, 611, 612, 0, 228, 273, 235,
	227, 410, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 0, 541, 555, 0, 569, 0, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 552, 553, 0, 0,
	0, 0, 585, 0, 554, 0, 0, 562, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 564,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 315, 0, 584, 0, 0, 442, 0, 0, 582,
	0, 0, 0, 0, 284, 0, 281, 179, 195, 0,
	0, 325, 365, 371, 0, 0, 0, 219, 0, 369,
	339, 427, 203, 246, 362, 344, 367, 0, 0, 368,
	290, 415, 357, 425, 443, 444, 226, 319, 433, 404,
	439, 455, 196, 223, 333, 397, 430, 388, 312, 411,
	412, 280, 387, 254, 182, 288, 449, 194, 377, 211,
	201, 187, 399, 423, 208, 380, 0, 0, 457, 189,
	421, 396, 308, 277, 278, 188, 0, 361, 231, 252,
	221, 328, 418, 419, 220, 458, 198, 438, 191, 0,
	437, 321, 414, 422, 309, 300, 190, 420, 307, 299,
	283, 242, 263, 355, 293, 356, 264, 317, 316, 318,
	0, 185, 0, 393, 431, 459, 204, 205, 206, 0,
	241, 245, 251, 253, 259, 260, 267, 286, 332, 354,
	352, 358, 0, 409, 426, 434, 441, 447, 448, 450,
	451, 452, 453, 454, 320, 266, 389, 282, 291, 0,
	0, 338, 370, 209, 429, 390, 591, 583, 574, 576,
	592, 593, 571, 572, 575, 594, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 586, 561, 560, 0, 567,
	568, 0, 577, 578, 559, 178, 192, 287, 0, 359,
	249, 456, 436, 432, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	181, 193, 202, 212, 224, 239, 247, 257, 262, 265,
	270, 271, 274, 279, 297, 302, 303, 304, 305, 322,
	323, 324, 327, 330, 331, 334, 336, 337, 340, 347,
	348, 349, 350, 351, 353, 360, 364, 372, 373, 374,
	375, 376, 378, 379, 383, 384, 385, 386, 394, 398,
	416, 417, 428, 440, 445, 258, 424, 446, 0, 296,
	0, 0, 298, 243, 261, 272, 0, 435, 395, 197,
	366, 250, 186, 215, 200, 222, 237, 240, 276, 306,
	313, 342, 346, 255, 234, 213, 363, 210, 381, 401,
	402, 403, 405, 310, 229, 345, 406, 0, 294, 407,
	408, 268, 0, 0, 0, 0, 0, 329, 0, 0,
	0, 0, 558, 0, 0, 0, 233, 563, 0, 0,
	0, 285, 230, 0, 0, 343, 0, 184, 0, 382,
	218, 295, 292, 413, 244, 236, 232, 217, 269, 301,
	341, 400, 335, 570, 289, 0, 0, 391, 314, 0,
	0, 0, 0, 0, 565, 566, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 216, 183, 326, 392, 248,
	0, 79, 0, 0, 175, 176, 177, 600, 607, 608,
	609, 610, 601, 603, 0, 0, 207, 602, 214, 579,
	605, 611, 612, 0, 228, 273, 235, 227, 410, 0,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 0,
	0, 0, 555, 0, 569, 0, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 552, 553, 0, 0, 0, 0, 585,
	0, 554, 0, 0, 562, 613, 614, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 564, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 315, 0,
	584, 0, 0, 442, 0, 0, 582, 0, 0, 0,
	0, 284, 0, 281, 179, 195, 0, 0, 325, 365,
	371, 0, 0, 0, 219, 0, 369, 339, 427, 203,
	246, 362, 344, 367, 0, 0, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	423, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 0, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 0, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 0,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 320, 266, 389, 282, 291, 0, 0, 338, 370,
	209, 429, 390, 591, 583, 574, 576, 592, 593, 571,
	572, 575, 594, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 586, 561, 560, 0, 567, 568, 0, 577,
	578, 559, 178, 192, 287, 0, 359, 249, 456, 436,
	432, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 0, 0, 298,
	243, 261, 272, 0, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 406, 0, 294, 407, 408, 268, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 285, 230,
	0, 0, 343, 0, 184, 0, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	0, 289, 0, 0, 391, 314, 0, 0, 0, 607,
	608, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 216, 183, 326, 392, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 0, 0, 0, 0,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 897, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 613, 614, 615, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 315, 0, 0, 0, 896,
	442, 0, 0, 0, 0, 0, 893, 894, 284, 859,
	281, 179, 195, 887, 891, 325, 365, 371, 0, 0,
	0, 219, 0, 369, 339, 427, 203, 246, 362, 344,
	367, 0, 0, 368, 290, 415, 357, 425, 443, 444,
	226, 319, 433, 404, 439, 455, 196, 223, 333, 397,
	430, 388, 312, 411, 412, 280, 387, 254, 182, 288,
	449, 194, 377, 211, 201, 187, 399, 423, 208, 380,
	0, 0, 457, 189, 421, 396, 308, 277, 278, 188,
	0, 361, 231, 252, 221, 328, 418, 419, 220, 458,
	198, 438, 191, 0, 437, 321, 414, 422, 309, 300,
	190, 420, 307, 299, 283, 242, 263, 355, 293, 356,
	264, 317, 316, 318, 0, 185, 0, 393, 431, 459,
	204, 205, 206, 0, 241, 245, 251, 253, 259, 260,
	267, 286, 332, 354, 352, 358, 0, 409, 426, 434,
	441, 447, 448, 450, 451, 452, 453, 454, 320, 266,
	389, 282, 291, 0, 0, 338, 370, 209, 429, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	192, 287, 0, 359, 249, 456, 436, 432, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 270, 271, 274, 279, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 378, 379, 383, 384,
	385, 386, 394, 398, 416, 417, 428, 440, 445, 258,
	424, 446, 0, 296, 0, 0, 298, 243, 261, 272,
	0, 435, 395, 197, 366, 250, 186, 215, 200, 222,
	237, 240, 276, 306, 313, 342, 346, 255, 234, 213,
	363, 210, 381, 401, 402, 403, 405, 310, 229, 345,
	406, 0, 294, 407, 408, 268, 0, 0, 0, 0,
	0, 329, 0, 0, 0, 1189, 0, 0, 0, 0,
	233, 0, 0, 0, 0, 285, 230, 0, 0, 343,
	0, 184, 0, 382, 218, 295, 292, 413, 244, 236,
	232, 217, 269, 301, 341, 400, 335, 0, 289, 0,
	0, 391, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 216,
	183, 326, 392, 248, 0, 0, 0, 0, 175, 176,
	177, 0, 1191, 0, 0, 0, 0, 0, 0, 0,
	207, 0, 214, 0, 0, 0, 0, 0, 228, 273,
	235, 227, 410, 0, 0, 0, 0, 199, 0, 0,
	0, 1059, 0, 1060, 1061, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 315, 0, 0, 0, 0, 442, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 281, 179, 195,
	0, 0, 325, 365, 371, 0, 0, 0, 219, 0,
	369, 339, 427, 203, 246, 362, 344, 367, 0, 0,
	368, 290, 415, 357, 425, 443, 444, 226, 319, 433,
	404, 439, 455, 196, 223, 333, 397, 430, 388, 312,
	411, 412, 280, 387, 254, 182, 288, 449, 194, 377,
	211, 201, 187, 399, 423, 208, 380, 0, 0, 457,
	189, 421, 396, 308, 277, 278, 188, 0, 361, 231,
	252, 221, 328, 418, 419, 220, 458, 198, 438, 191,
	0, 437, 321, 414, 422, 309, 300, 190, 420, 307,
	299, 283, 242, 263, 355, 293, 356, 264, 317, 316,
	318, 0, 185, 0, 393, 431, 459, 204, 205, 206,
	0, 241, 245, 251, 253, 259, 260, 267, 286, 332,
	354, 352, 358, 0, 409, 426, 434, 441, 447, 448,
	450, 451, 452, 453, 454, 320, 266, 389, 282, 291,
	0, 0, 338, 370, 209, 429, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 192, 287, 0,
	359, 249, 456, 436, 432, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 181, 193, 202, 212, 224, 239, 247, 257, 262,
	265, 270, 271, 274, 279, 297, 302, 303, 304, 305,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	347, 348, 349, 350, 351, 353, 360, 364, 372, 373,
	374, 375, 376, 378, 379, 383, 384, 385, 386, 394,
	398, 416, 417, 428, 440, 445, 258, 424, 446, 0,
	296, 0, 0, 298, 243, 261, 272, 0, 435, 395,
	197, 366, 250, 186, 215, 200, 222, 237, 240, 276,
	306, 313, 342, 346, 255, 234, 213, 363, 210, 381,
	401, 402, 403, 405, 310, 229, 345, 406, 0, 294,
	407, 408, 268, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 285, 230, 0, 0, 343, 0, 184, 0,
	382, 218, 295, 292, 413, 244, 236, 232, 217, 269,
	301, 341, 400, 335, 0, 289, 0, 0, 391, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 216, 183, 326, 392,
	248, 0, 0, 0, 0, 175, 176, 177, 1134, 1137,
	0, 0, 0, 1133, 1136, 0, 0, 207, 1132, 214,
	0, 0, 0, 0, 0, 228, 273, 235, 227, 410,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 315,
	0, 0, 0, 0, 442, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 281, 179, 195, 0, 0, 325,
	365, 371, 0, 0, 0, 219, 0, 369, 339, 427,
	203, 246, 362, 344, 367, 0, 0, 368, 290, 415,
	357, 425, 443, 444, 226, 319, 433, 404, 439, 455,
	196, 223, 333, 397, 430, 388, 312, 411, 412, 280,
	387, 254, 182, 288, 449, 194, 377, 211, 201, 187,
	399, 423, 208, 380, 0, 0, 457, 189, 421, 396,
	308, 277, 278, 188, 0, 361, 231, 252, 221, 328,
	418, 419, 220, 458, 198, 438, 191, 0, 437, 321,
	414, 422, 309, 300, 190, 420, 307, 299, 283, 242,
	263, 355, 293, 356, 264, 317, 316, 318, 0, 185,
	0, 393, 431, 459, 204, 205, 206, 0, 241, 245,
	251, 253, 259, 260, 267, 286, 332, 354, 352, 358,
	0, 409, 426, 434, 441, 447, 448, 450, 451, 452,
	453, 454, 320, 266, 389, 282, 291, 0, 0, 338,
	370, 209, 429, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 192, 287, 0, 359, 249, 456,
	436, 432, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 181, 193,
	202, 212, 224, 239, 247, 257, 262, 265, 270, 271,
	274, 279, 297, 302, 303, 304, 305, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 347, 348, 349,
	350, 351, 353, 360, 364, 372, 373, 374, 375, 376,
	378, 379, 383, 384, 385, 386, 394, 398, 416, 417,
	428, 440, 445, 258, 424, 446, 0, 296, 0, 0,
	298, 243, 261, 272, 0, 435, 395, 197, 366, 250,
	186, 215, 200, 222, 237, 240, 276, 306, 313, 342,
	346, 255, 234, 213, 363, 210, 381, 401, 402, 403,
	405, 310, 229, 345, 70, 406, 294, 407, 408, 268,
	0, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	285, 230, 0, 0, 343, 0, 184, 0, 382, 218,
	295, 292, 413, 244, 236, 232, 217, 269, 301, 341,
	400, 335, 0, 289, 0, 0, 391, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 216, 183, 326, 392, 248, 0,
	79, 0, 0, 175, 176, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 207, 0, 214, 0, 0,
	0, 0, 0, 228, 273, 235, 227, 410, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 315, 0, 0,
	0, 0, 442, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 281, 179, 195, 0, 0, 325, 365, 371,
	0, 0, 0, 219, 0, 369, 339, 427, 203, 246,
	362, 344, 367, 0, 0, 368, 290, 415, 357, 425,
	443, 444, 226, 319, 433, 404, 439, 455, 196, 223,
	333, 397, 430, 388, 312, 411, 412, 280, 387, 254,
	182, 288, 449, 194, 377, 211, 201, 187, 399, 423,
	208, 380, 0, 0, 457, 189, 421, 396, 308, 277,
	278, 188, 0, 361, 231, 252, 221, 328, 418, 419,
	220, 458, 198, 438, 191, 0, 437, 321, 414, 422,
	309, 300, 190, 420, 307, 299, 283, 242, 263, 355,
	293, 356, 264, 317, 316, 318, 0, 185, 0, 393,
	431, 459, 204, 205, 206, 0, 241, 245, 251, 253,
	259, 260, 267, 286, 332, 354, 352, 358, 0, 409,
	426, 434, 441, 447, 448, 450, 451, 452, 453, 454,
	320, 266, 389, 282, 291, 0, 0, 338, 370, 209,
	429, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 192, 287, 78, 359, 249, 456, 436, 432,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 1605,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 181, 193, 202, 212,
	224, 239, 247, 257, 262, 265, 270, 271, 274, 279,
	297, 302, 303, 304, 305, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 347, 348, 349, 350, 351,
	353, 360, 364, 372, 373, 374, 375, 376, 378, 379,
	383, 384, 385, 386, 394, 398, 416, 417, 428, 440,
	445, 258, 424, 446, 0, 296, 0, 0, 298, 243,
	261, 272, 0, 435, 395, 197, 366, 250, 186, 215,
	200, 222, 237, 240, 276, 306, 313, 342, 346, 255,
	234, 213, 363, 210, 381, 401, 402, 403, 405, 310,
	229, 345, 70, 406, 294, 407, 408, 268, 0, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 285, 230,
	0, 0, 343, 0, 184, 0, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	0, 289, 0, 0, 391, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 216, 183, 326, 392, 248, 0, 79, 0,
	1169, 175, 176, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 0, 0, 0, 0,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 315, 0, 0, 0, 0,
	442, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	281, 179, 195, 0, 0, 325, 365, 371, 0, 0,
	0, 219, 0, 369, 339, 427, 203, 246, 362, 344,
	367, 0, 0, 368, 290, 415, 357, 425, 443, 444,
	226, 319, 433, 404, 439, 455, 196, 223, 333, 397,
	430, 388, 312, 411, 412, 280, 387, 254, 182, 288,
	449, 194, 377, 211, 201, 187, 399, 423, 208, 380,
	0, 0, 457, 189, 421, 396, 308, 277, 278, 188,
	0, 361, 231, 252, 221, 328, 418, 419, 220, 458,
	198, 438, 191, 0, 437, 321, 414, 422, 309, 300,
	190, 420, 307, 299, 283, 242, 263, 355, 293, 356,
	264, 317, 316, 318, 0, 185, 0, 393, 431, 459,
	204, 205, 206, 0, 241, 245, 251, 253, 259, 260,
	267, 286, 332, 354, 352, 358, 0, 409, 426, 434,
	441, 447, 448, 450, 451, 452, 453, 454, 320, 266,
	389, 282, 291, 0, 0, 338, 370, 209, 429, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	192, 287, 78, 359, 249, 456, 436, 432, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 270, 271, 274, 279, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 378, 379, 383, 384,
	385, 386, 394, 398, 416, 417, 428, 440, 445, 258,
	424, 446, 0, 296, 0, 0, 298, 243, 261, 272,
	0, 435, 395, 197, 366, 250, 186, 215, 200, 222,
	237, 240, 276, 306, 313, 342, 346, 255, 234, 213,
	363, 210, 381, 401, 402, 403, 405, 310, 229, 345,
	406, 0, 294, 407, 408, 268, 0, 0, 0, 0,
	0, 329, 0, 0, 0, 1564, 0, 0, 0, 0,
	233, 0, 0, 0, 0, 285, 230, 0, 0, 343,
	0, 184, 0, 382, 218, 295, 292, 413, 244, 236,
	232, 217, 269, 301, 341, 400, 335, 0, 289, 0,
	0, 391, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 216,
	183, 326, 392, 248, 0, 0, 0, 0, 175, 176,
	177, 0, 1359, 0, 0, 0, 0, 0, 0, 0,
	207, 0, 214, 0, 0, 0, 0, 0, 228, 273,
	235, 227, 410, 0, 0, 0, 0, 199, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 315, 0, 0, 0, 0, 442, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 281, 179, 195,
	0, 0, 325, 365, 371, 0, 0, 0, 219, 0,
	369, 339, 427, 203, 246, 362, 344, 367, 0, 1562,
	368, 290, 415, 357, 425, 443, 444, 226, 319, 433,
	404, 439, 455, 196, 223, 333, 397, 430, 388, 312,
	411, 412, 280, 387, 254, 182, 288, 449, 194, 377,
	211, 201, 187, 399, 423, 208, 380, 0, 0, 457,
	189, 421, 396, 308, 277, 278, 188, 0, 361, 231,
	252, 221, 328, 418, 419, 220, 458, 198, 438, 191,
	0, 437, 321, 414, 422, 309, 300, 190, 420, 307,
	299, 283, 242, 263, 355, 293, 356, 264, 317, 316,
	318, 0, 185, 0, 393, 431, 459, 204, 205, 206,
	0, 241, 245, 251, 253, 259, 260, 267, 286, 332,
	354, 352, 358, 0, 409, 426, 434, 441, 447, 448,
	450, 451, 452, 453, 454, 320, 266, 389, 282, 291,
	0, 0, 338, 370, 209, 429, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 192, 287, 0,
	359, 249, 456, 436, 432, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 181, 193, 202, 212, 224, 239, 247, 257, 262,
	265, 270, 271, 274, 279, 297, 302, 303, 304, 305,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	347, 348, 349, 350, 351, 353, 360, 364, 372, 373,
	374, 375, 376, 378, 379, 383, 384, 385, 386, 394,
	398, 416, 417, 428, 440, 445, 258, 424, 446, 0,
	296, 0, 0, 298, 243, 261, 272, 0, 435, 395,
	197, 366, 250, 186, 215, 200, 222, 237, 240, 276,
	306, 313, 342, 346, 255, 234, 213, 363, 210, 381,
	401, 402, 403, 405, 310, 229, 345, 406, 0, 294,
	407, 408, 268, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 285, 230, 0, 0, 343, 0, 184, 0,
	382, 218, 295, 292, 413, 244, 236, 232, 217, 269,
	301, 341, 400, 335, 0, 289, 0, 0, 391, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 216, 183, 326, 392,
	248, 0, 0, 0, 0, 175, 176, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 214,
	0, 0, 0, 0, 0, 228, 273, 235, 227, 410,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 853, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 315,
	0, 0, 0, 0, 442, 0, 0, 0, 0, 0,
	0, 0, 284, 859, 281, 179, 195, 857, 0, 325,
	365, 371, 0, 0, 0, 219, 0, 369, 339, 427,
	203, 246, 362, 344, 367, 0, 0, 368, 290, 415,
	357, 425, 443, 444, 226, 319, 433, 404, 439, 455,
	196, 223, 333, 397, 430, 388, 312, 411, 412, 280,
	387, 254, 182, 288, 449, 194, 377, 211, 201, 187,
	399, 423, 208, 380, 0, 0, 457, 189, 421, 396,
	308, 277, 278, 188, 0, 361, 231, 252, 221, 328,
	418, 419, 220, 458, 198, 438, 191, 0, 437, 321,
	414, 422, 309, 300, 190, 420, 307, 299, 283, 242,
	263, 355, 293, 356, 264, 317, 316, 318, 0, 185,
	0, 393, 431, 459, 204, 205, 206, 0, 241, 245,
	251, 253, 259, 260, 267, 286, 332, 354, 352, 358,
	0, 409, 426, 434, 441, 447, 448, 450, 451, 452,
	453, 454, 320, 266, 389, 282, 291, 0, 0, 338,
	370, 209, 429, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 192, 287, 0, 359, 249, 456,
	436, 432, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 181, 193,
	202, 212, 224, 239, 247, 257, 262, 265, 270, 271,
	274, 279, 297, 302, 303, 304, 305, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 347, 348, 349,
	350, 351, 353, 360, 364, 372, 373, 374, 375, 376,
	378, 379, 383, 384, 385, 386, 394, 398, 416, 417,
	428, 440, 445, 258, 424, 446, 0, 296, 0, 0,
	298, 243, 261, 272, 0, 435, 395, 197, 366, 250,
	186, 215, 200, 222, 237, 240, 276, 306, 313, 342,
	346, 255, 234, 213, 363, 210, 381, 401, 402, 403,
	405, 310, 229, 345, 406, 0, 294, 407, 408, 268,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 1564,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 285,
	230, 0, 0, 343, 0, 184, 0, 382, 218, 295,
	292, 413, 244, 236, 232, 217, 269, 301, 341, 400,
	335, 0, 289, 0, 0, 391, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 216, 183, 326, 392, 248, 0, 0,
	0, 0, 175, 176, 177, 0, 1359, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 214, 0, 0, 0,
	0, 0, 228, 273, 235, 227, 410, 0, 0, 0,
	0, 199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 315, 0, 0, 0,
	0, 442, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 281, 179, 195, 0, 0, 325, 365, 371, 0,
	0, 0, 219, 0, 369, 339, 427, 203, 246, 362,
	344, 367, 0, 0, 368, 290, 415, 357, 425, 443,
	444, 226, 319, 433, 404, 439, 455, 196, 223, 333,
	397, 430, 388, 312, 411, 412, 280, 387, 254, 182,
	288, 449, 194, 377, 211, 201, 187, 399, 423, 208,
	380, 0, 0, 457, 189, 421, 396, 308, 277, 278,
	188, 0, 361, 231, 252, 221, 328, 418, 419, 220,
	458, 198, 438, 191, 0, 437, 321, 414, 422, 309,
	300, 190, 420, 307, 299, 283, 242, 263, 355, 293,
	356, 264, 317, 316, 318, 0, 185, 0, 393, 431,
	459, 204, 205, 206, 0, 241, 245, 251, 253, 259,
	260, 267, 286, 332, 354, 352, 358, 0, 409, 426,
	434, 441, 447, 448, 450, 451, 452, 453, 454, 320,
	266, 389, 282, 291, 0, 0, 338, 370, 209, 429,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 192, 287, 0, 359, 249, 456, 436, 432, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 181, 193, 202, 212, 224,
	239, 247, 257, 262, 265, 270, 271, 274, 279, 297,
	302, 303, 304, 305, 322, 323, 324, 327, 330, 331,
	334, 336, 337, 340, 347, 348, 349, 350, 351, 353,
	360, 364, 372, 373, 374, 375, 376, 378, 379, 383,
	384, 385, 386, 394, 398, 416, 417, 428, 440, 445,
	258, 424, 446, 0, 296, 0, 0, 298, 243, 261,
	272, 0, 435, 395, 197, 366, 250, 186, 215, 200,
	222, 237, 240, 276, 306, 313, 342, 346, 255, 234,
	213, 363, 210, 381, 401, 402, 403, 405, 310, 229,
	345, 406, 0, 294, 407, 408, 268, 0, 0, 0,
	0, 0, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 285, 230, 0, 0,
	343, 0, 184, 0, 382, 218, 295, 292, 413, 244,
	236, 232, 217, 269, 301, 341, 400, 335, 0, 289,
	0, 0, 391, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	216, 183, 326, 392, 248, 0, 0, 0, 1169, 175,
	176, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 0, 214, 0, 0, 0, 0, 0, 228,
	273, 235, 227, 410, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 315, 0, 0, 0, 0, 442, 0,
	0, 0, 2279, 0, 0, 0, 284, 0, 281, 179,
	195, 0, 0, 325, 365, 371, 0, 0, 0, 219,
	0, 369, 339, 427, 203, 246, 362, 344, 367, 0,
	0, 368, 290, 415, 357, 425, 443, 444, 226, 319,
	433, 404, 439, 455, 196, 223, 333, 397, 430, 388,
	312, 411, 412, 280, 387, 254, 182, 288, 449, 194,
	377, 211, 201, 187, 399, 423, 208, 380, 0, 0,
	457, 189, 421, 396, 308, 277, 278, 188, 0, 361,
	231, 252, 221, 328, 418, 419, 220, 458, 198, 438,
	191, 0, 437, 321, 414, 422, 309, 300, 190, 420,
	307, 299, 283, 242, 263, 355, 293, 356, 264, 317,
	316, 318, 0, 185, 0, 393, 431, 459, 204, 205,
	206, 0, 241, 245, 251, 253, 259, 260, 267, 286,
	332, 354, 352, 358, 0, 409, 426, 434, 441, 447,
	448, 450, 451, 452, 453, 454, 320, 266, 389, 282,
	291, 0, 0, 338, 370, 209, 429, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 192, 287,
	0, 359, 249, 456, 436, 432, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 181, 193, 202, 212, 224, 239, 247, 257,
	262, 265, 270, 271, 274, 279, 297, 302, 303, 304,
	305, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 347, 348, 349, 350, 351, 353, 360, 364, 372,
	373, 374, 375, 376, 378, 379, 383, 384, 385, 386,
	394, 398, 416, 417, 428, 440, 445, 258, 424, 446,
	0, 296, 0, 0, 298, 243, 261, 272, 0, 435,
	395, 197, 366, 250, 186, 215, 200, 222, 237, 240,
	276, 306, 313, 342, 346, 255, 234, 213, 363, 210,
	381, 401, 402, 403, 405, 310, 229, 345, 406, 0,
	294, 407, 408, 268, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 0, 0, 285, 230, 0, 0, 343, 0, 184,
	0, 382, 218, 295, 292, 413, 244, 236, 232, 217,
	269, 301, 341, 400, 335, 0, 289, 0, 0, 391,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 216, 183, 326,
	392, 248, 0, 79, 0, 0, 175, 176, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 0,
	214, 0, 0, 0, 0, 0, 228, 273, 235, 227,
	410, 0, 0, 0, 0, 199, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	315, 0, 0, 0, 0, 442, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 281, 179, 195, 0, 0,
	325, 365, 371, 0, 0, 0, 219, 0, 369, 339,
	427, 203, 246, 362, 344, 367, 0, 0, 368, 290,
	415, 357, 425, 443, 444, 226, 319, 433, 404, 439,
	455, 196, 223, 333, 397, 430, 388, 312, 411, 412,
	280, 387, 254, 182, 288, 449, 194, 377, 211, 201,
	187, 399, 423, 208, 380, 0, 0, 457, 189, 421,
	396, 308, 277, 278, 188, 0, 361, 231, 252, 221,
	328, 418, 419, 220, 458, 198, 438, 191, 0, 437,
	321, 414, 422, 309, 300, 190, 420, 307, 299, 283,
	242, 263, 355, 293, 356, 264, 317, 316, 318, 0,
	185, 0, 393, 431, 459, 204, 205, 206, 0, 241,
	245, 251, 253, 259, 260, 267, 286, 332, 354, 352,
	358, 0, 409, 426, 434, 441, 447, 448, 450, 451,
	452, 453, 454, 320, 266, 389, 282, 291, 0, 0,
	338, 370, 209, 429, 390, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 192, 287, 0, 359, 249,
	456, 436, 432, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 1605, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 181,
	193, 202, 212, 224, 239, 247, 257, 262, 265, 270,
	271, 274, 279, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 347, 348,
	349, 350, 351, 353, 360, 364, 372, 373, 374, 375,
	376, 378, 379, 383, 384, 385, 386, 394, 398, 416,
	417, 428, 440, 445, 258, 424, 446, 0, 296, 0,
	0, 298, 243, 261, 272, 0, 435, 395, 197, 366,
	250, 186, 215, 200, 222, 237, 240, 276, 306, 313,
	342, 346, 255, 234, 213, 363, 210, 381, 401, 402,
	403, 405, 310, 229, 345, 406, 0, 294, 407, 408,
	268, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	285, 230, 0, 0, 343, 0, 184, 0, 382, 218,
	295, 292, 413, 244, 236, 232, 217, 269, 301, 341,
	400, 335, 0, 289, 0, 0, 391, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 216, 183, 326, 392, 248, 0,
	0, 0, 0, 175, 176, 177, 0, 0, 0, 1813,
	0, 0, 1814, 0, 0, 207, 0, 214, 0, 0,
	0, 0, 0, 228, 273, 235, 227, 410, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 315, 0, 0,
	0, 0, 442, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 281, 179, 195, 0, 0, 325, 365, 371,
	0, 0, 0, 219, 0, 369, 339, 427, 203, 246,
	362, 344, 367, 0, 0, 368, 290, 415, 357, 425,
	443, 444, 226, 319, 433, 404, 439, 455, 196, 223,
	333, 397, 430, 388, 312, 411, 412, 280, 387, 254,
	182, 288, 449, 194, 377, 211, 201, 187, 399, 423,
	208, 380, 0, 0, 457, 189, 421, 396, 308, 277,
	278, 188, 0, 361, 231, 252, 221, 328, 418, 419,
	220, 458, 198, 438, 191, 0, 437, 321, 414, 422,
	309, 300, 190, 420, 307, 299, 283, 242, 263, 355,
	293, 356, 264, 317, 316, 318, 0, 185, 0, 393,
	431, 459, 204, 205, 206, 0, 241, 245, 251, 253,
	259, 260, 267, 286, 332, 354, 352, 358, 0, 409,
	426, 434, 441, 447, 448, 450, 451, 452, 453, 454,
	320, 266, 389, 282, 291, 0, 0, 338, 370, 209,
	429, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 192, 287, 0, 359, 249, 456, 436, 432,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 181, 193, 202, 212,
	224, 239, 247, 257, 262, 265, 270, 271, 274, 279,
	297, 302, 303, 304, 305, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 347, 348, 349, 350, 351,
	353, 360, 364, 372, 373, 374, 375, 376, 378, 379,
	383, 384, 385, 386, 394, 398, 416, 417, 428, 440,
	445, 258, 424, 446, 0, 296, 0, 0, 298, 243,
	261, 272, 0, 435, 395, 197, 366, 250, 186, 215,
	200, 222, 237, 240, 276, 306, 313, 342, 346, 255,
	234, 213, 363, 210, 381, 401, 402, 403, 405, 310,
	229, 345, 406, 0, 294, 407, 408, 268, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 1211, 0, 0, 0, 285, 230, 0,
	0, 343, 0, 184, 0, 382, 218, 295, 292, 413,
	244, 236, 232, 217, 269, 301, 341, 400, 335, 0,
	289, 0, 0, 391, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 216, 183, 326, 392, 248, 0, 0, 0, 0,
	175, 176, 177, 0, 1210, 0, 0, 0, 0, 0,
	0, 0, 207, 0, 214, 0, 0, 0, 0, 0,
	228, 273, 235, 227, 410, 0, 0, 0, 0, 199,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 315, 0, 0, 0, 0, 442,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 281,
	179, 195, 0, 0, 325, 365, 371, 0, 0, 0,
	219, 0, 369, 339, 427, 203, 246, 362, 344, 367,
	0, 0, 368, 290, 415, 357, 425, 443, 444, 226,
	319, 433, 404, 439, 455, 196, 223, 333, 397, 430,
	388, 312, 411, 412, 280, 387, 254, 182, 288, 449,
	194, 377, 211, 201, 187, 399, 423, 208, 380, 0,
	0, 457, 189, 421, 396, 308, 277, 278, 188, 0,
	361, 231, 252, 221, 328, 418, 419, 220, 458, 198,
	438, 191, 0, 437, 321, 414, 422, 309, 300, 190,
	420, 307, 299, 283, 242, 263, 355, 293, 356, 264,
	317, 316, 318, 0, 185, 0, 393, 431, 459, 204,
	205, 206, 0, 241, 245, 251, 253, 259, 260, 267,
	286, 332, 354, 352, 358, 0, 409, 426, 434, 441,
	447, 448, 450, 451, 452, 453, 454, 320, 266, 389,
	282, 291, 0, 0, 338, 370, 209, 429, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 192,
	287, 0, 359, 249, 456, 436, 432, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 181, 193, 202, 212, 224, 239, 247,
	257, 262, 265, 270, 271, 274, 279, 297, 302, 303,
	304, 305, 322, 323, 324, 327, 330, 331, 334, 336,
	337, 340, 347, 348, 349, 350, 351, 353, 360, 364,
	372, 373, 374, 375, 376, 378, 379, 383, 384, 385,
	386, 394, 398, 416, 417, 428, 440, 445, 258, 424,
	446, 0, 296, 0, 0, 298, 243, 261, 272, 0,
	435, 395, 197, 366, 250, 186, 215, 200, 222, 237,
	240, 276, 306, 313, 342, 346, 255, 234, 213, 363,
	210, 381, 401, 402, 403, 405, 310, 229, 345, 406,
	0, 294, 407, 408, 268, 0, 0, 0, 0, 0,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 0, 0, 285, 230, 0, 0, 343, 0,
	184, 0, 382, 218, 295, 292, 413, 244, 236, 232,
	217, 269, 301, 341, 400, 335, 0, 289, 0, 0,
	391, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 216, 183,
	326, 392, 248, 0, 0, 0, 0, 175, 176, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 207,
	0, 214, 0, 0, 0, 0, 0, 228, 273, 235,
	227, 410, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 315, 0, 0, 0, 0, 442, 0, 0, 0,
	2390, 0, 0, 0, 284, 0, 281, 179, 195, 0,
	0, 325, 365, 371, 0, 0, 0, 219, 0, 369,
	339, 427, 203, 246, 362, 344, 367, 0, 0, 368,
	290, 415, 357, 425, 443, 444, 226, 319, 433, 404,
	439, 455, 196, 223, 333, 397, 430, 388, 312, 411,
	412, 280, 387, 254, 182, 288, 449, 194, 377, 211,
	201, 187, 399, 423, 208, 380, 0, 0, 457, 189,
	421, 396, 308, 277, 278, 188, 0, 361, 231, 252,
	221, 328, 418, 419, 220, 458, 198, 438, 191, 0,
	437, 321, 414, 422, 309, 300, 190, 420, 307, 299,
	283, 242, 263, 355, 293, 356, 264, 317, 316, 318,
	0, 185, 0, 393, 431, 459, 204, 205, 206, 0,
	241, 245, 251, 253, 259, 260, 267, 286, 332, 354,
	352, 358, 0, 409, 426, 434, 441, 447, 448, 450,
	451, 452, 453, 454, 320, 266, 389, 282, 291, 0,
	0, 338, 370, 209, 429, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 192, 287, 0, 359,
	249, 456, 436, 432, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	181, 193, 202, 212, 224, 239, 247, 257, 262, 265,
	270, 271, 274, 279, 297, 302, 303, 304, 305, 322,
	323, 324, 327, 330, 331, 334, 336, 337, 340, 347,
	348, 349, 350, 351, 353, 360, 364, 372, 373, 374,
	375, 376, 378, 379, 383, 384, 385, 386, 394, 398,
	416, 417, 428, 440, 445, 258, 424, 446, 0, 296,
	0, 0, 298, 243, 261, 272, 0, 435, 395, 197,
	366, 250, 186, 215, 200, 222, 237, 240, 276, 306,
	313, 342, 346, 255, 234, 213, 363, 210, 381, 401,
	402, 403, 405, 310, 229, 345, 406, 0, 294, 407,
	408, 268, 0, 0, 0, 0, 0, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 285, 230, 0, 0, 343, 0, 184, 0, 382,
	218, 295, 292, 413, 244, 236, 232, 217, 269, 301,
	341, 400, 335, 0, 289, 0, 0, 391, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 216, 183, 326, 392, 248,
	0, 0, 0, 0, 175, 176, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 214, 0,
	0, 0, 0, 0, 228, 273, 235, 227, 410, 0,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 315, 0,
	0, 0, 0, 442, 0, 0, 0, 2279, 0, 0,
	0, 284, 0, 281, 179, 195, 0, 0, 325, 365,
	371, 0, 0, 0, 219, 0, 369, 339, 427, 203,
	246, 362, 344, 367, 0, 0, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	423, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 0, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 0, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 0,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 320, 266, 389, 282, 291, 0, 0, 338, 370,
	209, 429, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 192, 287, 0, 359, 249, 456, 436,
	432, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 0, 0, 298,
	243, 261, 272, 0, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 406, 0, 294, 407, 408, 268, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 285, 230,
	0, 0, 343, 0, 184, 0, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	0, 289, 0, 0, 391, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 216, 183, 326, 392, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 1359, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 0, 0, 0, 0,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 315, 0, 0, 0, 0,
	442, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	281, 179, 195, 0, 0, 325, 365, 371, 0, 0,
	0, 219, 0, 369, 339, 427, 203, 246, 362, 344,
	367, 0, 0, 368, 290, 415, 357, 425, 443, 444,
	226, 319, 433, 404, 439, 455, 196, 223, 333, 397,
	430, 388, 312, 411, 412, 280, 387, 254, 182, 288,
	449, 194, 377, 211, 201, 187, 399, 423, 208, 380,
	0, 0, 457, 189, 421, 396, 308, 277, 278, 188,
	0, 361, 231, 252, 221, 328, 418, 419, 220, 458,
	198, 438, 191, 0, 437, 321, 414, 422, 309, 300,
	190, 420, 307, 299, 283, 242, 263, 355, 293, 356,
	264, 317, 316, 318, 0, 185, 0, 393, 431, 459,
	204, 205, 206, 0, 241, 245, 251, 253, 259, 260,
	267, 286, 332, 354, 352, 358, 0, 409, 426, 434,
	441, 447, 448, 450, 451, 452, 453, 454, 320, 266,
	389, 282, 291, 0, 0, 338, 370, 209, 429, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	192, 287, 0, 359, 249, 456, 436, 432, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 270, 271, 274, 279, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 378, 379, 383, 384,
	385, 386, 394, 398, 416, 417, 428, 440, 445, 258,
	424, 446, 0, 296, 0, 0, 298, 243, 261, 272,
	0, 435, 395, 197, 366, 250, 186, 215, 200, 222,
	237, 240, 276, 306, 313, 342, 346, 255, 234, 213,
	363, 210, 381, 401, 402, 403, 405, 310, 229, 345,
	0, 0, 294, 407, 408, 268, 406, 0, 0, 0,
	1606, 0, 0, 0, 0, 0, 0, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 285, 230, 0, 0, 343, 0, 184, 0, 382,
	218, 295, 292, 413, 244, 236, 232, 217, 269, 301,
	341, 400, 335, 0, 289, 0, 0, 391, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 216, 183, 326, 392, 248,
	0, 0, 0, 0, 175, 176, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 214, 0,
	0, 0, 0, 0, 228, 273, 235, 227, 410, 0,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 315, 0,
	0, 0, 0, 442, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 281, 179, 195, 0, 0, 325, 365,
	371, 0, 0, 0, 219, 0, 369, 339, 427, 203,
	246, 362, 344, 367, 0, 0, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	423, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 0, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 0, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 0,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 320, 266, 389, 282, 291, 0, 0, 338, 370,
	209, 429, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 192, 287, 0, 359, 249, 456, 436,
	432, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 0, 0, 298,
	243, 261, 272, 0, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 406, 0, 294, 407, 408, 268, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 285, 230,
	0, 0, 343, 0, 184, 0, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	0, 289, 0, 0, 391, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 216, 183, 326, 392, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 1191, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 0, 0, 0, 0,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 315, 0, 0, 0, 0,
	442, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	281, 179, 195, 0, 0, 325, 365, 371, 0, 0,
	0, 219, 0, 369, 339, 427, 203, 246, 362, 344,
	367, 0, 0, 368, 290, 415, 357, 425, 443, 444,
	226, 319, 433, 404, 439, 455, 196, 223, 333, 397,
	430, 388, 312, 411, 412, 280, 387, 254, 182, 288,
	449, 194, 377, 211, 201, 187, 399, 423, 208, 380,
	0, 0, 457, 189, 421, 396, 308, 277, 278, 188,
	0, 361, 231, 252, 221, 328, 418, 419, 220, 458,
	198, 438, 191, 0, 437, 321, 414, 422, 309, 300,
	190, 420, 307, 299, 283, 242, 263, 355, 293, 356,
	264, 317, 316, 318, 0, 185, 0, 393, 431, 459,
	204, 205, 206, 0, 241, 245, 251, 253, 259, 260,
	267, 286, 332, 354, 352, 358, 0, 409, 426, 434,
	441, 447, 448, 450, 451, 452, 453, 454, 320, 266,
	389, 282, 291, 0, 0, 338, 370, 209, 429, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	192, 287, 0, 359, 249, 456, 436, 432, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 270, 271, 274, 279, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 378, 379, 383, 384,
	385, 386, 394, 398, 416, 417, 428, 440, 445, 258,
	424, 446, 0, 296, 0, 0, 298, 243, 261, 272,
	0, 435, 395, 197, 366, 250, 186, 215, 200, 222,
	237, 240, 276, 306, 313, 342, 346, 255, 234, 213,
	363, 210, 381, 401, 402, 403, 405, 310, 229, 345,
	406, 0, 294, 407, 408, 268, 0, 0, 0, 0,
	0, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 0, 0, 285, 230, 0, 0, 343,
	0, 184, 0, 382, 218, 295, 292, 413, 244, 236,
	232, 217, 269, 301, 341, 400, 335, 0, 289, 0,
	0, 391, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 216,
	183, 326, 392, 248, 0, 0, 0, 0, 175, 176,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 0, 214, 0, 0, 0, 0, 0, 228, 273,
	235, 227, 410, 0, 0, 0, 0, 199, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1089, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 315, 0, 0, 0, 0, 442, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 281, 179, 195,
	0, 0, 325, 365, 371, 0, 0, 0, 219, 0,
	369, 339, 427, 203, 246, 362, 344, 367, 0, 0,
	368, 290, 415, 357, 425, 443, 444, 226, 319, 433,
	404, 439, 455, 196, 223, 333, 397, 430, 388, 312,
	411, 412, 280, 387, 254, 182, 288, 449, 194, 377,
	211, 201, 187, 399, 423, 208, 380, 0, 0, 457,
	189, 421, 396, 308, 277, 278, 188, 0, 361, 231,
	252, 221, 328, 418, 419, 220, 458, 198, 438, 191,
	0, 437, 321, 414, 422, 309, 300, 190, 420, 307,
	299, 283, 242, 263, 355, 293, 356, 264, 317, 316,
	318, 0, 185, 0, 393, 431, 459, 204, 205, 206,
	0, 241, 245, 251, 253, 259, 260, 267, 286, 332,
	354, 352, 358, 0, 409, 426, 434, 441, 447, 448,
	450, 451, 452, 453, 454, 320, 266, 389, 282, 291,
	0, 0, 338, 370, 209, 429, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 192, 287, 0,
	359, 249, 456, 436, 432, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 181, 193, 202, 212, 224, 239, 247, 257, 262,
	265, 270, 271, 274, 279, 297, 302, 303, 304, 305,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	347, 348, 349, 350, 351, 353, 360, 364, 372, 373,
	374, 375, 376, 378, 379, 383, 384, 385, 386, 394,
	398, 416, 417, 428, 440, 445, 258, 424, 446, 0,
	296, 0, 0, 298, 243, 261, 272, 0, 435, 395,
	197, 366, 250, 186, 215, 200, 222, 237, 240, 276,
	306, 313, 342, 346, 255, 234, 213, 363, 210, 381,
	401, 402, 403, 405, 310, 229, 345, 406, 0, 294,
	407, 408, 268, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 285, 230, 0, 0, 343, 0, 184, 0,
	382, 218, 295, 292, 413, 244, 236, 232, 217, 269,
	301, 341, 400, 335, 0, 289, 0, 0, 391, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 216, 183, 326, 392,
	248, 0, 0, 0, 0, 175, 176, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 214,
	0, 0, 0, 0, 0, 228, 273, 235, 227, 410,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 315,
	0, 0, 0, 0, 442, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 281, 179, 195, 0, 0, 325,
	365, 371, 0, 0, 0, 219, 0, 369, 339, 427,
	203, 246, 362, 344, 367, 0, 0, 368, 290, 415,
	357, 425, 443, 444, 226, 319, 433, 404, 439, 455,
	196, 223, 333, 397, 430, 388, 312, 411, 412, 280,
	387, 254, 182, 288, 449, 194, 377, 211, 201, 187,
	399, 423, 208, 380, 0, 0, 457, 189, 421, 396,
	308, 277, 278, 188, 0, 361, 231, 252, 221, 328,
	418, 419, 220, 458, 198, 438, 191, 0, 437, 321,
	414, 422, 309, 300, 190, 420, 307, 299, 283, 242,
	263, 355, 293, 356, 264, 317, 316, 318, 0, 185,
	0, 393, 431, 459, 204, 205, 206, 0, 241, 245,
	251, 253, 259, 260, 267, 286, 332, 354, 352, 358,
	0, 409, 426, 434, 441, 447, 448, 450, 451, 452,
	453, 454, 320, 266, 389, 282, 291, 0, 0, 338,
	370, 209, 429, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 192, 287, 1450, 359, 249, 456,
	436, 432, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 181, 193,
	202, 212, 224, 239, 247, 257, 262, 265, 270, 271,
	274, 279, 297, 302, 303, 304, 305, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 347, 348, 349,
	350, 351, 353, 360, 364, 372, 373, 374, 375, 376,
	378, 379, 383, 384, 385, 386, 394, 398, 416, 417,
	428, 440, 445, 258, 424, 446, 0, 296, 0, 0,
	298, 243, 261, 272, 0, 435, 395, 197, 366, 250,
	186, 215, 200, 222, 237, 240, 276, 306, 313, 342,
	346, 255, 234, 213, 363, 210, 381, 401, 402, 403,
	405, 310, 229, 345, 406, 0, 294, 407, 408, 268,
	0, 0, 0, 0, 0, 329, 0, 1331, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 285,
	230, 0, 0, 343, 0, 184, 0, 382, 218, 295,
	292, 413, 244, 236, 232, 217, 269, 301, 341, 400,
	335, 0, 289, 0, 0, 391, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 216, 183, 326, 392, 248, 0, 0,
	0, 0, 175, 176, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 214, 0, 0, 0,
	0, 0, 228, 273, 235, 227, 410, 0, 0, 0,
	0, 199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 315, 0, 0, 0,
	0, 442, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 281, 179, 195, 0, 0, 325, 365, 371, 0,
	0, 0, 219, 0, 369, 339, 427, 203, 246, 362,
	344, 367, 0, 0, 368, 290, 415, 357, 425, 443,
	444, 226, 319, 433, 404, 439, 455, 196, 223, 333,
	397, 430, 388, 312, 411, 412, 280, 387, 254, 182,
	288, 449, 194, 377, 211, 201, 187, 399, 423, 208,
	380, 0, 0, 457, 189, 421, 396, 308, 277, 278,
	188, 0, 361, 231, 252, 221, 328, 418, 419, 220,
	458, 198, 438, 191, 0, 437, 321, 414, 422, 309,
	300, 190, 420, 307, 299, 283, 242, 263, 355, 293,
	356, 264, 317, 316, 318, 0, 185, 0, 393, 431,
	459, 204, 205, 206, 0, 241, 245, 251, 253, 259,
	260, 267, 286, 332, 354, 352, 358, 0, 409, 426,
	434, 441, 447, 448, 450, 451, 452, 453, 454, 320,
	266, 389, 282, 291, 0, 0, 338, 370, 209, 429,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 192, 287, 0, 359, 249, 456, 436, 432, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 181, 193, 202, 212, 224,
	239, 247, 257, 262, 265, 270, 271, 274, 279, 297,
	302, 303, 304, 305, 322, 323, 324, 327, 330, 331,
	334, 336, 337, 340, 347, 348, 349, 350, 351, 353,
	360, 364, 372, 373, 374, 375, 376, 378, 379, 383,
	384, 385, 386, 394, 398, 416, 417, 428, 440, 445,
	258, 424, 446, 0, 296, 0, 0, 298, 243, 261,
	272, 0, 435, 395, 197, 366, 250, 186, 215, 200,
	222, 237, 240, 276, 306, 313, 342, 346, 255, 234,
	213, 363, 210, 381, 401, 402, 403, 405, 310, 229,
	345, 406, 0, 294, 407, 408, 268, 0, 0, 0,
	0, 0, 329, 0, 1329, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 285, 230, 0, 0,
	343, 0, 184, 0, 382, 218, 295, 292, 413, 244,
	236, 232, 217, 269, 301, 341, 400, 335, 0, 289,
	0, 0, 391, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	216, 183, 326, 392, 248, 0, 0, 0, 0, 175,
	176, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 0, 214, 0, 0, 0, 0, 0, 228,
	273, 235, 227, 410, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 315, 0, 0, 0, 0, 442, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 281, 179,
	195, 0, 0, 325, 365, 371, 0, 0, 0, 219,
	0, 369, 339, 427, 203, 246, 362, 344, 367, 0,
	0, 368, 290, 415, 357, 425, 443, 444, 226, 319,
	433, 404, 439, 455, 196, 223, 333, 397, 430, 388,
	312, 411, 412, 280, 387, 254, 182, 288, 449, 194,
	377, 211, 201, 187, 399, 423, 208, 380, 0, 0,
	457, 189, 421, 396, 308, 277, 278, 188, 0, 361,
	231, 252, 221, 328, 418, 419, 220, 458, 198, 438,
	191, 0, 437, 321, 414, 422, 309, 300, 190, 420,
	307, 299, 283, 242, 263, 355, 293, 356, 264, 317,
	316, 318, 0, 185, 0, 393, 431, 459, 204, 205,
	206, 0, 241, 245, 251, 253, 259, 260, 267, 286,
	332, 354, 352, 358, 0, 409, 426, 434, 441, 447,
	448, 450, 451, 452, 453, 454, 320, 266, 389, 282,
	291, 0, 0, 338, 370, 209, 429, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 192, 287,
	0, 359, 249, 456, 436, 432, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 181, 193, 202, 212, 224, 239, 247, 257,
	262, 265, 270, 271, 274, 279, 297, 302, 303, 304,
	305, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 347, 348, 349, 350, 351, 353, 360, 364, 372,
	373, 374, 375, 376, 378, 379, 383, 384, 385, 386,
	394, 398, 416, 417, 428, 440, 445, 258, 424, 446,
	0, 296, 0, 0, 298, 243, 261, 272, 0, 435,
	395, 197, 366, 250, 186, 215, 200, 222, 237, 240,
	276, 306, 313, 342, 346, 255, 234, 213, 363, 210,
	381, 401, 402, 403, 405, 310, 229, 345, 406, 0,
	294, 407, 408, 268, 0, 0, 0, 0, 0, 329,
	0, 1327, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 0, 0, 285, 230, 0, 0, 343, 0, 184,
	0, 382, 218, 295, 292, 413, 244, 236, 232, 217,
	269, 301, 341, 400, 335, 0, 289, 0, 0, 391,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 216, 183, 326,
	392, 248, 0, 0, 0, 0, 175, 176, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 0,
	214, 0, 0, 0, 0, 0, 228, 273, 235, 227,
	410, 0, 0, 0, 0, 199, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	315, 0, 0, 0, 0, 442, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 281, 179, 195, 0, 0,
	325, 365, 371, 0, 0, 0, 219, 0, 369, 339,
	427, 203, 246, 362, 344, 367, 0, 0, 368, 290,
	415, 357, 425, 443, 444, 226, 319, 433, 404, 439,
	455, 196, 223, 333, 397, 430, 388, 312, 411, 412,
	280, 387, 254, 182, 288, 449, 194, 377, 211, 201,
	187, 399, 423, 208, 380, 0, 0, 457, 189, 421,
	396, 308, 277, 278, 188, 0, 361, 231, 252, 221,
	328, 418, 419, 220, 458, 198, 438, 191, 0, 437,
	321, 414, 422, 309, 300, 190, 420, 307, 299, 283,
	242, 263, 355, 293, 356, 264, 317, 316, 318, 0,
	185, 0, 393, 431, 459, 204, 205, 206, 0, 241,
	245, 251, 253, 259, 260, 267, 286, 332, 354, 352,
	358, 0, 409, 426, 434, 441, 447, 448, 450, 451,
	452, 453, 454, 320, 266, 389, 282, 291, 0, 0,
	338, 370, 209, 429, 390, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 192, 287, 0, 359, 249,
	456, 436, 432, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 181,
	193, 202, 212, 224, 239, 247, 257, 262, 265, 270,
	271, 274, 279, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 347, 348,
	349, 350, 351, 353, 360, 364, 372, 373, 374, 375,
	376, 378, 379, 383, 384, 385, 386, 394, 398, 416,
	417, 428, 440, 445, 258, 424, 446, 0, 296, 0,
	0, 298, 243, 261, 272, 0, 435, 395, 197, 366,
	250, 186, 215, 200, 222, 237, 240, 276, 306, 313,
	342, 346, 255, 234, 213, 363, 210, 381, 401, 402,
	403, 405, 310, 229, 345, 406, 0, 294, 407, 408,
	268, 0, 0, 0, 0, 0, 329, 0, 1325, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	285, 230, 0, 0, 343, 0, 184, 0, 382, 218,
	295, 292, 413, 244, 236, 232, 217, 269, 301, 341,
	400, 335, 0, 289, 0, 0, 391, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 216, 183, 326, 392, 248, 0,
	0, 0, 0, 175, 176, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 207, 0, 214, 0, 0,
	0, 0, 0, 228, 273, 235, 227, 410, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 315, 0, 0,
	0, 0, 442, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 281, 179, 195, 0, 0, 325, 365, 371,
	0, 0, 0, 219, 0, 369, 339, 427, 203, 246,
	362, 344, 367, 0, 0, 368, 290, 415, 357, 425,
	443, 444, 226, 319, 433, 404, 439, 455, 196, 223,
	333, 397, 430, 388, 312, 411, 412, 280, 387, 254,
	182, 288, 449, 194, 377, 211, 201, 187, 399, 423,
	208, 380, 0, 0, 457, 189, 421, 396, 308, 277,
	278, 188, 0, 361, 231, 252, 221, 328, 418, 419,
	220, 458, 198, 438, 191, 0, 437, 321, 414, 422,
	309, 300, 190, 420, 307, 299, 283, 242, 263, 355,
	293, 356, 264, 317, 316, 318, 0, 185, 0, 393,
	431, 459, 204, 205, 206, 0, 241, 245, 251, 253,
	259, 260, 267, 286, 332, 354, 352, 358, 0, 409,
	426, 434, 441, 447, 448, 450, 451, 452, 453, 454,
	320, 266, 389, 282, 291, 0, 0, 338, 370, 209,
	429, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 192, 287, 0, 359, 249, 456, 436, 432,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 181, 193, 202, 212,
	224, 239, 247, 257, 262, 265, 270, 271, 274, 279,
	297, 302, 303, 304, 305, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 347, 348, 349, 350, 351,
	353, 360, 364, 372, 373, 374, 375, 376, 378, 379,
	383, 384, 385, 386, 394, 398, 416, 417, 428, 440,
	445, 258, 424, 446, 0, 296, 0, 0, 298, 243,
	261, 272, 0, 435, 395, 197, 366, 250, 186, 215,
	200, 222, 237, 240, 276, 306, 313, 342, 346, 255,
	234, 213, 363, 210, 381, 401, 402, 403, 405, 310,
	229, 345, 406, 0, 294, 407, 408, 268, 0, 0,
	0, 0, 0, 329, 0, 1323, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 285, 230, 0,
	0, 343, 0, 184, 0, 382, 218, 295, 292, 413,
	244, 236, 232, 217, 269, 301, 341, 400, 335, 0,
	289, 0, 0, 391, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 216, 183, 326, 392, 248, 0, 0, 0, 0,
	175, 176, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 0, 214, 0, 0, 0, 0, 0,
	228, 273, 235, 227, 410, 0, 0, 0, 0, 199,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 315, 0, 0, 0, 0, 442,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 281,
	179, 195, 0, 0, 325, 365, 371, 0, 0, 0,
	219, 0, 369, 339, 427, 203, 246, 362, 344, 367,
	0, 0, 368, 290, 415, 357, 425, 443, 444, 226,
	319, 433, 404, 439, 455, 196, 223, 333, 397, 430,
	388, 312, 411, 412, 280, 387, 254, 182, 288, 449,
	194, 377, 211, 201, 187, 399, 423, 208, 380, 0,
	0, 457, 189, 421, 396, 308, 277, 278, 188, 0,
	361, 231, 252, 221, 328, 418, 419, 220, 458, 198,
	438, 191, 0, 437, 321, 414, 422, 309, 300, 190,
	420, 307, 299, 283, 242, 263, 355, 293, 356, 264,
	317, 316, 318, 0, 185, 0, 393, 431, 459, 204,
	205, 206, 0, 241, 245, 251, 253, 259, 260, 267,
	286, 332, 354, 352, 358, 0, 409, 426, 434, 441,
	447, 448, 450, 451, 452, 453, 454, 320, 266, 389,
	282, 291, 0, 0, 338, 370, 209, 429, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 192,
	287, 0, 359, 249, 456, 436, 432, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 181, 193, 202, 212, 224, 239, 247,
	257, 262, 265, 270, 271, 274, 279, 297, 302, 303,
	304, 305, 322, 323, 324, 327, 330, 331, 334, 336,
	337, 340, 347, 348, 349, 350, 351, 353, 360, 364,
	372, 373, 374, 375, 376, 378, 379, 383, 384, 385,
	386, 394, 398, 416, 417, 428, 440, 445, 258, 424,
	446, 0, 296, 0, 0, 298, 243, 261, 272, 0,
	435, 395, 197, 366, 250, 186, 215, 200, 222, 237,
	240, 276, 306, 313, 342, 346, 255, 234, 213, 363,
	210, 381, 401, 402, 403, 405, 310, 229, 345, 406,
	0, 294, 407, 408, 268, 0, 0, 0, 0, 0,
	329, 0, 1319, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 0, 0, 285, 230, 0, 0, 343, 0,
	184, 0, 382, 218, 295, 292, 413, 244, 236, 232,
	217, 269, 301, 341, 400, 335, 0, 289, 0, 0,
	391, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 216, 183,
	326, 392, 248, 0, 0, 0, 0, 175, 176, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 207,
	0, 214, 0, 0, 0, 0, 0, 228, 273, 235,
	227, 410, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 315, 0, 0, 0, 0, 442, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 281, 179, 195, 0,
	0, 325, 365, 371, 0, 0, 0, 219, 0, 369,
	339, 427, 203, 246, 362, 344, 367, 0, 0, 368,
	290, 415, 357, 425, 443, 444, 226, 319, 433, 404,
	439, 455, 196, 223, 333, 397, 430, 388, 312, 411,
	412, 280, 387, 254, 182, 288, 449, 194, 377, 211,
	201, 187, 399, 423, 208, 380, 0, 0, 457, 189,
	421, 396, 308, 277, 278, 188, 0, 361, 231, 252,
	221, 328, 418, 419, 220, 458, 198, 438, 191, 0,
	437, 321, 414, 422, 309, 300, 190, 420, 307, 299,
	283, 242, 263, 355, 293, 356, 264, 317, 316, 318,
	0, 185, 0, 393, 431, 459, 204, 205, 206, 0,
	241, 245, 251, 253, 259, 260, 267, 286, 332, 354,
	352, 358, 0, 409, 426, 434, 441, 447, 448, 450,
	451, 452, 453, 454, 320, 266, 389, 282, 291, 0,
	0, 338, 370, 209, 429, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 192, 287, 0, 359,
	249, 456, 436, 432, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	181, 193, 202, 212, 224, 239, 247, 257, 262, 265,
	270, 271, 274, 279, 297, 302, 303, 304, 305, 322,
	323, 324, 327, 330, 331, 334, 336, 337, 340, 347,
	348, 349, 350, 351, 353, 360, 364, 372, 373, 374,
	375, 376, 378, 379, 383, 384, 385, 386, 394, 398,
	416, 417, 428, 440, 445, 258, 424, 446, 0, 296,
	0, 0, 298, 243, 261, 272, 0, 435, 395, 197,
	366, 250, 186, 215, 200, 222, 237, 240, 276, 306,
	313, 342, 346, 255, 234, 213, 363, 210, 381, 401,
	402, 403, 405, 310, 229, 345, 406, 0, 294, 407,
	408, 268, 0, 0, 0, 0, 0, 329, 0, 1317,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 285, 230, 0, 0, 343, 0, 184, 0, 382,
	218, 295, 292, 413, 244, 236, 232, 217, 269, 301,
	341, 400, 335, 0, 289, 0, 0, 391, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 216, 183, 326, 392, 248,
	0, 0, 0, 0, 175, 176, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 214, 0,
	0, 0, 0, 0, 228, 273, 235, 227, 410, 0,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 315, 0,
	0, 0, 0, 442, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 281, 179, 195, 0, 0, 325, 365,
	371, 0, 0, 0, 219, 0, 369, 339, 427, 203,
	246, 362, 344, 367, 0, 0, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	423, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 0, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 0, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 0,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 320, 266, 389, 282, 291, 0, 0, 338, 370,
	209, 429, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 192, 287, 0, 359, 249, 456, 436,
	432, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 0, 0, 298,
	243, 261, 272, 0, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 406, 0, 294, 407, 408, 268, 0,
	0, 0, 0, 0, 329, 0, 1315, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 285, 230,
	0, 0, 343, 0, 184, 0, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	0, 289, 0, 0, 391, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 216, 183, 326, 392, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 0, 0, 0, 0,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 315, 0, 0, 0, 0,
	442, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	281, 179, 195, 0, 0, 325, 365, 371, 0, 0,
	0, 219, 0, 369, 339, 427, 203, 246, 362, 344,
	367, 0, 0, 368, 290, 415, 357, 425, 443, 444,
	226, 319, 433, 404, 439, 455, 196, 223, 333, 397,
	430, 388, 312, 411, 412, 280, 387, 254, 182, 288,
	449, 194, 377, 211, 201, 187, 399, 423, 208, 380,
	0, 0, 457, 189, 421, 396, 308, 277, 278, 188,
	0, 361, 231, 252, 221, 328, 418, 419, 220, 458,
	198, 438, 191, 0, 437, 321, 414, 422, 309, 300,
	190, 420, 307, 299, 283, 242, 263, 355, 293, 356,
	264, 317, 316, 318, 0, 185, 0, 393, 431, 459,
	204, 205, 206, 0, 241, 245, 251, 253, 259, 260,
	267, 286, 332, 354, 352, 358, 0, 409, 426, 434,
	441, 447, 448, 450, 451, 452, 453, 454, 320, 266,
	389, 282, 291, 0, 0, 338, 370, 209, 429, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	192, 287, 0, 359, 249, 456, 436, 432, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 270, 271, 274, 279, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 378, 379, 383, 384,
	385, 386, 394, 398, 416, 417, 428, 440, 445, 258,
	424, 446, 0, 296, 0, 0, 298, 243, 261, 272,
	0, 435, 395, 197, 366, 250, 186, 215, 200, 222,
	237, 240, 276, 306, 313, 342, 346, 255, 234, 213,
	363, 210, 381, 401, 402, 403, 405, 310, 229, 345,
	406, 0, 294, 407, 408, 268, 0, 0, 0, 0,
	0, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 0, 0, 285, 230, 0, 0, 343,
	0, 184, 0, 382, 218, 295, 292, 413, 244, 236,
	232, 217, 269, 301, 341, 400, 335, 0, 289, 0,
	0, 391, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 216,
	183, 326, 392, 248, 0, 1292, 0, 0, 175, 176,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 0, 214, 0, 0, 0, 0, 0, 228, 273,
	235, 227, 410, 0, 0, 0, 0, 199, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 315, 0, 0, 0, 0, 442, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 281, 179, 195,
	0, 0, 325, 365, 371, 0, 0, 0, 219, 0,
	369, 339, 427, 203, 246, 362, 344, 367, 0, 0,
	368, 290, 415, 357, 425, 443, 444, 226, 319, 433,
	404, 439, 455, 196, 223, 333, 397, 430, 388, 312,
	411, 412, 280, 387, 254, 182, 288, 449, 194, 377,
	211, 201, 187, 399, 423, 208, 380, 0, 0, 457,
	189, 421, 396, 308, 277, 278, 188, 0, 361, 231,
	252, 221, 328, 418, 419, 220, 458, 198, 438, 191,
	0, 437, 321, 414, 422, 309, 300, 190, 420, 307,
	299, 283, 242, 263, 355, 293, 356, 264, 317, 316,
	318, 0, 185, 0, 393, 431, 459, 204, 205, 206,
	0, 241, 245, 251, 253, 259, 260, 267, 286, 332,
	354, 352, 358, 0, 409, 426, 434, 441, 447, 448,
	450, 451, 452, 453, 454, 320, 266, 389, 282, 291,
	0, 0, 338, 370, 209, 429, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 192, 287, 0,
	359, 249, 456, 436, 432, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 181, 193, 202, 212, 224, 239, 247, 257, 262,
	265, 270, 271, 274, 279, 297, 302, 303, 304, 305,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	347, 348, 349, 350, 351, 353, 360, 364, 372, 373,
	374, 375, 376, 378, 379, 383, 384, 385, 386, 394,
	398, 416, 417, 428, 440, 445, 258, 424, 446, 0,
	296, 0, 0, 298, 243, 261, 272, 0, 435, 395,
	197, 366, 250, 186, 215, 200, 222, 237, 240, 276,
	306, 313, 342, 346, 255, 234, 213, 363, 210, 381,
	401, 402, 403, 405, 310, 229, 345, 406, 0, 294,
	407, 408, 268, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 0, 0, 1195, 233, 0, 0,
	0, 0, 285, 230, 0, 0, 343, 0, 184, 0,
	382, 218, 295, 292, 413, 244, 236, 232, 217, 269,
	301, 341, 400, 335, 0, 289, 0, 0, 391, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 216, 183, 326, 392,
	248, 0, 0, 0, 0, 175, 176, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 214,
	0, 0, 0, 0, 0, 228, 273, 235, 227, 410,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 315,
	0, 0, 0, 0, 442, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 281, 179, 195, 0, 0, 325,
	365, 371, 0, 0, 0, 219, 0, 369, 339, 427,
	203, 246, 362, 344, 367, 0, 0, 368, 290, 415,
	357, 425, 443, 444, 226, 319, 433, 404, 439, 455,
	196, 223, 333, 397, 430, 388, 312, 411, 412, 280,
	387, 254, 182, 288, 449, 194, 377, 211, 201, 187,
	399, 423, 208, 380, 0, 0, 457, 189, 421, 396,
	308, 277, 278, 188, 0, 361, 231, 252, 221, 328,
	418, 419, 220, 458, 198, 438, 191, 0, 437, 321,
	414, 422, 309, 300, 190, 420, 307, 299, 283, 242,
	263, 355, 293, 356, 264, 317, 316, 318, 0, 185,
	0, 393, 431, 459, 204, 205, 206, 0, 241, 245,
	251, 253, 259, 260, 267, 286, 332, 354, 352, 358,
	0, 409, 426, 434, 441, 447, 448, 450, 451, 452,
	453, 454, 320, 266, 389, 282, 291, 0, 0, 338,
	370, 209, 429, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 192, 287, 0, 359, 249, 456,
	436, 432, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 181, 193,
	202, 212, 224, 239, 247, 257, 262, 265, 270, 271,
	274, 279, 297, 302, 303, 304, 305, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 347, 348, 349,
	350, 351, 353, 360, 364, 372, 373, 374, 375, 376,
	378, 379, 383, 384, 385, 386, 394, 398, 416, 417,
	428, 440, 445, 258, 424, 446, 0, 296, 0, 0,
	298, 243, 261, 272, 0, 435, 395, 197, 366, 250,
	186, 215, 200, 222, 237, 240, 276, 306, 313, 342,
	346, 255, 234, 213, 363, 210, 381, 401, 402, 403,
	405, 310, 229, 345, 406, 0, 294, 407, 408, 268,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 285,
	230, 0, 0, 343, 0, 184, 0, 382, 218, 295,
	292, 413, 244, 236, 232, 217, 269, 301, 341, 400,
	335, 0, 289, 0, 0, 391, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 216, 183, 326, 392, 248, 0, 0,
	0, 0, 175, 176, 177, 0, 1036, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 214, 0, 0, 0,
	0, 0, 228, 273, 235, 227, 410, 0, 0, 0,
	0, 199, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 315, 0, 0, 0,
	0, 442, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 281, 179, 195, 0, 0, 325, 365, 371, 0,
	0, 0, 219, 0, 369, 339, 427, 203, 246, 362,
	344, 367, 0, 0, 368, 290, 415, 357, 425, 443,
	444, 226, 319, 433, 404, 439, 455, 196, 223, 333,
	397, 430, 388, 312, 411, 412, 280, 387, 254, 182,
	288, 449, 194, 377, 211, 201, 187, 399, 423, 208,
	380, 0, 0, 457, 189, 421, 396, 308, 277, 278,
	188, 0, 361, 231, 252, 221, 328, 418, 419, 220,
	458, 198, 438, 191, 0, 437, 321, 414, 422, 309,
	300, 190, 420, 307, 299, 283, 242, 263, 355, 293,
	356, 264, 317, 316, 318, 0, 185, 0, 393, 431,
	459, 204, 205, 206, 0, 241, 245, 251, 253, 259,
	260, 267, 286, 332, 354, 352, 358, 0, 409, 426,
	434, 441, 447, 448, 450, 451, 452, 453, 454, 320,
	266, 389, 282, 291, 0, 0, 338, 370, 209, 429,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 192, 287, 0, 359, 249, 456, 436, 432, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 181, 193, 202, 212, 224,
	239, 247, 257, 262, 265, 270, 271, 274, 279, 297,
	302, 303, 304, 305, 322, 323, 324, 327, 330, 331,
	334, 336, 337, 340, 347, 348, 349, 350, 351, 353,
	360, 364, 372, 373, 374, 375, 376, 378, 379, 383,
	384, 385, 386, 394, 398, 416, 417, 428, 440, 445,
	258, 424, 446, 0, 296, 0, 0, 298, 243, 261,
	272, 0, 435, 395, 197, 366, 250, 186, 215, 200,
	222, 237, 240, 276, 306, 313, 342, 346, 255, 234,
	213, 363, 210, 381, 401, 402, 403, 405, 310, 229,
	345, 406, 0, 294, 407, 408, 268, 0, 0, 0,
	0, 0, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 285, 230, 0, 0,
	343, 0, 184, 0, 382, 218, 295, 292, 413, 244,
	236, 232, 217, 269, 301, 341, 400, 335, 0, 289,
	0, 0, 391, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	216, 183, 326, 392, 248, 0, 0, 0, 0, 175,
	176, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 0, 214, 0, 0, 0, 0, 0, 228,
	273, 235, 227, 410, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 315, 0, 0, 0, 0, 442, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 281, 179,
	195, 0, 0, 325, 365, 371, 0, 0, 0, 219,
	0, 369, 339, 427, 203, 246, 362, 344, 367, 0,
	0, 368, 290, 415, 357, 425, 443, 444, 226, 319,
	433, 404, 439, 455, 196, 223, 333, 397, 430, 388,
	312, 411, 412, 280, 387, 254, 182, 288, 449, 194,
	377, 211, 201, 187, 399, 423, 208, 380, 0, 0,
	457, 189, 421, 396, 308, 277, 278, 188, 0, 361,
	231, 252, 221, 328, 418, 419, 220, 458, 198, 438,
	191, 0, 437, 321, 414, 422, 309, 300, 190, 420,
	307, 299, 283, 242, 263, 355, 293, 356, 264, 317,
	316, 318, 0, 185, 0, 393, 431, 459, 204, 205,
	206, 0, 241, 245, 251, 253, 259, 260, 267, 286,
	332, 354, 352, 358, 0, 409, 426, 434, 441, 447,
	448, 450, 451, 452, 453, 454, 320, 266, 389, 282,
	291, 0, 0, 338, 370, 209, 429, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 192, 287,
	0, 359, 249, 456, 436, 432, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 672, 0, 0,
	0, 180, 181, 193, 202, 212, 224, 239, 247, 257,
	262, 265, 270, 271, 274, 279, 297, 302, 303, 304,
	305, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 347, 348, 349, 350, 351, 353, 360, 364, 372,
	373, 374, 375, 376, 378, 379, 383, 384, 385, 386,
	394, 398, 416, 417, 428, 440, 445, 258, 424, 446,
	0, 296, 0, 0, 298, 243, 261, 272, 0, 435,
	395, 197, 366, 250, 186, 215, 200, 222, 237, 240,
	276, 306, 313, 342, 346, 255, 234, 213, 363, 210,
	381, 401, 402, 403, 405, 310, 229, 345, 406, 0,
	294, 407, 408, 268, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 0, 0, 285, 230, 0, 0, 343, 0, 184,
	0, 382, 218, 295, 292, 413, 244, 236, 232, 217,
	269, 301, 341, 400, 335, 0, 289, 0, 0, 391,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 216, 183, 326,
	392, 248, 0, 0, 0, 0, 175, 176, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 0,
	214, 0, 0, 0, 0, 0, 228, 273, 235, 227,
	410, 0, 0, 0, 0, 199, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 533, 0, 256, 0,
	315, 0, 0, 0, 0, 442, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 281, 179, 195, 0, 0,
	325, 365, 371, 0, 0, 0, 219, 0, 369, 339,
	427, 203, 246, 362, 344, 367, 0, 0, 368, 290,
	415, 357, 425, 443, 444, 226, 319, 433, 404, 439,
	455, 196, 223, 333, 397, 430, 388, 312, 411, 412,
	280, 387, 254, 182, 288, 449, 194, 377, 211, 201,
	187, 399, 423, 208, 380, 0, 0, 457, 189, 421,
	396, 308, 277, 278, 188, 0, 361, 231, 252, 221,
	328, 418, 419, 220, 458, 198, 438, 191, 0, 437,
	321, 414, 422, 309, 300, 190, 420, 307, 299, 283,
	242, 263, 355, 293, 356, 264, 317, 316, 318, 0,
	185, 0, 393, 431, 459, 204, 205, 206, 0, 241,
	245, 251, 253, 259, 260, 267, 286, 332, 354, 352,
	358, 0, 409, 426, 434, 441, 447, 448, 450, 451,
	452, 453, 454, 320, 266, 389, 282, 291, 0, 0,
	338, 370, 209, 429, 390, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 192, 287, 0, 359, 249,
	456, 436, 432, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 181,
	193, 202, 212, 224, 239, 247, 257, 262, 265, 270,
	271, 274, 279, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 347, 348,
	349, 350, 351, 353, 360, 364, 372, 373, 374, 375,
	376, 378, 379, 383, 384, 385, 386, 394, 398, 416,
	417, 428, 440, 445, 532, 424, 446, 0, 296, 0,
	0, 298, 243, 261, 272, 0, 435, 395, 197, 366,
	250, 186, 215, 200, 222, 237, 240, 276, 306, 313,
	342, 346, 255, 234, 213, 363, 210, 381, 401, 402,
	403, 405, 310, 229, 345, 406, 0, 294, 407, 408,
	268, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	285, 230, 0, 0, 343, 0, 184, 0, 382, 218,
	295, 292, 413, 244, 236, 232, 217, 269, 301, 341,
	400, 335, 0, 289, 0, 0, 391, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 216, 183, 326, 392, 248, 0,
	0, 0, 0, 175, 176, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 207, 0, 214, 0, 0,
	0, 0, 0, 228, 273, 235, 227, 410, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 315, 0, 0,
	480, 0, 442, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 281, 179, 195, 0, 0, 325, 365, 371,
	0, 0, 0, 219, 0, 369, 339, 427, 203, 246,
	362, 344, 367, 0, 0, 368, 290, 415, 357, 425,
	443, 444, 226, 319, 433, 404, 439, 455, 196, 223,
	333, 397, 430, 388, 312, 411, 412, 280, 387, 254,
	182, 288, 449, 194, 377, 211, 201, 187, 399, 423,
	208, 380, 0, 0, 457, 189, 421, 396, 308, 277,
	278, 188, 0, 361, 231, 252, 221, 328, 418, 419,
	220, 458, 198, 438, 191, 0, 437, 321, 414, 422,
	309, 300, 190, 420, 307, 299, 283, 242, 263, 355,
	293, 356, 264, 317, 316, 318, 0, 185, 0, 393,
	431, 459, 204, 205, 206, 0, 241, 245, 251, 253,
	259, 260, 267, 286, 332, 354, 352, 358, 0, 409,
	426, 434, 441, 447, 448, 450, 451, 452, 453, 454,
	320, 266, 389, 282, 291, 0, 0, 338, 370, 209,
	429, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 192, 287, 0, 359, 249, 456, 436, 432,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 181, 193, 202, 212,
	224, 239, 247, 257, 262, 265, 270, 271, 274, 279,
	297, 302, 303, 304, 305, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 347, 348, 349, 350, 351,
	353, 360, 364, 372, 373, 374, 375, 376, 378, 379,
	383, 384, 385, 386, 394, 398, 416, 417, 428, 440,
	445, 258, 424, 446, 0, 296, 0, 0, 298, 243,
	261, 272, 0, 435, 395, 197, 366, 250, 186, 215,
	200, 222, 237, 240, 276, 306, 313, 342, 346, 255,
	234, 213, 363, 210, 381, 401, 402, 403, 405, 310,
	229, 345, 406, 0, 294, 407, 408, 268, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 285, 230, 0,
	0, 343, 0, 184, 0, 382, 218, 295, 292, 413,
	244, 236, 232, 217, 269, 301, 341, 400, 335, 0,
	289, 0, 0, 391, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 216, 183, 326, 392, 248, 0, 0, 0, 0,
	175, 176, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 0, 214, 0, 0, 0, 0, 0,
	228, 273, 235, 227, 410, 0, 0, 0, 0, 199,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 315, 0, 0, 0, 0, 442,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 281,
	179, 195, 0, 0, 325, 365, 371, 0, 0, 0,
	219, 0, 369, 339, 427, 203, 246, 362, 344, 367,
	0, 0, 368, 290, 415, 357, 425, 443, 444, 226,
	319, 433, 404, 439, 455, 196, 223, 333, 397, 430,
	388, 312, 411, 412, 280, 387, 254, 182, 288, 449,
	194, 377, 211, 201, 187, 399, 423, 208, 380, 0,
	0, 457, 189, 421, 396, 308, 277, 278, 188, 0,
	361, 231, 252, 221, 328, 418, 419, 220, 458, 198,
	438, 191, 0, 437, 321, 414, 422, 309, 300, 190,
	420, 307, 299, 283, 242, 263, 355, 293, 356, 264,
	317, 316, 318, 0, 185, 0, 393, 431, 459, 204,
	205, 206, 0, 241, 245, 251, 253, 259, 260, 267,
	286, 332, 354, 352, 358, 0, 409, 426, 434, 441,
	447, 448, 450, 451, 452, 453, 454, 320, 266, 389,
	282, 291, 0, 0, 338, 370, 209, 429, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 192,
	287, 0, 359, 249, 456, 436, 432, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 181, 193, 202, 212, 224, 239, 247,
	257, 262, 265, 270, 271, 274, 279, 297, 302, 303,
	304, 305, 322, 323, 324, 327, 330, 331, 334, 336,
	337, 340, 347, 348, 349, 350, 351, 353, 360, 364,
	372, 373, 374, 375, 376, 378, 379, 383, 384, 385,
	386, 394, 398, 416, 417, 428, 440, 445, 258, 424,
	446, 0, 296, 0, 0, 298, 243, 261, 272, 0,
	435, 395, 197, 366, 250, 186, 215, 200, 222, 237,
	240, 276, 306, 313, 342, 346, 255, 234, 213, 363,
	210, 381, 401, 402, 403, 405, 310, 229, 345, 406,
	0, 294, 407, 408, 268, 0, 0, 0, 0, 0,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 0, 0, 285, 230, 0, 0, 343, 0,
	184, 0, 382, 218, 295, 292, 413, 244, 236, 232,
	217, 269, 301, 341, 400, 335, 0, 289, 0, 0,
	391, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 216, 183,
	326, 392, 248, 0, 0, 0, 0, 175, 176, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 207,
	0, 214, 0, 0, 0, 0, 0, 228, 273, 235,
	227, 410, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 315, 0, 0, 0, 0, 442, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 281, 179, 195, 0,
	0, 325, 365, 371, 0, 0, 0, 219, 0, 369,
	339, 427, 203, 246, 362, 344, 367, 0, 0, 368,
	290, 415, 357, 425, 443, 444, 226, 319, 433, 404,
	439, 455, 196, 223, 333, 397, 430, 388, 312, 411,
	412, 280, 387, 254, 182, 288, 449, 194, 377, 211,
	201, 187, 399, 423, 208, 380, 0, 0, 457, 189,
	421, 396, 308, 277, 278, 188, 0, 361, 231, 252,
	221, 328, 418, 419, 220, 458, 198, 438, 191, 0,
	437, 321, 414, 422, 309, 300, 190, 420, 307, 299,
	283, 242, 263, 355, 293, 356, 264, 317, 316, 318,
	0, 185, 0, 393, 431, 459, 204, 205, 206, 0,
	241, 245, 251, 253, 259, 260, 267, 286, 332, 354,
	352, 358, 0, 409, 426, 434, 441, 447, 448, 450,
	451, 452, 453, 454, 320, 266, 389, 282, 291, 0,
	0, 338, 370, 209, 429, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 192, 287, 0, 359,
	249, 456, 436, 432, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	181, 193, 202, 212, 224, 239, 247, 257, 262, 265,
	270, 271, 274, 279, 297, 302, 303, 304, 305, 2436,
	323, 324, 327, 330, 331, 334, 336, 337, 340, 347,
	348, 349, 350, 351, 353, 360, 364, 372, 373, 374,
	375, 376, 378, 379, 383, 384, 385, 386, 394, 398,
	416, 417, 428, 440, 445, 258, 424, 446, 0, 296,
	0, 0, 298, 243, 261, 272, 0, 435, 395, 197,
	366, 250, 186, 215, 200, 222, 237, 240, 276, 306,
	313, 342, 346, 255, 234, 213, 363, 210, 381, 401,
	402, 403, 405, 310, 229, 345, 79, 0, 294, 407,
	408, 268, 600, 607, 608, 609, 610, 601, 603, 0,
	0, 0, 602, 0, 0, 605, 611, 612, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2085, 2086,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	613, 614, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 600, 607, 608, 609, 610, 601, 603, 0, 0,
	0, 602, 0, 0, 0, 611, 612, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2085, 2086, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 613,
	614, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
}

var yyPact = [...]int{
	3321, -1000, -372, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1788, 1874, -1000, -1000, -1000, 1936, -1000, 642,
	1510, -1000, 1792, 2921, -1000, 32355, 406, -1000, 31818, 404,
	448, 32355, -1000, 129, -1000, 102, 32355, 125, 31281, -1000,
	-1000, -283, 13552, 1735, 11, 10, 32355, -1000, 1912, 1537,
	-1000, 299, -1000, -1000, -1000, -1000, -1000, -1000, 30744, -1000,
	-1000, -1000, 1803, 1774, 1945, 553, 1732, -1000, 1837, 1537,
	-1000, 13552, 1886, 1829, 13015, -1000, 349, -1000, -1000, 9786,
	-1000, -1000, 17850, 32355, 32355, 221, -1000, 1792, -1000, -1000,
	293, -1000, 247, 1455, -1000, 1454, -1000, 431, 625, 282,
	400, 395, 276, 275, 274, 272, 271, 270, 265, 261,
	289, -1000, 617, 617, -142, -144, 2570, 330, 330, 330,
	375, 1754, 1753, -1000, 549, -1000, 617, 617, 284, 617,
	617, 617, 617, 231, 229, 617, 617, 617, 617, 617,
	617, 617, 617, 617, 617, 617, 617, 617, 617, 617,
	253, 1792, 217, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 32355, 120,
	32355, -1000, 477, 32355, 690, 690, 15, 690, 690, 690,
	690, 118, 526, 4, -1000, 115, 210, 96, 214, 715,
	133, 117, -1000, -1000, 211, 715, 1116, 592, 105, -1000,
	690, 7606, 7606, 7606, -1000, 1783, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 373, -1000, -1000, -1000, -1000, 32355,
	30207, 288, 624, -1000, -1000, -1000, 67, -1000, -1000, 1215,
	658, 13552, 976, -1000, 1363, 533, -1000, -1000, -1000, -1000,
	-1000, 424, 14089, 14089, 14089, 14089, -1000, -1000, 1477, 1477,
	1477, 1477, 14089, 1477, 14089, 1477, 1477, 1477, 1477, 13552,
	1477, 1477, 1477, -1000, 1477, 1477, 1477, 1477, 1477, 1477,
	1477, 476, 1477, 1477, 1477, 1477, 1477, -1000, -1000, -1000,
	-1000, 1477, 1477, 1477, 1477, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 15700, -1000, 11404, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 32355, -1000, 1477, 140, 1837,
	1537, -1000, 1912, 1879, 299, -1000, 1921, 1210, 1402, 823,
	1537, 1438, 32355, -1000, 1481, -1000, -1000, -1000, 1663, 995,
	1112, -1000, -1000, -1000, -1000, 1126, 13552, -1000, -1000, 1918,
	-1000, 15163, 472, 756, 29670, -1000, 349, 349, 1453, 9241,
	-46, -1000, -1000, -1000, 623, 20535, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1783, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1449, 32355, -1000, -1000, 4403, 1099, -1000, 1503,
	-1000, 1443, -1000, 1486, 1524, 399, 1099, 389, 386, 385,
	-1000, -90, -1000, -1000, -1000, -1000, -1000, 617, 617, 283,
	2921, 3841, -1000, -1000, -1000, 29133, 1501, 1099, -1000, 1500,
	-1000, 694, 444, 499, 499, 1099, -1000, -1000, 32355, 1099,
	673, 671, 32355, 32355, -1000, 28596, -1000, 28059, 27522, 913,
	32355, 26985, 26448, 25911, 25374, 24837, -1000, 1644, -1000, 1546,
	-1000, -1000, -1000, 32355, 32355, 32355, 279, -1000, -1000, 32355,
	1099, -1000, -1000, 896, 894, 617, 617, 893, 1105, 1104,
	1078, 617, 617, 888, 1075, 22146, 207, 880, 878, 875,
	952, 1060, 186, 930, 874, 872, 32355, 1499, 32355, -1000,
	200, 569, 312, 619, 1792, 1715, 1452, 357, 397, 1099,
	339, 339, -1000, 8151, -1000, -1000, 1050, 13552, -1000, 717,
	715, 715, -1000, -1000, -1000, -1000, -1000, -1000, 690, 32355,
	717, -1000, -1000, -1000, 715, 690, 32355, 690, 690, 690,
	690, 715, 715, 715, 690, 32355, 32355, 32355, 32355, 32355,
	32355, 32355, 32355, 32355, 7606, 7606, 7606, 592, 690, -287,
	-1000, 1033, -1000, 1616, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 124, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -93, 1451, 24300, -1000, -291, -292, -293, -295,
	-1000, -1000, -1000, -297, -299, -1000, -1000, -1000, 13552, 13552,
	13552, 13552, -1000, 1044, 14089, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 768, 675, 14089, 14089, 14089, 14089, 14089, 14089,
	14089, 14089, 14089, 14089, 14089, 14089, 14089, 14089, 14089, 783,
	1029, 1028, 533, 533, 533, 533, -1000, 13015, 13552, 13552,
	533, -1000, 1099, 23763, 13015, 13015, 13552, 1766, 633, 658,
	32355, -1000, 823, -1000, -1000, -1000, 826, -1000, 32355, 32355,
	1264, 10329, 8151, 13015, 13015, 13015, 13015, 13015, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 469,
	1368, 1338, 1436, -1000, 1445, -1000, -158, 17313, 13552, 1025,
	-1000, -1000, -1000, 1837, -1000, 1837, 1368, 1674, 1666, 13015,
	-1000, -1000, 1674, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1278, -1000, 32355, 1438, 1825, 32355, 1659, 1011, 279,
	-1000, 13552, 13552, 1415, -1000, 1071, 32355, -1000, -1000, 23226,
	-1000, -1000, 7061, -1000, 251, 32355, -1000, 19461, 22689, 8696,
	-46, -1000, 8696, 1337, -1000, -17, -27, 10866, 524, -1000,
	-1000, -1000, 2570, 14626, 1190, 1744, 46, -1000, -1000, -1000,
	1486, -1000, 1486, 1486, 1486, 1486, 279, 279, 279, 279,
	-1000, -1000, -1000, -1000, -1000, 1498, 1496, -1000, 1486, 1486,
	1486, 1486, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1494,
	1494, 1494, 1487, 1487, 325, -1000, 13552, 223, 32355, 1801,
	865, 200, 344, 1553, 1099, 1099, 1099, 344, -1000, 1292,
	1266, -1000, 1413, -1000, -1000, 1885, -1000, -1000, 829, 730,
	723, 453, 32355, 146, 248, -1000, 315, -1000, 32355, 1099,
	668, 499, 1099, -1000, 1099, -1000, -1000, -1000, -1000, -1000,
	1099, 1396, -1000, 1407, 764, 720, 733, 688, 1396, -1000,
	-1000, -117, 1396, -1000, 1396, -1000, 1396, -1000, 1396, -1000,
	1396, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 578,
	32355, 146, 783, -1000, 353, -1000, -1000, 783, 783, -1000,
	-1000, -1000, -1000, 1009, 1005, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -353, 32355, -1000, 191, 618, 238, 277, 250,
	32355, 182, 1831, 180, 228, 32355, 32355, 339, 1610, 32355,
	1808, 32355, -1000, -1000, -1000, -1000, 658, 32355, -1000, -1000,
	690, 690, -1000, -1000, 32355, 690, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 690, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 32355, 32355, -1000, -1000, -1000, -1000, -1000, 122,
	-19, 263, -1000, -1000, -1000, -1000, -1000, 1834, -1000, 658,
	681, 644, -1000, -1000, -1000, 838, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 768, 14089, 14089, 14089, 1467, 370, 1618,
	1010, 1315, 803, 803, 845, 845, 538, 538, 538, 538,
	538, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1394, -1000,
	981, 1165, 823, -1000, 1394, 1394, 961, 13015, -1000, -1000,
	632, -1000, 13552, 823, -1000, -1000, 823, 1390, 1359, 1911,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 823, 13015, 13015, 1348, 1477, 465, -1000, 1394, 823,
	823, 1394, 1394, 8151, 823, -1000, 32355, -1000, -279, -1000,
	-25, 492, 1477, -1000, 22146, 823, 1215, -1000, -1000, -1000,
	-1000, -1000, 19998, 1504, 1674, -1000, -1000, 1477, 1434, -1000,
	-1000, 279, 35, 812, 658, 658, 13552, -1000, -1000, -1000,
	-1000, -1000, -1000, 459, 278, 1477, -1000, 1398, 1733, -1000,
	-1000, -1000, 1824, 16238, -1000, 1493, 32355, 1414, 1273, -1000,
	457, -1000, 1337, -46, -44, -1000, -1000, -1000, -1000, 658,
	-1000, 1228, 252, 354, -1000, 318, -1000, -1000, -1000, -1000,
	821, 1817, 1736, 40, -1000, -1000, -1000, 279, 279, -1000,
	-1000, -1000, -1000, -1000, -1000, 998, 998, -1000, -1000, -1000,
	-1000, -1000, 853, -1000, -1000, -1000, 851, -1000, -1000, 1245,
	1568, 223, -1000, -1000, 617, 997, 1746, 32355, -1000, -1000,
	1177, 191, 32355, 639, 1608, -1000, 1553, 1553, 1553, 32355,
	-1000, -1000, -1000, -1000, 297, 32355, 1411, -1000, 144, -1000,
	1171, 32355, -1000, 1409, 1490, 1099, 1099, -1000, -1000, -1000,
	32355, 1477, -1000, -1000, -1000, -1000, 392, 1789, 1785, 146,
	144, 524, 1099, -1000, -1000, -1000, -1000, -1000, -352, 1400,
	380, 169, 233, 32355, 32355, 32355, 32355, 32355, 458, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 220, 351, -1000,
	32355, 32355, 506, -1000, -1000, -1000, 715, -1000, -1000, 715,
	-1000, -1000, -1000, -1000, -1000, 1780, 32355, -23, -321, -1000,
	-317, -1000, -1000, -1000, -1000, 1403, 369, 1618, 14089, 14089,
	13015, -112, 242, 242, 783, -1000, -1000, -1000, 13552, 13552,
	1297, 628, -1000, 13552, 807, -1000, -1000, 13552, 13552, 13552,
	-1000, 1394, 1394, 13015, 8151, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 384, 382, 371, 32355, -1000,
	-1000, 1859, -1000, 1691, 1690, 1910, 1908, -1000, 19461, 1674,
	-1000, -1000, 32355, -272, -1000, 1712, 1686, -1000, -1000, -1000,
	-1000, 6516, 1604, 32355, 1477, -1000, 16776, 32355, 32355, 19461,
	19461, 19461, 19461, 19461, -1000, 1641, 1630, -1000, 1648, 1642,
	1683, 32355, -1000, 1388, 823, 1879, 16238, 13552, 18387, 1316,
	19461, -1000, -1000, 19461, 32355, 5971, -1000, -1000, -32, -56,
	-1000, -1000, -1000, -1000, 1882, 2570, -1000, -1000, -1000, -1000,
	744, 5047, 1944, -1000, 991, -1000, 1137, -1000, 666, 657,
	-1000, 32355, 1489, -1000, -1000, -1000, -1000, -1000, 1384, -1000,
	1367, 1327, 1364, 148, -1000, 1519, 1764, 617, 617, -1000,
	842, -1000, 1099, -1000, -1000, 379, -1000, 1807, 32355, 1601,
	1594, 1571, -1000, 1881, 1318, 32355, -1000, -1000, 32355, -1000,
	1679, 223, 32355, -1000, -1000, -1000, 248, 32355, -1000, 33354,
	144, -1000, -1000, -1000, -1000, -1000, -1000, 32355, 174, -1000,
	1488, 1095, -1000, 1528, -1000, -1000, -1000, -1000, 137, 235,
	-1000, 32355, 454, 1568, 32355, -1000, -1000, -1000, 690, 690,
	-1000, -1000, 1758, -1000, 1099, 14089, 14089, -1000, 533, -1000,
	1477, 823, 1486, 1486, -1000, 1486, 1487, -1000, 1486, 108,
	1486, 93, 823, 823, 916, 902, -106, -1000, 658, 13552,
	1212, 1114, 1092, -1000, -1000, 823, -1000, 1477, 1477, 1477,
	1357, 32355, -1000, -1000, -1000, -1000, 1908, 1891, 13552, 1324,
	-1000, -1000, 35, 338, -1000, 1726, 1686, -1000, 1877, 1708,
	1872, -1000, -1000, -1000, 1794, 1185, -1000, 605, 1199, -1000,
	-1000, 12478, 1362, 1669, 445, 1357, 1386, 1733, 1532, 1565,
	1990, -1000, -1000, -1000, -1000, 1627, -1000, 1578, -1000, -1000,
	1481, -1000, -1000, 1338, 1086, 251, 19461, 1275, 1275, -1000,
	432, -1000, -1000, -1000, -1000, -364, -1000, -1000, 13552, -1000,
	-1000, -1000, -1000, -1000, -1000, 832, 832, 993, -1000, -1000,
	-1000, -1000, -1000, 1484, 13552, 279, 984, 279, 841, -1000,
	814, -1000, -1000, -182, -1000, -1000, 1511, 1595, -1000, -1000,
	32355, -1000, -1000, 32355, 32355, 32355, 32355, -1000, -1000, 245,
	-1000, 1346, 1340, -1000, -136, -1000, 13552, -1000, 1481, -1000,
	-1000, -1000, 1169, -1000, -121, 32355, 32355, 32355, 32355, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 533, 14089,
	-1000, -1000, 305, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 13552, -1000, 13552, -1000, 1837, 978, 658, 13552, 13552,
	-1000, -1000, 18924, 21609, 21609, 18387, -1000, 1891, 1889, 1867,
	658, 1702, 1704, 1704, 1726, -1000, 1864, 1853, -1000, 972,
	1842, 969, 655, -1000, 32355, 13552, 1477, -1000, 298, 32355,
	1477, 32355, -1000, 1875, -1000, -1000, 13552, 1482, -1000, 13552,
	-1000, -1000, -1000, -1000, -1000, 14600, 1908, 1275, -1000, -1000,
	544, 61, 281, -1000, -1000, -1000, 1092, -1000, -1000, -1000,
	32355, 1224, -1000, -1000, -1000, 1167, 1147, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1481, -1000, -1000, -1000, 1318,
	243, 266, -1000, 248, -1000, -145, -147, 1092, 1812, -1000,
	-1000, 8151, -1000, -1000, 1480, 1547, -1000, 280, -1000, -1000,
	1092, 1092, 823, -1000, 1092, 1092, 1311, -1000, -1000, -1000,
	1311, 1311, 492, 1889, -1000, 13552, 13552, 1699, 816, -1000,
	-1000, -1000, -1000, 965, 951, -1000, 944, -1000, 1940, -1000,
	658, -1000, 1477, -1000, 427, 1199, -1000, 1837, 658, 32355,
	658, 29, 840, 1875, -1000, 1479, 1516, -357, 13552, 1478,
	-1000, 1309, -1000, -1000, -1000, 1811, 1477, -1000, -1000, -1000,
	-1000, -1000, 299, 1299, -1000, 604, 32355, 32355, 823, 239,
	-125, -1000, -1000, -1000, -1000, -1000, 21072, -1000, -1000, -1000,
	-1000, -1000, 658, 1215, -1000, 791, -1000, -1000, -1000, -1000,
	-1000, 32355, 1199, 32355, -1000, 1305, 1127, 1476, 1837, 13552,
	1474, 601, -363, 796, 1189, 32355, 1564, 867, 299, 11941,
	-118, 8151, 5426, 1303, -1000, -1000, 1656, -115, -129, -1000,
	-1000, -1000, -1000, 1196, -1000, -1000, 18387, 32892, -1000, 1144,
	32355, 794, 1459, 1839, -1000, -1000, 1256, 1562, -1000, 1915,
	-1000, -1000, -1000, 739, 770, -1000, -1000, -1000, -118, 1092,
	823, -1000, -33, -1000, -1000, -1000, -1000, -1000, 1528, -1000,
	1653, -1000, -1000, 1239, -1000, 4003, -217, -357, 1218, -1000,
	-1000, 248, -361, -1000, -1000, 1931, 507, 507, -1000, -1000,
	-1000, -1000, -1000, 316, -1000, -1000, -121, -123, -1000, 32892,
	-209, 524, 14600, -363, -357, 1183, 59, -1000, -1000, -1000,
	300, 818, -1000, 193, -1000, -127, -1000, -1000, 1804, 29,
	1459, -363, -1000, 1473, 1516, -1000, -1000, -1000, -1000, -130,
	-241, -1000, -1000, -1000, 1459, 13552, 1458, -1000, 14600, -1000,
	971, 32355, 173, -369, 1158, 173, -1000, 1559, -1000, -1000,
	33463, -1000, 769, -369, -1000, 1558, -220, -1000, -1000, -1000,
	-303, -1000, -1000,
}

var yyPgo = [...]int{
	0, 15, 2261, 12, 1, 11, 2260, 38, 98, 185,
	25, 169, 91, 2259, 2257, 2256, 197, 193, 191, 2255,
	2254, 2253, 2252, 2250, 2249, 2247, 2246, 2242, 2241, 195,
	151, 164, 2232, 2227, 2222, 99, 150, 80, 83, 166,
	2221, 2219, 71, 2218, 2217, 2216, 173, 159, 676, 2215,
	156, 114, 2213, 2210, 2209, 2208, 2205, 2204, 2203, 2201,
	2197, 2196, 2195, 2193, 2191, 2190, 269, 2189, 2188, 21,
	2187, 73, 2186, 2183, 2182, 2181, 2180, 56, 2179, 2178,
	2177, 2171, 127, 2170, 2169, 2168, 188, 2167, 2166, 2165,
	132, 92, 97, 2164, 2163, 94, 167, 2162, 101, 144,
	2160, 2158, 1688, 6, 74, 65, 2156, 48, 66, 3,
	58, 10, 2154, 2152, 81, 76, 2151, 89, 54, 2148,
	96, 90, 2147, 2146, 8, 9, 2143, 4, 2142, 2,
	68, 2140, 2120, 107, 2118, 2112, 2108, 86, 2107, 2105,
	3082, 2103, 87, 121, 35, 138, 2102, 2101, 2100, 2099,
	2098, 53, 2097, 2095, 2094, 125, 30, 2089, 32, 42,
	37, 129, 2088, 77, 72, 2087, 123, 2083, 2080, 50,
	36, 34, 2077, 47, 119, 143, 26, 88, 124, 2076,
	2074, 41, 62, 2072, 2071, 2070, 2069, 2068, 2066, 55,
	2065, 44, 2061, 172, 2058, 17, 43, 70, 69, 162,
	60, 28, 2051, 161, 2049, 45, 154, 118, 149, 2048,
	2047, 2045, 168, 258, 2044, 2041, 64, 160, 133, 139,
	2040, 263, 2039, 2037, 85, 1116, 1579, 40, 148, 2026,
	2023, 3007, 131, 126, 23, 2021, 268, 2017, 2016, 2011,
	176, 155, 106, 862, 102, 18, 2009, 2008, 2004, 2003,
	2001, 1999, 95, 174, 61, 5, 157, 63, 1998, 1997,
	1996, 111, 112, 1995, 146, 145, 117, 134, 1994, 152,
	135, 109, 1993, 82, 1992, 1988, 1986, 1984, 84, 1980,
	1979, 1978, 1977, 142, 136, 115, 78, 1976, 75, 113,
	137, 141, 20, 16, 33, 165, 24, 1974, 14, 0,
	1973, 19, 153, 262, 147, 1972, 1969, 13, 1968, 22,
	1967, 1966, 130, 1964, 1961, 1959, 29, 31, 27, 7,
	1958, 1957, 3067, 357, 120, 1930, 171,
}

//line sql.y:6087
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprOrColumnsUnion() *ExprOrColumns {
	v, _ := st.union.(*ExprOrColumns)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintsUnion() *IndexHints {
	v, _ := st.union.(*IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 320, 321, 321, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 299, 299, 299, 302, 302, 27,
	61, 29, 29, 28, 28, 31, 31, 30, 7, 7,
	7, 8, 8, 8, 8, 8, 8, 8, 8, 9,
	9, 9, 9, 9, 10, 10, 10, 10, 12, 12,
	12, 12, 12, 15, 11, 11, 16, 16, 73, 73,
	17, 18, 18, 18, 18, 324, 324, 135, 135, 133,
	133, 123, 125, 126, 126, 124, 124, 124, 124, 124,
	124, 89, 89, 128, 127, 129, 129, 129, 134, 134,
	198, 198, 19, 20, 20, 208, 208, 207, 207, 207,
	209, 209, 209, 209, 243, 243, 21, 21, 21, 21,
	21, 87, 87, 301, 301, 300, 298, 298, 297, 297,
	296, 33, 34, 43, 43, 43, 43, 44, 45, 303,
	303, 274, 49, 49, 48, 48, 48, 48, 50, 50,
	47, 47, 46, 46, 276, 276, 263, 263, 275, 275,
	275, 275, 275, 275, 275, 262, 262, 101, 101, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	315, 315, 180, 180, 180, 180, 180, 180, 106, 106,
	114, 114, 114, 114, 104, 104, 105, 103, 103, 103,
	109, 109, 109, 109, 109, 109, 109, 109, 109, 109,
	109, 109, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 113, 113, 110, 110, 111, 111, 111,
	316, 316, 316, 316, 245, 245, 245, 245, 248, 248,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 247,
	247, 247, 247, 247, 249, 249, 249, 249, 249, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 251, 251, 251, 251, 251, 251,
	251, 251, 261, 261, 252, 252, 256, 256, 257, 257,
	257, 258, 258, 258, 259, 259, 254, 254, 254, 254,
	255, 255, 255, 264, 288, 288, 287, 287, 285, 285,
	285, 285, 273, 273, 282, 282, 282, 282, 282, 272,
	272, 268, 268, 268, 269, 269, 270, 270, 267, 267,
	271, 271, 284, 284, 283, 265, 265, 266, 266, 290,
	317, 317, 317, 317, 318, 318, 291, 308, 309, 307,
	307, 307, 307, 307, 71, 71, 71, 220, 220, 220,
	280, 280, 279, 279, 279, 281, 281, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 215, 215, 215, 306, 306,
	306, 306, 306, 306, 305, 305, 305, 277, 277, 277,
	304, 304, 51, 51, 164, 164, 40, 40, 40, 40,
	40, 40, 39, 39, 39, 35, 35, 35, 35, 35,
	35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
	35, 35, 35, 35, 35, 35, 35, 35, 41, 41,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 75,
	75, 75, 75, 77, 77, 77, 293, 293, 1, 1,
	5, 5, 2, 2, 76, 76, 3, 3, 4, 4,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 260, 260, 260, 292, 292, 294, 294, 23,
	32, 32, 24, 24, 24, 24, 25, 25, 52, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 310, 310, 214,
	214, 222, 222, 213, 213, 236, 236, 236, 216, 216,
	216, 217, 217, 314, 314, 314, 54, 54, 56, 56,
	57, 58, 58, 238, 238, 239, 239, 59, 60, 72,
	72, 72, 72, 72, 72, 74, 74, 74, 14, 14,
	14, 14, 68, 68, 68, 13, 13, 55, 55, 62,
	311, 311, 312, 313, 313, 313, 313, 63, 65, 26,
	26, 26, 26, 26, 26, 94, 94, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 82, 82, 82, 88,
	88, 88, 83, 83, 325, 66, 67, 67, 86, 86,
	86, 80, 80, 80, 85, 85, 85, 91, 91, 93,
	93, 93, 93, 93, 95, 95, 95, 95, 95, 95,
	95, 90, 90, 92, 92, 92, 92, 229, 229, 229,
	228, 228, 117, 117, 119, 118, 118, 120, 120, 121,
	121, 121, 121, 162, 143, 143, 196, 196, 195, 195,
	197, 197, 197, 197, 199, 199, 122, 122, 122, 122,
	130, 130, 131, 131, 132, 132, 237, 237, 234, 234,
	234, 233, 233, 136, 136, 136, 138, 137, 137, 137,
	137, 139, 139, 141, 141, 140, 140, 142, 144, 144,
	144, 144, 144, 145, 145, 102, 102, 102, 102, 102,
	102, 112, 112, 112, 112, 115, 115, 115, 115, 115,
	115, 115, 115, 115, 115, 115, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 211, 211, 146, 146, 154, 154, 154, 154,
	147, 147, 147, 147, 147, 147, 147, 155, 155, 155,
	161, 156, 156, 152, 152, 152, 152, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 151, 151, 151,
	151, 151, 151, 151, 151, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 326, 326, 253, 253,
	253, 153, 153, 153, 153, 153, 84, 84, 84, 84,
	84, 242, 242, 242, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 167, 167, 81,
	81, 165, 165, 166, 168, 168, 163, 163, 163, 149,
	149, 149, 169, 169, 170, 170, 171, 171, 173, 172,
	172, 174, 175, 175, 175, 176, 176, 177, 177, 177,
	42, 42, 42, 42, 42, 37, 37, 37, 37, 38,
	38, 38, 96, 96, 96, 96, 98, 98, 97, 97,
	69, 69, 70, 70, 70, 99, 99, 100, 100, 100,
	100, 193, 193, 178, 178, 178, 185, 185, 185, 181,
	181, 183, 183, 183, 184, 184, 184, 182, 190, 190,
	192, 192, 191, 191, 187, 187, 188, 188, 189, 189,
	189, 186, 186, 148, 148, 148, 148, 148, 194, 194,
	194, 194, 200, 200, 158, 158, 160, 160, 159, 116,
	201, 201, 205, 202, 202, 206, 206, 206, 206, 206,
	203, 203, 204, 204, 230, 230, 230, 210, 210, 221,
	221, 218, 218, 219, 219, 212, 212, 223, 223, 223,
	64, 157, 157, 289, 289, 286, 226, 226, 227, 227,
	231, 231, 235, 235, 232, 232, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 322, 323, 240,
	241, 241, 241,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 0, 1, 2,
	3, 2, 3, 0, 1, 3, 1, 4, 3, 3,
	4, 3, 2, 3, 4, 3, 4, 2, 7, 1,
	3, 3, 3, 3, 1, 2, 1, 1, 3, 2,
	3, 3, 2, 5, 9, 8, 7, 8, 1, 1,
	10, 11, 9, 8, 8, 1, 1, 1, 3, 1,
	3, 8, 4, 1, 3, 3, 6, 7, 7, 8,
	4, 0, 1, 3, 3, 1, 1, 2, 1, 3,
	0, 4, 3, 5, 4, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 1, 1, 2, 2, 6, 12,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 6, 4, 7, 8, 8, 8, 6, 3, 1,
	1, 5, 0, 1, 1, 1, 2, 2, 0, 1,
	4, 4, 4, 4, 2, 4, 1, 3, 1, 1,
	3, 4, 3, 3, 3, 4, 9, 0, 2, 0,
	2, 3, 5, 3, 4, 2, 3, 2, 3, 3,
	1, 1, 0, 2, 2, 3, 3, 2, 1, 1,
	2, 2, 2, 2, 1, 1, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 1, 2, 1, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 3,
	3, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 5, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 3, 0, 5, 0, 3,
	5, 0, 1, 1, 0, 1, 0, 2, 2, 2,
	0, 2, 2, 5, 0, 1, 1, 2, 1, 3,
	2, 3, 0, 1, 4, 3, 3, 4, 2, 0,
	2, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	0, 1, 1, 3, 3, 3, 1, 3, 1, 7,
	5, 6, 6, 7, 0, 1, 5, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 1, 0, 1, 2,
	0, 1, 1, 3, 2, 1, 2, 3, 3, 4,
	4, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 5, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 1, 0, 2, 0, 1, 5, 1,
	3, 7, 1, 3, 3, 1, 2, 2, 2, 5,
	5, 5, 6, 8, 6, 5, 5, 2, 2, 2,
	2, 3, 3, 3, 4, 1, 3, 5, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 2,
	4, 4, 2, 11, 3, 6, 8, 6, 6, 6,
	13, 8, 6, 10, 5, 5, 5, 5, 5, 0,
	10, 11, 7, 0, 8, 9, 0, 3, 0, 1,
	0, 3, 1, 1, 3, 4, 0, 2, 0, 2,
	5, 3, 7, 4, 4, 4, 4, 3, 3, 3,
	7, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 0, 2, 2, 1, 3, 8, 8, 3,
	3, 5, 7, 7, 6, 5, 3, 2, 3, 3,
	3, 7, 3, 3, 3, 3, 4, 7, 5, 2,
	4, 4, 4, 4, 4, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 2, 4,
	2, 4, 5, 4, 4, 4, 4, 4, 3, 3,
	3, 5, 2, 3, 3, 3, 3, 1, 1, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 2, 1, 1, 2,
	1, 1, 5, 0, 1, 0, 1, 2, 3, 0,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 3, 3, 2, 2, 3,
	1, 3, 2, 1, 2, 1, 2, 2, 4, 3,
	3, 6, 4, 7, 6, 1, 3, 2, 2, 2,
	2, 1, 1, 1, 3, 2, 1, 1, 1, 0,
	1, 1, 0, 3, 0, 2, 0, 2, 1, 2,
	2, 0, 1, 1, 0, 1, 1, 0, 1, 0,
	1, 2, 3, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 3, 1, 3, 3, 7, 0, 3, 1, 3,
	1, 1, 3, 3, 1, 3, 4, 4, 4, 3,
	2, 4, 0, 1, 0, 2, 0, 1, 0, 1,
	2, 1, 1, 1, 2, 2, 1, 2, 3, 2,
	3, 2, 2, 2, 1, 1, 3, 3, 0, 5,
	4, 5, 5, 0, 2, 3, 3, 3, 2, 3,
	1, 3, 4, 3, 1, 3, 4, 5, 6, 3,
	4, 5, 6, 3, 4, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 3, 1, 1, 2, 2, 2, 2,
	1, 1, 2, 9, 6, 6, 6, 2, 2, 3,
	3, 3, 0, 3, 1, 1, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 4, 5, 5, 6, 4, 4, 8,
	6, 8, 6, 8, 5, 4, 2, 2, 1, 2,
	2, 2, 8, 8, 6, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 2,
	3, 4, 4, 4, 4, 4, 0, 3, 4, 7,
	3, 1, 1, 1, 2, 3, 3, 1, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 3, 5, 1,
	2, 2, 0, 3, 0, 2, 0, 1, 3, 1,
	3, 2, 0, 1, 1, 0, 1, 2, 4, 4,
	0, 2, 2, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 0, 3, 3, 3, 0, 3, 1, 1,
	0, 4, 0, 1, 1, 0, 3, 1, 3, 2,
	1, 2, 4, 9, 3, 5, 0, 3, 3, 0,
	1, 0, 2, 2, 0, 2, 2, 2, 0, 2,
	1, 2, 3, 3, 0, 2, 1, 2, 3, 4,
	3, 0, 1, 2, 1, 5, 4, 4, 1, 3,
	3, 5, 0, 5, 1, 3, 1, 2, 3, 1,
	1, 3, 3, 1, 3, 3, 3, 3, 3, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 0, 3, 0, 1, 0, 1, 1,
	5, 0, 1, 0, 1, 2, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	0, 1, 1,
}

var yyChk = [...]int{
	-1000, -320, -6, -10, -15, -16, -17, -18, -19, -20,
	-21, -22, -23, -24, -25, -52, -53, -54, -56, -57,
	-58, -59, -60, -13, -55, -26, -27, -61, -62, -63,
	-64, -65, -8, -7, -12, 7, -73, -28, 29, -33,
	-43, 201, -44, -34, 202, -45, 204, 203, 239, 205,
	232, 71, 279, 280, 282, 283, 284, 285, -74, 237,
	238, 207, 33, 42, 30, 31, 34, 210, -9, -29,
	6, -322, 8, 403, 234, 233, 25, -11, 416, 82,
	-321, 550, -193, -178, 19, 30, 26, -177, -173, -86,
	-178, 17, 15, 5, -66, -325, -66, 9, 10, -66,
	-274, -276, 82, 138, 82, -66, -49, -48, -47, -46,
	-50, 28, -40, -41, -295, -39, -36, 206, 203, 247,
	105, 106, 239, 240, 241, 205, 223, 238, 242, 237,
	256, -35, 77, 30, 416, 419, -281, 202, 208, 209,
	404, 108, 107, 72, 204, -278, 329, 520, -50, 522,
	97, 99, 521, 41, 213, 523, 524, 525, 526, 222,
	527, 528, 529, 530, 536, 537, 538, 539, 109, 5,
	-66, -235, -231, -299, -225, 85, 86, 87, 413, 225,
	447, 448, 272, 77, 38, 329, 520, 279, 293, 287,
	314, 306, 414, 449, 275, 226, 260, 517, 304, 114,
	522, 278, 450, 240, 334, 335, 336, 97, 282, 371,
	535, 277, 451, 533, 99, 521, 76, 48, 41, 235,
	302, 298, 523, 261, 452, 424, 254, 108, 105, 542,
	33, 296, 47, 27, 532, 107, 46, 524, 129, 453,
	525, 338, 319, 511, 45, 339, 241, 454, 80, 418,
	519, 340, 297, 341, 271, 531, 207, 455, 503, 342,
	343, 512, 456, 320, 324, 457, 363, 344, 549, 49,
	458, 459, 513, 106, 460, 75, 526, 291, 292, 461,
	269, 224, 365, 318, 222, 32, 345, 415, 273, 55,
	248, 366, 43, 322, 546, 42, 507, 462, 510, 317,
	313, 50, 463, 464, 465, 466, 527, 316, 290, 312,
	541, 436, 266, 528, 59, 209, 326, 325, 327, 255,
	362, 309, 467, 468, 469, 229, 78, 470, 299, 18,
	471, 472, 346, 262, 473, 53, 474, 475, 369, 238,
	476, 51, 529, 36, 243, 543, 530, 477, 478, 479,
	480, 481, 348, 482, 347, 321, 323, 250, 349, 417,
	483, 295, 242, 534, 484, 230, 518, 244, 247, 237,
	370, 231, 485, 486, 487, 488, 489, 276, 490, 491,
	283, 536, 40, 492, 493, 494, 495, 270, 265, 364,
	373, 58, 79, 331, 496, 516, 289, 263, 497, 280,
	52, 537, 538, 539, 257, 540, 7, 547, 548, 351,
	109, 267, 268, 44, 310, 249, 498, 499, 300, 301,
	315, 288, 311, 281, 504, 251, 352, 239, 500, 372,
	264, 332, 421, 256, 353, 515, 420, 308, 305, 258,
	501, 354, 214, 252, 253, 502, 505, 355, 356, 274,
	357, 358, 359, 360, 361, 259, 419, 286, 303, 333,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 393,
	394, 395, 396, 397, 398, 399, 400, 401, 212, -66,
	212, -140, -231, 212, -203, 335, -222, 337, 350, 345,
	355, 343, -214, 346, 348, 250, -314, 363, 212, 352,
	201, 155, 338, 347, 356, 357, 274, 358, 361, 259,
	-310, -299, 525, 540, 114, 307, 342, 340, 364, 507,
	360, 359, -231, 281, -238, 286, -226, -299, -225, 284,
	-140, -72, 503, 205, -240, -240, -88, 507, 509, -156,
	-102, 122, -112, -115, -107, -108, -150, -151, -152, -153,
	-113, -163, 144, 145, 152, 123, -161, -116, 23, 412,
	405, 404, 155, 28, 197, 65, 66, 407, 408, 125,
	54, 380, 381, -114, 376, 382, 377, 410, 411, 100,
	-226, -231, 217, 375, 211, 150, 403, -109, -105, -7,
	-159, 374, 378, 379, 383, -299, -225, -111, -110, -146,
	88, 93, 98, 94, -319, 101, -322, 89, 90, 91,
	92, 102, 103, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 41, 351, 351, -140, -66, -171,
	-86, -173, -9, -7, -322, 6, -66, -7, -8, -12,
	-29, -31, 443, -30, -231, -178, -193, 9, 140, 39,
	47, -176, -177, -11, -7, -102, 16, 20, 21, -92,
	146, -102, -231, -67, -212, 216, -66, -66, -202, -243,
	281, -206, 364, 363, -227, -204, -226, -224, -203, 362,
	206, 422, 121, 22, 24, 124, 155, 16, 125, 34,
	208, 307, 223, 154, 219, 404, 201, 69, 423, 376,
	377, 374, 380, 406, 407, 375, 337, 28, 10, 425,
	25, 233, 21, 35, 148, 203, 128, 236, 23, 234,
	100, 103, 428, 19, 72, 228, 11, 221, 37, 13,
	429, 430, 14, 217, 216, 140, 213, 67, 8, 197,
	26, 137, 63, 431, 116, 432, 433, 434, 435, 65,
	138, 17, 544, 378, 379, 30, 508, 412, 245, 150,
	70, 56, 509, 122, 437, 438, 101, 439, 104, 73,
	514, 118, 15, 68, 39, 440, 246, 441, 218, 545,
	442, 367, 443, 139, 204, 403, 66, 444, 211, 350,
	6, 409, 29, 232, 220, 111, 64, 445, 212, 127,
	410, 411, 215, 102, 5, 115, 31, 9, 71, 74,
	381, 382, 383, 54, 110, 416, 126, 12, 446, 368,
	120, 114, -275, 138, -262, -266, -226, 227, -291, 223,
	-140, -284, -283, -226, -87, -221, 213, 221, 220, 115,
	-303, 118, 267, 375, 211, -46, -47, -203, 154, 244,
	83, 83, -266, -265, -264, -304, 246, 227, -290, -282,
	219, 228, -272, 220, 221, -267, 213, 116, -304, -267,
	218, 228, 246, 246, 109, 246, 109, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 243, -273, 130, -273,
	420, 420, -278, -304, -304, -304, 215, 32, 32, -223,
	-267, 215, 22, -273, -273, -203, 154, -273, -273, -273,
	-273, 254, 254, -273, -273, -273, -273, -273, -273, -273,
	-273, -273, -273, -273, -273, -273, -273, -273, 212, -303,
	-96, 361, 274, 77, -48, 256, -32, -140, -221, 213,
	214, -303, -140, 198, -140, -216, 138, 12, -216, -213,
	351, 349, 336, 341, -216, -216, -216, -216, 257, 334,
	-268, 213, 32, 224, 351, 257, 334, 257, 258, 257,
	258, 344, 354, 257, -236, 11, 140, 375, 339, 343,
	250, 212, 251, 214, 353, -299, 510, 258, -236, 89,
	-217, 138, 351, 253, -216, -241, -322, -227, 307, -241,
	-241, 29, 215, -226, -68, -226, 89, -14, -10, -17,
	-16, -18, 130, -94, 351, -82, 155, 525, 511, 512,
	513, 510, 348, 518, 516, 514, 257, 515, 83, 118,
	120, 121, -102, 137, -147, 130, 131, 132, 133, 134,
	135, 136, 140, 122, 124, 138, 139, 119, 141, 142,
	143, 144, 145, 146, 147, 149, 148, 150, 151, 154,
	199, 200, -108, -108, -108, -108, -161, -322, -322, -322,
	-108, -211, -322, -108, -322, -322, -322, -322, -167, -102,
	-322, -326, -322, -326, -326, -253, -322, -253, -322, -322,
	-322, -322, 198, -322, -322, -322, -322, -322, -253, -253,
	-253, -253, 98, 93, 88, -163, 94, 89, -226, -231,
	-7, -8, -156, -240, -311, -312, -143, -140, -322, 274,
	-176, -11, -7, -171, -177, -173, -7, -66, -80, -93,
	60, 61, -95, 21, 35, 64, 62, 20, -323, 84,
	-323, -193, -323, 83, -31, -196, 82, 58, 40, 89,
	89, 83, 18, -172, -174, -102, 11, -229, -228, 22,
	-226, 89, 198, 96, -141, 26, -140, -212, -212, 83,
	281, -206, -243, -208, -207, 365, 367, 130, -230, -226,
	89, 28, 84, 83, -140, -245, -248, -250, -249, -251,
	-246, -247, 304, 305, 155, 308, 310, 311, 312, 313,
	314, 315, 316, 317, 318, 319, 29, 235, 300, 301,
	302, 303, 320, 321, 322, 323, 324, 325, 326, 327,
	287, 306, 414, 288, 289, 290, 291, 292, 293, 295,
	296, 297, 298, 299, -302, -299, 82, 84, 83, -252,
	82, -96, 212, -299, 213, 213, 213, -66, 403, -273,
	-273, 243, -39, -36, -295, 15, -35, -36, 206, 105,
	106, 203, 82, -262, 82, -271, -302, -299, 82, 116,
	218, 115, -270, -267, -270, -271, -299, -163, -299, 116,
	116, -199, -226, -199, -199, 20, -199, 20, -199, 20,
	91, -226, -199, 20, -199, 20, -199, 20, -199, 20,
	-199, 20, 28, 75, 76, 28, 78, 79, 80, -163,
	-163, -262, -203, -140, -299, 91, 91, -273, -273, 91,
	89, 89, 89, -273, -273, 91, 89, -233, -231, 89,
	-305, 229, 271, 273, 91, 91, 91, 91, 28, 89,
	-306, 28, 532, 531, 533, 534, 535, 91, 28, 91,
	28, 91, -226, 82, -140, -99, 261, 201, 203, 206,
	73, 89, 275, 130, 41, 83, 215, 212, -299, -218,
	217, -218, -232, -231, -224, 89, -102, -269, 11, 140,
	-236, -236, -216, -140, -269, -236, -216, -140, -216, -216,
	-216, -216, -236, -236, -236, -216, -231, -231, -140, -140,
	-140, -140, -140, -140, -140, -241, -241, -241, -217, -216,
	510, 89, 73, -239, 284, 318, 504, 505, 506, 83,
	416, -133, -140, 510, 510, 510, 510, 510, 510, -102,
	-102, -102, -102, -154, 101, 122, 102, 103, -115, -155,
	-159, -161, 95, 140, 124, 138, 139, -107, -108, -107,
	-107, -107, -107, -107, -107, -107, -107, -107, -107, -107,
	-107, -107, -242, -299, 89, 155, 89, 89, -90, -92,
	-102, -102, -299, -226, -90, -90, -102, -85, 21, 35,
	-165, -166, 126, -163, -323, -323, 91, -226, -226, -79,
	-78, 385, 386, 387, 388, 390, 391, 392, 395, 396,
	400, 401, 384, 402, 389, 394, 397, 398, 399, 393,
	303, -91, 21, 35, -90, -227, -232, -224, -90, -91,
	-91, -90, -90, 198, -193, -323, 83, -313, 367, 368,
	508, -234, 246, -233, 22, -157, -156, 89, -176, -176,
	60, 61, 56, -90, -95, -323, -30, 22, -195, -226,
	59, 89, -254, -203, -102, -102, 83, -175, 24, 25,
	-140, -228, 146, -232, -198, 246, -140, -118, -120, -121,
	-122, -143, -162, -322, -123, 431, 11, -133, -134, -142,
	-231, -206, -208, 83, 366, 368, 369, 73, 104, -102,
	-255, 154, -280, -279, -278, -262, -264, -265, -266, 84,
	-179, -101, 37, -258, 332, 331, -252, -252, -252, -252,
	-252, -254, -254, -254, -254, 82, 82, -252, -252, -252,
	-252, -256, 82, -256, -256, -257, 82, -257, -291, -102,
	-288, -287, -285, -286, 222, 97, 416, 74, -283, -175,
	91, -99, -219, 217, -289, -286, -299, -299, -299, -219,
	-299, 89, -299, 89, 83, 16, -263, -262, -51, 271,
	-294, 246, -290, -284, -271, 116, -270, -271, -271, -299,
	83, 26, 109, 109, 109, 109, 416, 203, 29, -262,
	-51, -242, 215, -242, -242, 89, 89, -215, 540, -133,
	-98, 263, 130, 252, 252, 212, 212, 265, -140, 276,
	278, 277, 275, 20, 264, 266, 268, 254, -140, -140,
	-218, 73, -135, -140, 23, -231, -140, -216, -216, -140,
	-216, -216, -140, -226, -82, 367, 83, 416, 19, -83,
	19, 101, 102, 103, -155, -107, -108, -107, 121, 236,
	83, -323, 22, 83, 74, -323, -323, -323, 83, 11,
	-90, -168, -166, 128, -102, -323, -323, 83, 83, 11,
	-323, -90, -90, -322, 198, -323, -323, -323, -323, -323,
	-227, -312, 507, 368, -144, 71, 216, 72, -322, -233,
	-323, -149, -226, 91, 94, -178, -117, -119, 11, -95,
	-161, 84, 83, -254, -182, -187, -213, -299, 89, 155,
	-174, 198, -148, 29, 54, -10, -322, -322, 29, 83,
	-136, -138, -137, -139, 63, 67, 69, 64, 65, 66,
	70, -237, 22, -118, -8, -7, -322, 82, -140, -133,
	-324, 11, 74, -324, 83, 198, -207, -209, 370, 367,
	373, -299, 89, -75, 246, 83, -278, -266, -318, 101,
	122, 28, 73, 329, 97, -316, 154, -317, 218, 115,
	116, 230, 22, 38, -259, 333, -254, -254, -261, 89,
	-261, 91, 91, 84, -42, -37, -38, 30, 77, -285,
	-273, 89, 36, -226, 84, -98, -140, 122, 73, -289,
	-289, -289, -231, 15, -195, 83, 84, -164, 272, 84,
	-226, 84, 82, -271, -271, -226, -322, 212, 28, 28,
	-51, -164, -255, -299, 542, 541, 84, 214, 270, -100,
	380, 89, 85, -140, -140, -140, -140, -140, 206, 203,
	255, 215, -133, -140, 83, -71, 231, 226, -236, -236,
	30, -140, 367, 519, 517, 121, 236, -115, -108, -92,
	413, -244, 155, 304, 235, 302, 298, 318, 309, 331,
	300, 332, -244, -242, -102, -102, -171, 129, -102, 127,
	-102, -102, -102, -323, -323, -91, -227, 213, 213, 213,
	-199, -210, 19, 11, 54, 54, -117, -145, 12, -118,
	-95, -226, -185, 503, -190, 43, -188, -189, 44, -186,
	45, 53, 146, -200, 73, -201, -205, -163, -158, -160,
	-159, -322, -194, -323, -226, -199, -201, -120, -121, -121,
	-120, -121, 63, 63, 63, 68, 63, 68, 63, -137,
	-231, -323, -323, -8, -102, -234, 74, -118, -118, -142,
	-231, 146, 367, 371, 372, 16, -278, 101, -322, -106,
	-114, -104, -103, -105, -109, 144, 145, 9, 89, 89,
	-299, 116, 116, -140, 82, 84, 83, 84, 83, 84,
	83, -220, 453, 122, -38, -37, -273, -273, 91, -299,
	214, 23, -140, 73, 73, 73, 16, -262, -163, 54,
	-288, -195, -292, -294, -140, -104, -322, -164, -140, -97,
	261, 269, 82, 86, -301, 74, 252, 329, 252, -140,
	-71, -42, -140, -216, -216, 30, -299, -115, -108, -322,
	-323, -252, -252, -252, -257, -252, 292, -252, 292, -323,
	-323, 83, -323, 19, -323, -81, 409, -102, 83, 83,
	-323, -323, -322, -322, -322, -323, -140, -145, -169, 13,
	-102, -182, 48, 310, -192, -191, 52, 44, -189, 16,
	46, 16, 27, -200, 83, 130, 83, -323, -323, 83,
	54, 198, -323, -145, -131, -130, 73, 74, -132, 73,
	-130, 63, 63, -196, -323, 83, -198, -118, -145, -145,
	198, -1, -2, 544, 545, 546, -102, -110, -110, -151,
	82, -102, -254, 89, -254, 91, 91, 453, 28, 78,
	79, 80, 28, 75, 76, -140, -140, -140, -140, -195,
	248, 84, -323, 83, -260, 416, 419, -102, -196, 84,
	-298, 416, -300, -226, -226, -226, -226, -107, -254, -299,
	-102, -102, -176, 89, -102, -102, -197, -323, -226, 218,
	-197, -197, -234, -169, -170, 14, 16, -183, 50, -181,
	49, -181, -191, 16, 16, 89, 16, 89, 116, -205,
	-102, -160, 54, -10, -226, -158, -226, -171, -102, 82,
	-102, -111, -319, -145, -145, 549, 116, -76, 82, 336,
	-323, -195, 84, 84, 84, -196, 249, -317, -294, 420,
	420, -323, 22, -297, -296, -227, 82, 74, -84, 140,
	416, -323, -323, -323, -323, -323, 83, -323, -323, -323,
	-144, -170, -102, -156, -184, 51, 73, 104, 89, 89,
	89, 9, -158, 198, -176, -195, -125, 336, -171, 82,
	-5, 77, -3, 543, -102, 82, 84, -180, 22, -322,
	-10, 83, 130, -195, -140, -323, 414, 70, 417, -226,
	218, 73, 104, -201, -226, 84, 84, 82, -176, -102,
	82, 130, -77, 547, 91, 84, -195, -308, -309, 73,
	-318, -315, 101, 122, 97, -316, 110, 111, -10, -102,
	245, -69, 416, -296, -277, -227, 89, 91, 84, 59,
	415, 418, -234, -126, -124, -226, 467, 84, -195, 91,
	-293, 82, 16, 84, -309, 73, 10, 9, 101, 89,
	-69, -323, -323, -70, 260, 507, -301, 59, 84, 83,
	19, -245, 477, -3, 84, -292, -1, -307, 231, 226,
	229, 29, -307, 223, -298, 416, -124, 474, -255, -111,
	-77, -3, 84, 549, 116, 225, 28, 101, 262, 417,
	-89, 23, -125, -293, -77, 82, -5, 418, 477, -293,
	-102, 82, -111, 84, -195, -128, -127, -129, 511, 101,
	28, -4, 548, 84, -127, -129, 73, -103, 91, -4,
	73, 426, 511,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 64, 66, 67, 714, 714, 0, 714, 0,
	0, 714, -2, -2, 714, 1122, 0, 714, 0, 0,
	-2, 647, 648, 0, 650, -2, 0, 0, 659, 1569,
	1569, 709, 0, 0, 0, 0, 0, 714, 986, 44,
	714, 0, 78, 79, 665, 666, 667, 59, 0, 1567,
	1, 3, 65, 69, 0, 0, 0, 52, 995, 0,
	72, 0, 0, 718, 0, 716, 1105, 714, 714, 0,
	126, 127, 0, 0, 0, -2, 130, -2, 154, 155,
	0, 159, 499, 459, 502, 457, 488, -2, 450, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 462, 352, 352, 0, 0, -2, 450, 450, 450,
	0, 0, 0, 485, 1107, 405, 352, 352, 0, 352,
	352, 352, 352, 0, 0, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	1012, 158, 1123, 1120, 1121, 34, 35, 36, 1267, 1268,
	1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278,
	1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288,
	1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298,
	1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308,
	1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318,
	1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328,
	1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338,
	1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348,
	1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358,
	1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368,
	1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378,
	1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388,
	1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398,
	1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408,
	1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418,
	1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428,
	1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438,
	1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448,
	1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458,
	1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468,
	1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478,
	1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488,
	1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508,
	1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518,
	1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528,
	1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538,
	1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548,
	1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 0, 1099,
	0, 577, 805, 0, 638, 638, 0, 638, 638, 638,
	638, 0, 0, 0, 589, 0, 0, 0, 0, 635,
	0, 0, 608, 610, 0, 635, 0, 641, 0, 622,
	638, 1570, 1570, 1570, 1090, 0, 632, 630, 644, 645,
	627, 628, 646, 649, 0, 654, 657, 1116, 1117, 0,
	672, 43, 1347, 664, 677, 678, 0, 710, 711, 39,
	891, 0, 820, 824, 835, 848, 849, 850, 851, 852,
	854, 855, 0, 0, 0, 0, 860, 861, 0, 0,
	0, 0, 0, 872, 0, 0, 0, 0, 0, 967,
	0, 936, 936, 908, 936, 938, 938, 0, 0, 0,
	976, 0, 0, 0, 0, 0, 0, 263, 264, 890,
	1079, 938, 938, 938, 938, -2, -2, 210, 211, 212,
	213, 214, 215, 216, 0, 206, 0, 267, 268, 265,
	266, 874, 875, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 1569, 0, 687, 0, 0, 995,
	0, 987, 986, 57, 0, 714, -2, 0, 0, 0,
	0, 41, 0, 46, 766, 71, 70, 1031, 0, 0,
	0, 53, 996, 61, 63, 997, 0, 719, 720, 0,
	743, 747, 0, 715, 0, 1106, 1105, 1105, 112, 0,
	1512, 1083, -2, -2, 0, 0, 1118, 1119, 1092, -2,
	1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135,
	1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145,
	1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155,
	1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165,
	1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175,
	1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185,
	1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195,
	1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205,
	1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215,
	1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225,
	1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235,
	1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245,
	1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255,
	1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265,
	1266, -2, 0, 0, 168, 169, 0, 37, 378, 0,
	164, 0, 372, 324, 1012, 0, 0, 0, 0, 0,
	714, 0, 1100, 149, 150, 156, 157, 352, 352, 0,
	158, 158, 466, 467, 468, 0, 0, -2, 376, 0,
	451, 0, 0, 366, 366, 370, 368, 369, 0, 0,
	0, 0, 0, 0, 479, 0, 480, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 561, 0, 353, 0,
	497, 498, 406, 0, 0, 0, 0, 477, 478, 0,
	0, 1108, 1109, 0, 0, 352, 352, 0, 0, 0,
	0, 352, 352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 148,
	1025, 0, 0, 0, -2, 0, 569, 0, 0, 0,
	1101, 1101, 576, 0, 578, 579, 0, 0, 580, 0,
	635, 635, 633, 634, 582, 583, 584, 585, 638, 0,
	0, 361, 362, 363, 635, 638, 0, 638, 638, 638,
	638, 635, 635, 635, 638, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1570, 1570, 1570, 641, 638, 0,
	618, 0, 619, 620, 623, 624, 1571, 1572, 1137, 625,
	626, 1091, 655, 658, 675, 673, 674, 676, 668, 669,
	670, 671, 0, 689, 690, 695, 0, 0, 0, 0,
	701, 702, 703, 0, 0, 706, 707, 708, 0, 0,
	0, 0, 818, 0, 0, 880, 881, 882, 883, 884,
	885, 886, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 856, 857, 858, 859, 862, 0, 0, 0,
	867, 868, 0, 0, 0, 0, 0, 724, 0, 968,
	0, 906, 0, 907, 909, 910, 0, 911, 0, 0,
	0, 727, 0, 0, 727, 727, 0, 0, 200, 201,
	202, 203, 217, 218, 219, 220, 221, 269, 976, 0,
	890, 0, 0, 40, 679, 680, 0, 788, 1111, 0,
	51, 60, 62, 995, 55, 995, 0, 729, 0, 0,
	-2, -2, 730, 736, 737, 738, 739, 740, 48, 1568,
	49, 0, 68, 0, 42, 0, 0, 0, 0, 336,
	1034, 0, 0, 988, 989, 992, 0, 744, 748, 0,
	750, 751, 0, 717, 110, 0, 804, 0, 0, 0,
	1512, 1089, 0, 114, 115, 0, 0, 0, 340, 1094,
	1095, 1096, -2, 359, 0, -2, 331, 275, 276, 277,
	324, 279, 324, 324, 324, 324, 336, 336, 336, 336,
	307, 308, 309, 310, 311, 0, 0, 294, 324, 324,
	324, 324, 314, 315, 316, 317, 318, 319, 320, 321,
	280, 281, 282, 283, 284, 285, 286, 287, 288, 326,
	326, 326, 328, 328, 0, 38, 0, 344, 0, 992,
	0, 1025, 1103, 1113, 0, 0, 0, 1103, 132, 0,
	0, 500, 460, 489, 501, 0, 463, 464, -2, 0,
	0, 450, 0, 452, 0, 360, 0, -2, 0, 370,
	0, 366, 370, 367, 370, 358, 371, 481, 482, 483,
	0, 541, 774, 0, 0, 0, 0, 0, 547, 548,
	549, 0, 551, 552, 553, 554, 555, 556, 557, 558,
	559, 560, 490, 491, 492, 493, 494, 495, 496, 0,
	0, 452, 0, 486, 0, 407, 408, 0, 0, 411,
	412, 413, 414, 0, 0, 417, 418, 419, 791, 792,
	420, 444, 445, 446, 421, 422, 423, 424, 425, 426,
	427, 438, 439, 440, 441, 442, 443, 428, 429, 430,
	431, 432, 435, 0, 142, 1016, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1101, 0, 0,
	0, 0, 806, 1124, 1125, 639, 640, 0, 364, 365,
	638, 638, 586, 609, 0, 638, 590, 611, 591, 593,
	592, 594, 613, 614, 638, 597, 636, 637, 598, 599,
	600, 601, 602, 603, 604, 605, 606, 607, 615, 616,
	617, 642, 0, 0, 656, 660, 661, 662, 663, 0,
	0, 692, 89, 697, 698, 699, 700, 712, 705, 892,
	815, 816, 817, 819, 821, 0, 876, 878, 823, 825,
	887, 888, 889, 0, 0, 0, 0, 0, 829, 833,
	836, 837, 838, 839, 840, 841, 842, 843, 844, 845,
	846, 847, 853, 951, 952, 953, 870, 871, 0, 741,
	0, 0, 0, 869, 0, 0, 0, 0, 725, 726,
	974, 971, 0, 0, 937, 939, 0, 0, 0, 0,
	915, 916, 917, 918, 919, 920, 921, 922, 923, 924,
	925, 926, 927, 928, 929, 930, 931, 932, 933, 934,
	935, 0, 0, 0, 728, 977, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 1078, 0, 682, 683, 685,
	0, 808, 0, 789, 0, 0, 1112, 688, 54, 56,
	734, 735, 0, 752, 731, 50, 45, 0, 0, 768,
	1032, 336, 1054, 0, 998, 999, 0, 991, 993, 994,
	73, 749, 745, 0, 0, 0, 803, 0, 755, 757,
	758, 759, 786, 0, 762, 0, 0, 0, 0, 108,
	805, 1084, 113, 0, 0, 118, 119, 1085, 1086, 1087,
	1088, 0, 519, -2, 402, 170, 172, 173, 174, 165,
	384, 0, 0, 334, 332, 333, 278, 336, 336, 301,
	302, 303, 304, 305, 306, 0, 0, 295, 296, 297,
	298, 289, 0, 290, 291, 292, 0, 293, 377, 0,
	1000, 345, 346, 348, 352, 0, 0, 0, 373, 374,
	0, 1016, 0, 0, 0, 1114, 1113, 1113, 1113, 0,
	160, 161, 162, 163, 158, 0, 0, 166, 454, 453,
	0, 0, 375, 0, 0, 370, 370, 355, 356, 484,
	0, 0, 543, 544, 545, 546, 0, 0, 0, 452,
	454, 340, 0, 409, 410, 415, 416, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 514,
	515, 516, 517, 518, 1013, 1014, 1015, 0, 0, 570,
	0, 0, 394, 87, 1102, 575, 635, 596, 612, 635,
	588, 595, 621, 652, 696, 0, 0, 0, 0, 704,
	0, 822, 877, 879, 826, 0, 830, 834, 0, 0,
	0, 0, 0, 0, 0, 873, 897, 898, 0, 0,
	986, 0, 972, 0, 0, 905, 940, 0, 0, 0,
	893, 0, 0, 727, 0, 941, 942, 943, 944, 945,
	977, 681, 684, 686, 764, 0, 0, 0, 0, 790,
	1110, 0, 979, 0, 0, 752, 813, 753, 0, 732,
	47, 767, 0, 1036, 1035, 1048, 1061, 337, 338, 339,
	990, 0, 1072, 0, 0, 1064, 0, 0, 0, 0,
	0, 0, 0, 0, 793, 0, 0, 796, 0, 0,
	0, 0, 787, 0, 0, 0, 0, 0, -2, 0,
	0, 85, 86, 0, 0, 0, 116, 117, 0, 0,
	123, 341, 342, 151, 0, 158, 404, 171, 175, 180,
	0, 0, 0, 185, 0, 187, 0, 385, 0, 271,
	273, 0, 0, 178, 274, 335, 299, 300, 0, 322,
	0, 0, 0, 397, 128, 1004, 1003, 352, 352, 347,
	0, 350, 0, 1115, 325, 0, 141, 0, 0, 0,
	0, 0, 147, 0, 458, 0, 469, 470, 0, 540,
	0, 344, 0, 354, 357, 775, 0, 0, 471, 0,
	454, 475, 476, 487, 436, 437, 434, 0, 0, 1026,
	1027, 0, 1030, 133, 507, 509, 508, 512, 0, 0,
	505, 0, 394, 1000, 0, 574, 395, 396, 638, 638,
	691, 90, 0, 694, 0, 0, 0, 827, 831, 742,
	0, 0, 324, 324, 957, 324, 328, 960, 324, 962,
	324, 965, 0, 0, 0, 0, 969, 904, 975, 0,
	0, 0, 0, 894, 895, 0, 978, 0, 0, 0,
	0, 0, 1097, 1098, 980, 981, 813, 982, 0, 754,
	733, 769, 1054, 0, 1047, 0, -2, 1056, 0, 0,
	0, 1062, 746, 76, 0, 1072, 1080, 0, 1063, 1074,
	1076, 0, 0, 0, 1068, 0, 813, 756, 782, 784,
	0, 779, 794, 795, 797, 0, 799, 0, 801, 802,
	766, 761, 763, 0, 0, 110, 0, 813, 813, 109,
	0, 807, 120, 121, 122, 528, 403, 181, 0, 183,
	198, 199, 204, 205, 207, 0, 0, 0, 186, 188,
	189, 270, 272, 0, 0, 336, 0, 336, 0, 329,
	0, 386, 398, 0, 1001, 1002, 0, 0, 349, 351,
	0, 1104, 143, 0, 0, 0, 0, 167, 455, 0,
	343, 0, 0, 565, 562, 472, 0, 474, 766, 1017,
	1018, 1019, 0, 1029, 136, 0, 0, 0, 0, 571,
	572, 573, 88, 581, 587, 693, 713, 828, 832, 0,
	864, 954, 336, 958, 959, 961, 963, 964, 966, 865,
	866, 0, 900, 0, 902, 995, 0, 973, 0, 0,
	914, 896, 0, 0, 0, 788, 58, 982, 984, 0,
	814, 1041, 1039, 1039, 1049, 1050, 0, 0, 1057, 0,
	0, 0, 0, 77, 0, 0, 0, 1077, 0, 0,
	0, 0, 111, 986, 776, 783, 0, 0, 777, 0,
	778, 798, 800, 760, -2, 0, 813, 813, 83, 84,
	0, 0, 0, 529, 532, 533, 0, 208, 209, 184,
	0, 0, 312, 323, 313, 0, 0, 399, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 766, 144, 145, 146, 461,
	0, 0, 542, 0, 550, 0, 0, 0, 0, 1028,
	506, 0, 134, 135, 0, 0, 511, 946, 955, 956,
	0, 0, 0, 970, 0, 0, 0, 810, 770, 771,
	0, 0, 808, 984, 75, 0, 0, 1044, 0, 1037,
	1040, 1038, 1051, 0, 0, 1058, 0, 1060, 0, 1081,
	1082, 1075, 0, 1067, 1070, 1066, 1069, 995, 780, 0,
	785, 0, 0, 986, 82, 0, 530, 536, 0, 0,
	182, 0, 192, 327, 330, 0, 0, 379, 566, 563,
	564, 473, 0, 137, 138, 0, 0, 0, 0, 0,
	0, 899, 901, 903, 912, 913, 0, 809, 811, 812,
	765, 74, 985, 983, 1033, 0, 1042, 1043, 1052, 1053,
	1059, 0, 1065, 0, 80, 0, 0, 0, 995, 0,
	0, 0, 523, 0, 0, 0, 380, 384, 0, 0,
	1020, 0, 0, 0, 513, 863, 0, 0, 0, 772,
	773, 1045, 1046, 1073, 1071, 781, 788, 0, 81, 0,
	0, 0, 526, 0, 537, 534, 0, 381, 382, 0,
	176, 193, 194, 0, 0, 197, 190, 191, 1020, 0,
	0, 503, 1022, 139, 140, 447, 448, 449, 133, 947,
	0, 950, 91, 0, 93, 0, 1411, 536, 0, 531,
	522, 0, 528, 535, 383, 0, 0, 0, 195, 196,
	129, 567, 568, 0, 1023, 1024, 136, 948, 92, 0,
	0, 340, 0, 523, 536, 0, 0, 387, 389, 390,
	0, 0, 388, 0, 510, 0, 94, 95, 101, 0,
	526, 523, 527, 0, 530, 391, 392, 393, 1021, 0,
	0, 102, 100, 520, 526, 0, 0, 949, 0, 521,
	0, 0, 96, 538, 0, 97, 98, 0, 105, 106,
	0, 524, 0, 538, 99, 0, 0, 107, 539, 525,
	0, 103, 104,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 123, 3, 3, 3, 149, 141, 3,
	82, 84, 146, 144, 83, 145, 198, 147, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 550,
	131, 130, 132, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 151, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 119, 3, 152,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 120, 121, 122, 124, 125, 126,
	127, 128, 129, 133, 134, 135, 136, 137, 138, 139,
	140, 142, 143, 148, 150, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:469
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:474
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:475
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:479
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:511
		{
			setParseTree(yylex, nil)
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:517
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:521
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:525
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:530
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:534
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 39:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:540
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:546
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:552
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:556
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:561
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:565
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:571
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:575
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:581
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:587
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:591
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:595
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:618
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:624
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:629
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:635
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:642
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:648
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:655
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:659
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:665
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:669
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:673
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:677
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:681
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:687
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:691
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:696
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:700
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:706
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:710
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:715
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:721
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:727
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:734
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:742
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:746
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:754
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:766
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:778
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:782
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:788
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:794
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:798
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:802
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:806
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:811
		{
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:812
		{
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:816
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:820
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:826
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:830
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:836
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:842
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:848
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:852
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:858
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:862
		{
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, Collate: yyDollar[3].str, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:867
		{
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, Collate: yyDollar[3].str, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:872
		{
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, Collate: yyDollar[3].str, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:877
		{
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, Collate: yyDollar[3].str, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:882
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:889
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:893
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:899
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:905
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:911
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:915
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:919
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:925
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:929
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:934
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:938
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:944
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:950
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:954
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:960
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:964
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:970
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:974
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:978
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:984
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:988
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:992
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:996
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1002
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1006
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1012
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1018
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1025
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1034
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].str, Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1038
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1045
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1049
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1054
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1058
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1064
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1069
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1074
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1080
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1085
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1091
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 141:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1097
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1104
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1111
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1116
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1121
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1126
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1133
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1140
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1151
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1158
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1162
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1168
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1172
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1176
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1180
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 158:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1186
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1190
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1196
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1200
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1206
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 163:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1210
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1217
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1221
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1227
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1231
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1237
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1242
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1247
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1251
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1256
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1260
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1264
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1270
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[4].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1276
		{
			yyDollar[2].columnType.Options = yyDollar[8].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[6].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[9].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1284
		{
			yyVAL.str = ""
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1288
		{
			yyVAL.str = ""
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1297
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1301
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1307
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1313
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1318
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1323
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1328
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1333
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1338
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1343
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1347
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1354
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1358
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1363
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1367
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1372
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1378
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1384
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1389
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1396
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1403
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1407
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1411
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1415
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1426
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1433
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1437
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1443
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1447
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1451
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1455
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1459
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1463
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1467
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1472
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1476
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1480
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1484
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1488
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1495
		{
			yyVAL.str = Armscii8Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1499
		{
			yyVAL.str = ASCIIStr
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1503
		{
			yyVAL.str = Big5Str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1507
		{
			yyVAL.str = UBinaryStr
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1511
		{
			yyVAL.str = Cp1250Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1515
		{
			yyVAL.str = Cp1251Str
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1519
		{
			yyVAL.str = Cp1256Str
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1523
		{
			yyVAL.str = Cp1257Str
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1527
		{
			yyVAL.str = Cp850Str
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1531
		{
			yyVAL.str = Cp852Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1535
		{
			yyVAL.str = Cp866Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1539
		{
			yyVAL.str = Cp932Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1543
		{
			yyVAL.str = Dec8Str
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1547
		{
			yyVAL.str = EucjpmsStr
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1551
		{
			yyVAL.str = EuckrStr
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1555
		{
			yyVAL.str = Gb18030Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1559
		{
			yyVAL.str = Gb2312Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1563
		{
			yyVAL.str = GbkStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1567
		{
			yyVAL.str = Geostd8Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1571
		{
			yyVAL.str = GreekStr
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1575
		{
			yyVAL.str = HebrewStr
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1579
		{
			yyVAL.str = Hp8Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1583
		{
			yyVAL.str = Keybcs2Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1587
		{
			yyVAL.str = Koi8rStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1591
		{
			yyVAL.str = Koi8uStr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1595
		{
			yyVAL.str = Latin1Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1599
		{
			yyVAL.str = Latin2Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1603
		{
			yyVAL.str = Latin5Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1607
		{
			yyVAL.str = Latin7Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1611
		{
			yyVAL.str = MacceStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1615
		{
			yyVAL.str = MacromanStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1619
		{
			yyVAL.str = SjisStr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1623
		{
			yyVAL.str = Swe7Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1627
		{
			yyVAL.str = Tis620Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1631
		{
			yyVAL.str = Ucs2Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1635
		{
			yyVAL.str = UjisStr
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1639
		{
			yyVAL.str = Utf16Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1643
		{
			yyVAL.str = Utf16leStr
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1647
		{
			yyVAL.str = Utf32Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1651
		{
			yyVAL.str = Utf8Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1655
		{
			yyVAL.str = Utf8mb4Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1665
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1669
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1676
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1680
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1684
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1690
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1694
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1698
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1702
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1708
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1719
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1724
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1730
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1734
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1738
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1742
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1746
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1750
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1754
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1758
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1762
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1768
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1774
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1780
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1786
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1792
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1800
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1804
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1808
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1812
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1816
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1822
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1826
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1830
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1834
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1838
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1842
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1846
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1850
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1854
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1858
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1862
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1866
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1870
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1874
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 313:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1879
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1885
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1889
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1893
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1897
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1901
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1905
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1909
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1913
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1919
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1924
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1929
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1933
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1938
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1942
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1950
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1954
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1960
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1968
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1972
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1976
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1981
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1985
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1990
		{
			yyVAL.str = ""
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1994
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1998
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2002
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2007
		{
			yyVAL.str = ""
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2011
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2015
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2022
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2027
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2031
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2037
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2041
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2047
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2051
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2056
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2060
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2066
		{
			yyVAL.str = ""
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2070
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 354:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2076
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2080
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2084
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2088
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2092
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2097
		{
			yyVAL.str = ""
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2101
		{
			yyVAL.str = yyDollar[2].str
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2107
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2111
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2115
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2122
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2126
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2131
		{
			yyVAL.str = "key"
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2135
		{
			yyVAL.str = yyDollar[1].str
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2141
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2145
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2150
		{
			yyVAL.str = ""
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2154
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2160
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2164
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2170
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2176
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2180
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2186
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2190
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2196
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2202
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2206
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2210
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2214
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2219
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2223
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2229
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2235
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2241
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2247
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2251
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2255
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2259
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2263
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2268
		{
			yyVAL.str = ""
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2272
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2276
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2281
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2285
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2289
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2294
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2298
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2304
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2308
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2312
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2318
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2322
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2328
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2332
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2336
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2340
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2344
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2348
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2352
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2356
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2360
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2364
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2368
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2372
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2376
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2380
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2384
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2388
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2392
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2396
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2400
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2404
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2408
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2412
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2416
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2420
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2424
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2428
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2432
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2436
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2441
		{
			yyVAL.str = ""
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2445
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2449
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2468
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2472
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2476
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2481
		{
			yyVAL.str = ""
		}
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2487
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2491
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2496
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2500
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2505
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2509
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2513
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2517
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2521
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 461:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2525
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2531
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2535
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2539
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2545
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2549
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2553
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2557
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2561
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2565
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2569
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2573
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2577
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2581
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2585
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2589
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2593
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2597
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2601
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2605
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2609
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2613
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2617
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2621
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2625
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2629
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2633
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2639
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2643
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2649
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2653
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2657
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2661
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2665
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2669
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2673
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2677
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2681
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2687
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2693
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2700
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2707
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2713
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2717
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2724
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2731
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2743
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2753
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2757
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2761
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2774
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2784
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2788
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2799
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2806
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2813
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2820
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2827
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2834
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2839
		{
			yyLOCAL = &PartitionOption{
				Linear:       yyDollar[3].str,
				isHASH:       true,
				Expr:         yyDollar[6].exprUnion(),
				Partitions:   yyDollar[8].str,
				SubPartition: yyDollar[9].subPartitionUnion(),
				Definitions:  yyDollar[10].partDefsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2851
		{
			yyLOCAL = &PartitionOption{
				Linear:       yyDollar[3].str,
				isKEY:        true,
				KeyAlgorithm: yyDollar[5].str,
				KeyColList:   yyDollar[7].columnsUnion(),
				Partitions:   yyDollar[9].str,
				SubPartition: yyDollar[10].subPartitionUnion(),
				Definitions:  yyDollar[11].partDefsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2864
		{
			yyLOCAL = &PartitionOption{
				RangeOrList:  yyDollar[3].str,
				ExprOrCol:    yyDollar[4].exprOrColumnsUnion(),
				Partitions:   yyDollar[5].str,
				SubPartition: yyDollar[6].subPartitionUnion(),
				Definitions:  yyDollar[7].partDefsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2875
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2879
		{
			yyLOCAL = &SubPartition{
				Linear:        yyDollar[3].str,
				isHASH:        true,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2888
		{
			yyLOCAL = &SubPartition{
				Linear:        yyDollar[3].str,
				isKEY:         true,
				KeyAlgorithm:  yyDollar[5].str,
				KeyColList:    yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2899
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2903
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2908
		{
			yyVAL.str = ""
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2912
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2917
		{
			yyVAL.str = ""
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2921
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2927
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2931
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ExprOrColumns
//line sql.y:2937
		{
			yyLOCAL = &ExprOrColumns{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ExprOrColumns
//line sql.y:2941
		{
			yyLOCAL = &ExprOrColumns{ColumnList: yyDollar[3].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2946
		{
			yyVAL.str = ""
		}
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2950
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 538:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2955
		{
			yyVAL.str = ""
		}
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2959
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2965
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2969
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2973
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2977
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2981
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2985
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2989
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2993
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2997
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3001
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3005
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3009
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3013
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3017
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3021
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3025
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3029
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3033
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3037
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3041
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3045
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3049
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3054
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3058
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3062
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3069
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3073
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 567:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3079
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3083
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3089
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3095
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3099
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 572:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3105
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3109
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3118
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3122
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3128
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3132
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3137
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3143
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3147
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3151
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3155
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3159
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3163
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3167
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3171
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3175
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3179
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3183
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3187
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3191
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3195
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3199
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3203
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3207
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3211
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3215
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3219
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3223
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3227
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3231
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3235
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3239
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3243
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3247
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3251
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3255
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3259
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3263
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3267
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3271
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3275
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3279
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3283
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3287
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3292
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3296
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3300
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3305
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3309
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3313
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3317
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3322
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3336
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3340
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3344
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3350
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3354
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3360
		{
			yyVAL.str = ""
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3364
		{
			yyVAL.str = "extended "
		}
	case 631:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3370
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3374
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3380
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3384
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3390
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3394
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3398
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3404
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3408
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3412
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3418
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3422
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3428
		{
			yyVAL.empty = struct{}{}
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3432
		{
			yyVAL.empty = struct{}{}
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3436
		{
			yyVAL.empty = struct{}{}
		}
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3442
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3446
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3452
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3456
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3462
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3468
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3472
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3477
		{
			yyVAL.empty = struct{}{}
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3479
		{
			yyVAL.empty = struct{}{}
		}
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3482
		{
			yyVAL.empty = struct{}{}
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3484
		{
			yyVAL.empty = struct{}{}
		}
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3489
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3495
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3500
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3504
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3508
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3512
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3516
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3520
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3526
		{
			yyVAL.str = yyDollar[1].str
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3530
		{
			yyVAL.str = yyDollar[1].str
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3534
		{
			yyVAL.str = yyDollar[1].str
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3540
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3544
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3548
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3552
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3557
		{
			yyVAL.str = ""
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3561
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3565
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3571
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3575
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3581
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3585
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3591
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3597
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3601
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3607
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3613
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3617
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3621
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3625
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3631
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3637
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3643
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3647
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3651
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3655
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3659
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3663
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3669
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3673
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3679
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3683
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3687
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3691
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3695
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3699
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3703
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3707
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3711
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3715
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3719
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3723
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3728
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3732
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3736
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3741
		{
			yyVAL.str = ""
		}
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3745
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3750
		{
			setAllowComments(yylex, true)
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3754
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3760
		{
			yyVAL.strs = nil
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3764
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3770
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3774
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3778
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3783
		{
			yyVAL.str = ""
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3787
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3791
		{
			yyVAL.str = SQLCacheStr
		}
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3796
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3800
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3804
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3809
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3813
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3818
		{
			yyVAL.strs = nil
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3822
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3826
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3830
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3834
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3840
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3844
		{
			yyVAL.str = SQLCacheStr
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3848
		{
			yyVAL.str = DistinctStr
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3852
		{
			yyVAL.str = DistinctStr
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3856
		{
			yyVAL.str = StraightJoinHint
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3860
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3864
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3870
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3874
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3880
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3884
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3888
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3892
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3897
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3901
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3905
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3912
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3917
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3921
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3927
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3933
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3937
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3947
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3951
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3955
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3959
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3965
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3971
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3975
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3980
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3984
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3990
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3994
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4000
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4004
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4008
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4012
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4018
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4022
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4035
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4039
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4043
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4047
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4053
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4055
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4059
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4061
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4065
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4067
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4070
		{
			yyVAL.empty = struct{}{}
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4072
		{
			yyVAL.empty = struct{}{}
		}
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4075
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4079
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4083
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4090
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4096
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4100
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4104
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4110
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4116
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4120
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4124
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4128
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4134
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4138
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4148
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4152
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4158
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4162
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4168
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4173
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4177
		{
			yyLOCAL = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4181
		{
			yyLOCAL = &IndexHints{Type: UseOp}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4185
		{
			yyLOCAL = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4189
		{
			yyLOCAL = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4194
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4198
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4205
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4209
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4213
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4217
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4221
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4225
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4232
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4236
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4240
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4244
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4250
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4254
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4258
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4262
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4266
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4270
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4274
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4278
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4282
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4286
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4290
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4296
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4300
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4304
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4308
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4312
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4316
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4320
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4324
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4328
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4332
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4336
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4340
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4344
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4350
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4354
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4358
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4362
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4366
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4370
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4374
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4378
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4382
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4386
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4390
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4394
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4398
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4402
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4406
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4410
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4414
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4418
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4422
		{
			yyLOCAL = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4426
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4430
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4438
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4442
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4449
		{
			yyVAL.str = ""
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4453
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4459
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4463
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4470
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4474
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4478
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4482
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4488
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4492
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4496
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4500
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4504
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4508
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4512
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4518
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4522
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4526
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4533
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4539
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4543
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 893:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4553
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4557
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4561
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4565
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4575
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4579
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4583
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4587
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4591
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4595
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4599
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4603
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4607
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4611
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4622
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4626
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4632
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4636
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4641
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4645
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4649
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4653
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4659
		{
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4661
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4665
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4669
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4673
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4677
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4681
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4685
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4689
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4693
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4697
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4701
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4707
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4711
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4715
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4719
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4723
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4727
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4731
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4735
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4739
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4749
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4753
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4757
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4767
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4771
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4775
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4779
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4783
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4789
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4793
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4797
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4801
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4805
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4811
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4815
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4819
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4825
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4829
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4833
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: string(yyDollar[3].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4837
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4841
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4845
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4851
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4855
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4859
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4863
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4867
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4871
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4875
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4880
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4884
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4889
		{
			yyVAL.str = string("")
		}
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4893
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4899
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4903
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4909
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4914
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4918
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4924
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4928
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4932
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4938
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4947
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4951
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4957
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4961
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4966
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4970
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4975
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4979
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4985
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4991
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4995
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5001
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5006
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5010
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5014
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5019
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5023
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5029
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5033
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5037
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5042
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5046
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5050
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5054
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5058
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5065
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5069
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5073
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5077
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5083
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5087
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5091
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5096
		{
			yyVAL.str = ""
		}
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5100
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5104
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5108
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1016:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5113
		{
			yyVAL.str = ""
		}
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5117
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5123
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5127
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1020:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5132
		{
			yyVAL.str = ""
		}
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5136
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1022:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5141
		{
			yyVAL.str = "cascaded"
		}
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5145
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5149
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1025:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5154
		{
			yyVAL.str = ""
		}
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5158
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5164
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5168
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5172
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str) + "@" + string(yyDollar[2].str)
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5176
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5182
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5186
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5192
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5196
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5200
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5205
		{
			yyVAL.str = ""
		}
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5209
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5213
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1039:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5218
		{
			yyVAL.str = ""
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5222
		{
			yyVAL.str = " header"
		}
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5227
		{
			yyVAL.str = ""
		}
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5231
		{
			yyVAL.str = " manifest on"
		}
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5235
		{
			yyVAL.str = " manifest off"
		}
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5240
		{
			yyVAL.str = ""
		}
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5244
		{
			yyVAL.str = " overwrite on"
		}
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5248
		{
			yyVAL.str = " overwrite off"
		}
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5254
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5259
		{
			yyVAL.str = ""
		}
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5263
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5269
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5273
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5279
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5283
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1054:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5288
		{
			yyVAL.str = ""
		}
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5292
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5298
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5302
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5308
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1059:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5312
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5316
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1061:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5321
		{
			yyVAL.str = ""
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5325
		{
			yyVAL.str = " optionally"
		}
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5338
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5342
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5346
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5350
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5354
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5360
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5364
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5368
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1071:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5372
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1072:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5377
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5381
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5387
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5391
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5397
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5401
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5407
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5412
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5422
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5426
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5432
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5438
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5442
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5448
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5452
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5456
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5460
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5464
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5472
		{
			yyVAL.str = "charset"
		}
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5482
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5486
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5490
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5499
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5501
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5504
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5506
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5509
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5511
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5514
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5516
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5519
		{
			yyVAL.empty = struct{}{}
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5521
		{
			yyVAL.empty = struct{}{}
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5523
		{
			yyVAL.empty = struct{}{}
		}
	case 1110:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5527
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5532
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5536
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5541
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5543
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5547
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5553
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5557
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5564
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5570
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5574
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1122:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5580
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5584
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5591
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6057
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6066
		{
			decNesting(yylex)
		}
	case 1569:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6071
		{
			skipToEnd(yylex)
		}
	case 1570:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6076
		{
			skipToEnd(yylex)
		}
	case 1571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6080
		{
			skipToEnd(yylex)
		}
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6084
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
