// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const ALL = 57362
const DISTINCT = 57363
const AS = 57364
const EXISTS = 57365
const ASC = 57366
const DESC = 57367
const INTO = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const DO = 57375
const CALL = 57376
const DISTINCTROW = 57377
const PARSER = 57378
const GENERATED = 57379
const ALWAYS = 57380
const OUTFILE = 57381
const S3 = 57382
const DATA = 57383
const LOAD = 57384
const LINES = 57385
const TERMINATED = 57386
const ESCAPED = 57387
const ENCLOSED = 57388
const DUMPFILE = 57389
const CSV = 57390
const HEADER = 57391
const MANIFEST = 57392
const OVERWRITE = 57393
const STARTING = 57394
const OPTIONALLY = 57395
const VALUES = 57396
const LAST_INSERT_ID = 57397
const NEXT = 57398
const VALUE = 57399
const SHARE = 57400
const MODE = 57401
const SQL_NO_CACHE = 57402
const SQL_CACHE = 57403
const SQL_CALC_FOUND_ROWS = 57404
const JOIN = 57405
const STRAIGHT_JOIN = 57406
const LEFT = 57407
const RIGHT = 57408
const INNER = 57409
const OUTER = 57410
const CROSS = 57411
const NATURAL = 57412
const USE = 57413
const FORCE = 57414
const ON = 57415
const USING = 57416
const INPLACE = 57417
const COPY = 57418
const ALGORITHM = 57419
const NONE = 57420
const SHARED = 57421
const EXCLUSIVE = 57422
const SUBQUERY_AS_EXPR = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const HEX = 57427
const STRING = 57428
const NCHAR_STRING = 57429
const INTEGRAL = 57430
const FLOAT = 57431
const HEXNUM = 57432
const VALUE_ARG = 57433
const LIST_ARG = 57434
const COMMENT = 57435
const COMMENT_KEYWORD = 57436
const BIT_LITERAL = 57437
const COMPRESSION = 57438
const EXTRACT = 57439
const JSON_ARRAYAGG = 57440
const JSON_OBJECTAGG = 57441
const JSON_PRETTY = 57442
const JSON_STORAGE_SIZE = 57443
const JSON_STORAGE_FREE = 57444
const NULL = 57445
const TRUE = 57446
const FALSE = 57447
const OFF = 57448
const DISCARD = 57449
const IMPORT = 57450
const ENABLE = 57451
const DISABLE = 57452
const TABLESPACE = 57453
const VIRTUAL = 57454
const STORED = 57455
const EMPTY_FROM_CLAUSE = 57456
const LOWER_THAN_CHARSET = 57457
const CHARSET = 57458
const UNIQUE = 57459
const KEY = 57460
const EXPRESSION_PREC_SETTER = 57461
const OR = 57462
const XOR = 57463
const AND = 57464
const NOT = 57465
const BETWEEN = 57466
const CASE = 57467
const WHEN = 57468
const THEN = 57469
const ELSE = 57470
const END = 57471
const LE = 57472
const GE = 57473
const NE = 57474
const NULL_SAFE_EQUAL = 57475
const IS = 57476
const LIKE = 57477
const REGEXP = 57478
const IN = 57479
const SHIFT_LEFT = 57480
const SHIFT_RIGHT = 57481
const DIV = 57482
const MOD = 57483
const UNARY = 57484
const COLLATE = 57485
const BINARY = 57486
const UNDERSCORE_ARMSCII8 = 57487
const UNDERSCORE_ASCII = 57488
const UNDERSCORE_BIG5 = 57489
const UNDERSCORE_BINARY = 57490
const UNDERSCORE_CP1250 = 57491
const UNDERSCORE_CP1251 = 57492
const UNDERSCORE_CP1256 = 57493
const UNDERSCORE_CP1257 = 57494
const UNDERSCORE_CP850 = 57495
const UNDERSCORE_CP852 = 57496
const UNDERSCORE_CP866 = 57497
const UNDERSCORE_CP932 = 57498
const UNDERSCORE_DEC8 = 57499
const UNDERSCORE_EUCJPMS = 57500
const UNDERSCORE_EUCKR = 57501
const UNDERSCORE_GB18030 = 57502
const UNDERSCORE_GB2312 = 57503
const UNDERSCORE_GBK = 57504
const UNDERSCORE_GEOSTD8 = 57505
const UNDERSCORE_GREEK = 57506
const UNDERSCORE_HEBREW = 57507
const UNDERSCORE_HP8 = 57508
const UNDERSCORE_KEYBCS2 = 57509
const UNDERSCORE_KOI8R = 57510
const UNDERSCORE_KOI8U = 57511
const UNDERSCORE_LATIN1 = 57512
const UNDERSCORE_LATIN2 = 57513
const UNDERSCORE_LATIN5 = 57514
const UNDERSCORE_LATIN7 = 57515
const UNDERSCORE_MACCE = 57516
const UNDERSCORE_MACROMAN = 57517
const UNDERSCORE_SJIS = 57518
const UNDERSCORE_SWE7 = 57519
const UNDERSCORE_TIS620 = 57520
const UNDERSCORE_UCS2 = 57521
const UNDERSCORE_UJIS = 57522
const UNDERSCORE_UTF16 = 57523
const UNDERSCORE_UTF16LE = 57524
const UNDERSCORE_UTF32 = 57525
const UNDERSCORE_UTF8 = 57526
const UNDERSCORE_UTF8MB4 = 57527
const INTERVAL = 57528
const JSON_EXTRACT_OP = 57529
const JSON_UNQUOTE_EXTRACT_OP = 57530
const CREATE = 57531
const ALTER = 57532
const DROP = 57533
const RENAME = 57534
const ANALYZE = 57535
const ADD = 57536
const FLUSH = 57537
const CHANGE = 57538
const MODIFY = 57539
const REVERT = 57540
const SCHEMA = 57541
const TABLE = 57542
const INDEX = 57543
const VIEW = 57544
const TO = 57545
const IGNORE = 57546
const IF = 57547
const PRIMARY = 57548
const COLUMN = 57549
const SPATIAL = 57550
const FULLTEXT = 57551
const KEY_BLOCK_SIZE = 57552
const CHECK = 57553
const INDEXES = 57554
const ACTION = 57555
const CASCADE = 57556
const CONSTRAINT = 57557
const FOREIGN = 57558
const NO = 57559
const REFERENCES = 57560
const RESTRICT = 57561
const SHOW = 57562
const DESCRIBE = 57563
const EXPLAIN = 57564
const DATE = 57565
const ESCAPE = 57566
const REPAIR = 57567
const OPTIMIZE = 57568
const TRUNCATE = 57569
const COALESCE = 57570
const EXCHANGE = 57571
const REBUILD = 57572
const PARTITIONING = 57573
const REMOVE = 57574
const MAXVALUE = 57575
const PARTITION = 57576
const REORGANIZE = 57577
const LESS = 57578
const THAN = 57579
const PROCEDURE = 57580
const TRIGGER = 57581
const VINDEX = 57582
const VINDEXES = 57583
const DIRECTORY = 57584
const NAME = 57585
const UPGRADE = 57586
const STATUS = 57587
const VARIABLES = 57588
const WARNINGS = 57589
const CASCADED = 57590
const DEFINER = 57591
const OPTION = 57592
const SQL = 57593
const UNDEFINED = 57594
const SEQUENCE = 57595
const MERGE = 57596
const TEMPORARY = 57597
const TEMPTABLE = 57598
const INVOKER = 57599
const SECURITY = 57600
const FIRST = 57601
const AFTER = 57602
const LAST = 57603
const VITESS_MIGRATION = 57604
const CANCEL = 57605
const RETRY = 57606
const COMPLETE = 57607
const CLEANUP = 57608
const BEGIN = 57609
const START = 57610
const TRANSACTION = 57611
const COMMIT = 57612
const ROLLBACK = 57613
const SAVEPOINT = 57614
const RELEASE = 57615
const WORK = 57616
const BIT = 57617
const TINYINT = 57618
const SMALLINT = 57619
const MEDIUMINT = 57620
const INT = 57621
const INTEGER = 57622
const BIGINT = 57623
const INTNUM = 57624
const REAL = 57625
const DOUBLE = 57626
const FLOAT_TYPE = 57627
const DECIMAL = 57628
const NUMERIC = 57629
const TIME = 57630
const TIMESTAMP = 57631
const DATETIME = 57632
const YEAR = 57633
const CHAR = 57634
const VARCHAR = 57635
const BOOL = 57636
const CHARACTER = 57637
const VARBINARY = 57638
const NCHAR = 57639
const TEXT = 57640
const TINYTEXT = 57641
const MEDIUMTEXT = 57642
const LONGTEXT = 57643
const BLOB = 57644
const TINYBLOB = 57645
const MEDIUMBLOB = 57646
const LONGBLOB = 57647
const JSON = 57648
const ENUM = 57649
const GEOMETRY = 57650
const POINT = 57651
const LINESTRING = 57652
const POLYGON = 57653
const GEOMETRYCOLLECTION = 57654
const MULTIPOINT = 57655
const MULTILINESTRING = 57656
const MULTIPOLYGON = 57657
const NULLX = 57658
const AUTO_INCREMENT = 57659
const APPROXNUM = 57660
const SIGNED = 57661
const UNSIGNED = 57662
const ZEROFILL = 57663
const CODE = 57664
const COLLATION = 57665
const COLUMNS = 57666
const DATABASES = 57667
const ENGINES = 57668
const EVENT = 57669
const EXTENDED = 57670
const FIELDS = 57671
const FULL = 57672
const FUNCTION = 57673
const GTID_EXECUTED = 57674
const KEYSPACES = 57675
const OPEN = 57676
const PLUGINS = 57677
const PRIVILEGES = 57678
const PROCESSLIST = 57679
const SCHEMAS = 57680
const TABLES = 57681
const TRIGGERS = 57682
const USER = 57683
const VGTID_EXECUTED = 57684
const VITESS_KEYSPACES = 57685
const VITESS_METADATA = 57686
const VITESS_MIGRATIONS = 57687
const VITESS_REPLICATION_STATUS = 57688
const VITESS_SHARDS = 57689
const VITESS_TABLETS = 57690
const VSCHEMA = 57691
const NAMES = 57692
const GLOBAL = 57693
const SESSION = 57694
const ISOLATION = 57695
const LEVEL = 57696
const READ = 57697
const WRITE = 57698
const ONLY = 57699
const REPEATABLE = 57700
const COMMITTED = 57701
const UNCOMMITTED = 57702
const SERIALIZABLE = 57703
const CURRENT_TIMESTAMP = 57704
const DATABASE = 57705
const CURRENT_DATE = 57706
const CURRENT_TIME = 57707
const LOCALTIME = 57708
const LOCALTIMESTAMP = 57709
const CURRENT_USER = 57710
const UTC_DATE = 57711
const UTC_TIME = 57712
const UTC_TIMESTAMP = 57713
const DAY = 57714
const DAY_HOUR = 57715
const DAY_MICROSECOND = 57716
const DAY_MINUTE = 57717
const DAY_SECOND = 57718
const HOUR = 57719
const HOUR_MICROSECOND = 57720
const HOUR_MINUTE = 57721
const HOUR_SECOND = 57722
const MICROSECOND = 57723
const MINUTE = 57724
const MINUTE_MICROSECOND = 57725
const MINUTE_SECOND = 57726
const MONTH = 57727
const QUARTER = 57728
const SECOND = 57729
const SECOND_MICROSECOND = 57730
const YEAR_MONTH = 57731
const WEEK = 57732
const REPLACE = 57733
const CONVERT = 57734
const CAST = 57735
const SUBSTR = 57736
const SUBSTRING = 57737
const GROUP_CONCAT = 57738
const SEPARATOR = 57739
const TIMESTAMPADD = 57740
const TIMESTAMPDIFF = 57741
const MATCH = 57742
const AGAINST = 57743
const BOOLEAN = 57744
const LANGUAGE = 57745
const WITH = 57746
const QUERY = 57747
const EXPANSION = 57748
const WITHOUT = 57749
const VALIDATION = 57750
const UNUSED = 57751
const ARRAY = 57752
const CUME_DIST = 57753
const DESCRIPTION = 57754
const DENSE_RANK = 57755
const EMPTY = 57756
const EXCEPT = 57757
const FIRST_VALUE = 57758
const GROUPING = 57759
const GROUPS = 57760
const JSON_TABLE = 57761
const LAG = 57762
const LAST_VALUE = 57763
const LATERAL = 57764
const LEAD = 57765
const MEMBER = 57766
const NTH_VALUE = 57767
const NTILE = 57768
const OF = 57769
const OVER = 57770
const PERCENT_RANK = 57771
const RANK = 57772
const RECURSIVE = 57773
const ROW_NUMBER = 57774
const SYSTEM = 57775
const WINDOW = 57776
const ACTIVE = 57777
const ADMIN = 57778
const BUCKETS = 57779
const CLONE = 57780
const COMPONENT = 57781
const DEFINITION = 57782
const ENFORCED = 57783
const EXCLUDE = 57784
const FOLLOWING = 57785
const GEOMCOLLECTION = 57786
const GET_MASTER_PUBLIC_KEY = 57787
const HISTOGRAM = 57788
const HISTORY = 57789
const INACTIVE = 57790
const INVISIBLE = 57791
const LOCKED = 57792
const MASTER_COMPRESSION_ALGORITHMS = 57793
const MASTER_PUBLIC_KEY_PATH = 57794
const MASTER_TLS_CIPHERSUITES = 57795
const MASTER_ZSTD_COMPRESSION_LEVEL = 57796
const NESTED = 57797
const NETWORK_NAMESPACE = 57798
const NOWAIT = 57799
const NULLS = 57800
const OJ = 57801
const OLD = 57802
const OPTIONAL = 57803
const ORDINALITY = 57804
const ORGANIZATION = 57805
const OTHERS = 57806
const PATH = 57807
const PERSIST = 57808
const PERSIST_ONLY = 57809
const PRECEDING = 57810
const PRIVILEGE_CHECKS_USER = 57811
const PROCESS = 57812
const RANDOM = 57813
const REFERENCE = 57814
const REQUIRE_ROW_FORMAT = 57815
const RESOURCE = 57816
const RESPECT = 57817
const RESTART = 57818
const RETAIN = 57819
const REUSE = 57820
const ROLE = 57821
const SECONDARY = 57822
const SECONDARY_ENGINE = 57823
const SECONDARY_LOAD = 57824
const SECONDARY_UNLOAD = 57825
const SKIP = 57826
const SRID = 57827
const THREAD_PRIORITY = 57828
const TIES = 57829
const UNBOUNDED = 57830
const VCPU = 57831
const VISIBLE = 57832
const FORMAT = 57833
const TREE = 57834
const VITESS = 57835
const TRADITIONAL = 57836
const LOCAL = 57837
const LOW_PRIORITY = 57838
const NO_WRITE_TO_BINLOG = 57839
const LOGS = 57840
const ERROR = 57841
const GENERAL = 57842
const HOSTS = 57843
const OPTIMIZER_COSTS = 57844
const USER_RESOURCES = 57845
const SLOW = 57846
const CHANNEL = 57847
const RELAY = 57848
const EXPORT = 57849
const AVG_ROW_LENGTH = 57850
const CONNECTION = 57851
const CHECKSUM = 57852
const DELAY_KEY_WRITE = 57853
const ENCRYPTION = 57854
const ENGINE = 57855
const INSERT_METHOD = 57856
const MAX_ROWS = 57857
const MIN_ROWS = 57858
const PACK_KEYS = 57859
const PASSWORD = 57860
const FIXED = 57861
const DYNAMIC = 57862
const COMPRESSED = 57863
const REDUNDANT = 57864
const COMPACT = 57865
const ROW_FORMAT = 57866
const STATS_AUTO_RECALC = 57867
const STATS_PERSISTENT = 57868
const STATS_SAMPLE_PAGES = 57869
const STORAGE = 57870
const MEMORY = 57871
const DISK = 57872
const PARTITIONS = 57873
const LINEAR = 57874
const RANGE = 57875
const LIST = 57876
const SUBPARTITION = 57877
const SUBPARTITIONS = 57878
const HASH = 57879

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"EXTRACT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	9, 43,
	10, 43,
	-2, 33,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 42,
	1, 152,
	555, 152,
	-2, 158,
	-1, 43,
	119, 158,
	159, 158,
	312, 158,
	-2, 456,
	-1, 50,
	32, 629,
	218, 629,
	229, 629,
	262, 643,
	263, 643,
	-2, 631,
	-1, 55,
	220, 653,
	-2, 651,
	-1, 105,
	217, 1106,
	-2, 131,
	-1, 107,
	1, 153,
	555, 153,
	-2, 158,
	-1, 117,
	120, 359,
	223, 359,
	-2, 450,
	-1, 136,
	119, 158,
	159, 158,
	312, 158,
	-2, 465,
	-1, 601,
	203, 1127,
	-2, 1123,
	-1, 602,
	203, 1128,
	-2, 1124,
	-1, 672,
	56, 721,
	-2, 729,
	-1, 708,
	135, 1485,
	-2, 124,
	-1, 709,
	135, 1362,
	-2, 125,
	-1, 715,
	135, 1416,
	-2, 1100,
	-1, 857,
	135, 1295,
	-2, 1097,
	-1, 893,
	228, 37,
	233, 37,
	-2, 370,
	-1, 970,
	1, 504,
	555, 504,
	-2, 158,
	-1, 1169,
	56, 722,
	-2, 734,
	-1, 1170,
	56, 723,
	-2, 735,
	-1, 1221,
	119, 158,
	159, 158,
	312, 158,
	-2, 400,
	-1, 1224,
	22, 177,
	-2, 179,
	-1, 1297,
	120, 359,
	223, 359,
	-2, 450,
	-1, 1306,
	228, 38,
	233, 38,
	-2, 371,
	-1, 1561,
	203, 1132,
	-2, 1126,
	-1, 1637,
	119, 158,
	159, 158,
	312, 158,
	-2, 401,
	-1, 1876,
	74, 89,
	83, 89,
	-2, 788,
	-1, 2045,
	46, 1068,
	-2, 1062,
	-1, 2234,
	5, 49,
	15, 49,
	17, 49,
	84, 49,
	-2, 763,
}

const yyPrivate = 57344

const yyLast = 34483

var yyAct = [...]int{
	601, 2530, 590, 2101, 610, 2526, 2525, 2389, 1592, 603,
	2459, 1634, 2280, 2421, 2453, 2391, 2385, 2486, 2241, 1224,
	2141, 2440, 2153, 2427, 3, 592, 33, 1575, 1896, 2353,
	1903, 2054, 2304, 1151, 1822, 2057, 665, 2142, 88, 1033,
	1184, 1905, 2055, 2205, 2058, 2309, 173, 547, 2225, 173,
	593, 511, 173, 1871, 2198, 2036, 687, 527, 2052, 173,
	1608, 1596, 604, 1669, 1922, 591, 1983, 173, 2046, 2296,
	545, 1945, 981, 1842, 2100, 1923, 1689, 1674, 1924, 173,
	1623, 145, 543, 1860, 34, 573, 923, 32, 1613, 1171,
	1834, 1508, 1501, 860, 1702, 669, 539, 673, 1999, 688,
	527, 131, 1734, 527, 173, 527, 1612, 667, 713, 1460,
	1676, 1555, 1688, 1916, 888, 690, 1213, 1193, 1577, 1615,
	1878, 1154, 1520, 1478, 83, 556, 1320, 551, 1408, 1311,
	1411, 1051, 1686, 87, 867, 1010, 889, 1665, 890, 710,
	894, 544, 864, 1197, 1394, 868, 1212, 1601, 679, 148,
	891, 1031, 1026, 1416, 901, 1273, 675, 1304, 90, 674,
	1597, 1210, 108, 114, 700, 1296, 109, 677, 966, 115,
	68, 534, 89, 1117, 2503, 1568, 77, 81, 2335, 1121,
	1278, 2531, 2243, 2244, 2245, 2243, 695, 2422, 2392, 1963,
	1962, 1732, 110, 676, 69, 7, 6, 5, 1991, 1992,
	2529, 175, 176, 177, 2541, 1380, 2540, 681, 82, 116,
	1467, 484, 1572, 1573, 1466, 1465, 1464, 861, 928, 1463,
	925, 1462, 1449, 537, 1454, 538, 2473, 1820, 2042, 2517,
	2481, 1844, 535, 939, 940, 2496, 943, 944, 945, 946,
	668, 666, 949, 950, 951, 952, 953, 954, 955, 956,
	957, 958, 959, 960, 961, 962, 963, 110, 1052, 682,
	714, 707, 871, 94, 876, 2257, 689, 2122, 2349, 904,
	882, 883, 2348, 905, 881, 70, 2275, 927, 2528, 2276,
	70, 169, 72, 926, 2516, 1558, 2450, 1052, 929, 930,
	931, 2541, 1681, 2508, 2407, 2494, 70, 2281, 1851, 936,
	96, 1772, 99, 2441, 111, 105, 70, 1720, 170, 941,
	2449, 479, 175, 176, 177, 1679, 1998, 153, 2185, 2406,
	1287, 110, 1970, 1852, 1821, 1017, 1969, 1019, 2092, 2093,
	1887, 664, 1549, 1886, 672, 2091, 1888, 1629, 1630, 1214,
	1990, 1215, 1769, 1628, 2322, 1029, 514, 880, 1000, 975,
	976, 79, 875, 1574, 662, 877, 79, 661, 2386, 1893,
	1062, 702, 703, 1016, 1018, 1770, 1913, 2202, 2337, 969,
	1083, 697, 79, 150, 988, 151, 2155, 1005, 1006, 989,
	1649, 1648, 79, 514, 1001, 994, 2177, 501, 2175, 1062,
	168, 2358, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092,
	1091, 1093, 1094, 878, 525, 175, 176, 177, 1158, 1453,
	1455, 1456, 1457, 1541, 1530, 1531, 1532, 1533, 1543, 1534,
	1535, 1536, 1548, 1544, 1537, 1538, 1545, 1546, 1547, 1539,
	1540, 1542, 529, 500, 540, 965, 514, 514, 523, 514,
	1946, 1370, 1703, 1028, 498, 1678, 1400, 1740, 880, 1966,
	872, 1058, 1014, 2156, 1050, 988, 1015, 874, 873, 2149,
	989, 1002, 995, 691, 1007, 1735, 1020, 2150, 987, 2507,
	986, 1395, 1023, 2474, 1008, 1009, 942, 884, 971, 173,
	1058, 173, 495, 1371, 173, 1372, 1003, 1004, 1013, 1978,
	1751, 509, 948, 947, 154, 1746, 1743, 1745, 1744, 2157,
	1741, 1739, 1021, 159, 878, 1737, 506, 2345, 880, 964,
	2270, 879, 527, 527, 527, 885, 1748, 912, 1749, 1705,
	1750, 1609, 910, 1892, 921, 2504, 920, 1290, 919, 918,
	527, 527, 917, 1770, 916, 2492, 915, 1909, 914, 515,
	909, 1738, 579, 580, 581, 598, 600, 599, 1310, 922,
	865, 1982, 865, 896, 1095, 897, 1044, 33, 984, 1409,
	990, 991, 992, 993, 865, 998, 903, 485, 863, 487,
	502, 968, 517, 1095, 516, 491, 515, 489, 493, 503,
	494, 1687, 488, 1030, 499, 1823, 1825, 490, 504, 505,
	507, 521, 520, 508, 701, 497, 518, 1979, 2121, 1726,
	1405, 1038, 932, 2129, 1965, 2028, 2027, 2502, 2026, 1285,
	146, 2334, 879, 1057, 1054, 1055, 1056, 1061, 1063, 1060,
	1284, 1059, 1968, 1098, 1099, 1100, 1101, 2338, 1053, 515,
	515, 1022, 515, 1106, 2203, 1109, 1994, 1401, 1149, 1680,
	903, 1024, 1057, 1054, 1055, 1056, 1061, 1063, 1060, 2490,
	1059, 1309, 903, 1283, 913, 1783, 903, 1053, 967, 911,
	1955, 1406, 173, 902, 1035, 1036, 1281, 2359, 2405, 896,
	899, 900, 879, 865, 483, 478, 1722, 893, 897, 173,
	1977, 1985, 73, 1976, 1102, 938, 1984, 2382, 2527, 2240,
	78, 2221, 1161, 1096, 1097, 78, 1165, 1883, 527, 1985,
	1150, 173, 669, 1771, 1984, 1162, 527, 667, 1164, 1849,
	1812, 78, 527, 1382, 1381, 1383, 1384, 1385, 985, 1567,
	1201, 78, 1159, 1131, 979, 69, 107, 1047, 1045, 1046,
	1635, 1095, 1094, 2090, 684, 1824, 903, 902, 1144, 519,
	983, 1399, 974, 1027, 977, 710, 1119, 2420, 1120, 902,
	2015, 997, 1011, 902, 906, 896, 1123, 512, 1150, 896,
	899, 900, 999, 865, 907, 1417, 102, 893, 897, 1163,
	2433, 2401, 513, 87, 1137, 1138, 1139, 1140, 2215, 2431,
	924, 1155, 908, 1736, 903, 1402, 892, 1216, 2435, 2436,
	1048, 1521, 1899, 1907, 1908, 2318, 1935, 2000, 90, 2111,
	2432, 147, 152, 149, 155, 156, 157, 158, 160, 161,
	162, 163, 175, 176, 177, 1067, 1503, 164, 165, 166,
	167, 594, 2110, 574, 576, 595, 596, 103, 572, 575,
	597, 1709, 1152, 902, 1521, 1319, 1797, 1900, 906, 896,
	1719, 666, 1065, 1160, 1066, 1067, 1183, 668, 907, 1714,
	1180, 2488, 1318, 1308, 2489, 1721, 2487, 577, 578, 1714,
	173, 1902, 1717, 1786, 1274, 912, 714, 1206, 1207, 910,
	1897, 982, 1211, 1282, 1396, 2467, 1397, 2002, 1793, 1398,
	1718, 902, 79, 937, 1907, 1908, 1012, 1504, 1066, 1067,
	1716, 1898, 527, 2096, 1306, 1481, 1906, 1202, 970, 1418,
	615, 616, 1315, 175, 176, 177, 1317, 1846, 1909, 527,
	527, 2537, 527, 1068, 527, 527, 2505, 527, 527, 527,
	527, 527, 527, 1904, 1087, 1088, 1089, 1090, 1092, 1091,
	1093, 1094, 527, 1483, 1389, 1166, 173, 1353, 1178, 2410,
	2004, 1115, 2008, 2375, 2003, 1525, 2001, 1484, 1485, 1482,
	1792, 2006, 173, 1089, 1090, 1092, 1091, 1093, 1094, 1065,
	2005, 1066, 1067, 527, 1065, 173, 1066, 1067, 2017, 2458,
	1288, 1289, 705, 2007, 2009, 2411, 1407, 2423, 1847, 2376,
	173, 1473, 1475, 1476, 540, 1302, 2256, 1906, 2182, 1295,
	1065, 2255, 1066, 1067, 2506, 2127, 173, 1388, 1920, 1909,
	1602, 1603, 1474, 173, 1071, 1072, 1073, 1074, 1075, 1076,
	1077, 1069, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 527, 527, 527, 1387, 1350, 2180, 1178, 1356, 1357,
	1313, 1919, 1316, 1788, 1362, 1363, 1322, 1377, 1323, 1280,
	1325, 1327, 1787, 1684, 1331, 1333, 1335, 1337, 1339, 1305,
	1293, 173, 1292, 1178, 1312, 1312, 1291, 1348, 1349, 1314,
	1775, 1776, 1777, 1390, 1194, 2235, 1065, 1421, 1066, 1067,
	1366, 1375, 2522, 2468, 1425, 2188, 1427, 1428, 1429, 1430,
	1374, 1373, 1065, 1434, 1066, 1067, 1364, 1386, 1413, 602,
	1191, 1358, 1065, 1351, 1066, 1067, 1502, 1448, 1901, 1065,
	1376, 1066, 1067, 1355, 1354, 1065, 1410, 1066, 1067, 1511,
	527, 1065, 1329, 1066, 1067, 1065, 2379, 1066, 1067, 2378,
	110, 1187, 1419, 1420, 2377, 527, 527, 2317, 2315, 1479,
	2293, 2253, 2107, 882, 1554, 174, 1424, 881, 174, 1553,
	1286, 174, 2187, 1431, 1432, 1433, 528, 1929, 174, 1917,
	1423, 1146, 1487, 1477, 1730, 1190, 174, 173, 1085, 1086,
	1087, 1088, 1089, 1090, 1092, 1091, 1093, 1094, 174, 1729,
	1188, 1559, 1444, 1445, 1446, 1178, 1447, 175, 176, 177,
	2152, 2108, 1065, 173, 1066, 1067, 527, 1595, 1581, 528,
	1506, 1580, 528, 174, 528, 1065, 173, 1066, 1067, 527,
	175, 176, 177, 1505, 1480, 173, 1450, 173, 173, 527,
	1414, 2456, 527, 1378, 1065, 1365, 1066, 1067, 1361, 1582,
	1360, 1583, 1486, 527, 1488, 1489, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1359, 2424, 1189,
	1561, 1559, 1025, 86, 1522, 1563, 1564, 1178, 710, 87,
	1065, 710, 1066, 1067, 2341, 1550, 1551, 1552, 1840, 2532,
	1611, 1588, 1560, 2273, 2501, 87, 1084, 1085, 1086, 1087,
	1088, 1089, 1090, 1092, 1091, 1093, 1094, 1065, 527, 1066,
	1067, 84, 1921, 84, 1690, 1691, 1692, 2415, 86, 1694,
	1696, 2343, 85, 1065, 85, 1066, 1067, 1655, 1656, 1657,
	1658, 1178, 527, 1638, 2342, 681, 1840, 2483, 527, 1315,
	1561, 1856, 1315, 2279, 1315, 1947, 1639, 1621, 2478, 2477,
	1713, 1065, 92, 1066, 1067, 175, 176, 177, 1932, 1890,
	2053, 1590, 1607, 1840, 2462, 1715, 1671, 1642, 1840, 2447,
	2214, 1704, 1605, 175, 176, 177, 1178, 1697, 1178, 2037,
	527, 1083, 1502, 1677, 1643, 1415, 1626, 1502, 1502, 1641,
	2520, 1640, 175, 176, 177, 1857, 1695, 1840, 2414, 714,
	1625, 2214, 714, 1084, 1085, 1086, 1087, 1088, 1089, 1090,
	1092, 1091, 1093, 1094, 1840, 2395, 2365, 1178, 2216, 1507,
	1784, 93, 1714, 173, 1064, 1701, 1513, 1514, 2273, 1178,
	173, 92, 2400, 91, 1840, 173, 173, 1667, 1668, 173,
	1650, 173, 1651, 1652, 1653, 1654, 1672, 173, 1562, 1693,
	1857, 1565, 1566, 1682, 173, 1685, 1683, 1879, 1661, 1662,
	1663, 1664, 1840, 2271, 1714, 1178, 1468, 1469, 1470, 1471,
	1710, 1857, 1707, 1723, 1725, 1724, 1706, 93, 1672, 1727,
	1728, 904, 173, 527, 1587, 905, 2117, 92, 1627, 91,
	2219, 1178, 2119, 2118, 1879, 1312, 1708, 2037, 86, 1711,
	1178, 1712, 2115, 2116, 2115, 2114, 1509, 1510, 1857, 1178,
	1784, 1178, 1770, 1964, 1515, 1277, 1949, 1943, 1944, 1836,
	1880, 1083, 1761, 1762, 1079, 2258, 1080, 1764, 1784, 1882,
	1840, 1839, 1733, 1805, 86, 1802, 1765, 1064, 1178, 1801,
	1081, 1082, 1078, 1084, 1085, 1086, 1087, 1088, 1089, 1090,
	1092, 1091, 1093, 1094, 1277, 1276, 1178, 1880, 2085, 540,
	1222, 1221, 1714, 1479, 1698, 1754, 1770, 1770, 2214, 1600,
	1182, 1570, 1458, 1404, 1344, 2259, 2260, 2261, 1208, 887,
	671, 886, 2460, 2514, 2419, 1780, 2416, 79, 2394, 2388,
	2154, 1784, 1598, 1599, 2355, 1185, 2329, 2250, 174, 1279,
	174, 173, 1670, 174, 1862, 1865, 1866, 1867, 1863, 173,
	1864, 1868, 2151, 2113, 2226, 2227, 1950, 527, 1633, 1875,
	1768, 1666, 1660, 2262, 1345, 1346, 1347, 1659, 1845, 1392,
	1307, 528, 528, 528, 1177, 1303, 1778, 1818, 1480, 1275,
	104, 1925, 2390, 1926, 969, 2226, 2227, 2356, 173, 528,
	528, 173, 1681, 1341, 2539, 1779, 79, 1781, 2535, 2464,
	2428, 2229, 2134, 1853, 33, 2133, 1889, 1083, 2232, 1993,
	2263, 2264, 1796, 1873, 2132, 2053, 1936, 1673, 1862, 1865,
	1866, 1867, 1863, 1755, 1864, 1868, 1451, 1841, 1926, 1084,
	1085, 1086, 1087, 1088, 1089, 1090, 1092, 1091, 1093, 1094,
	1342, 1343, 2075, 2231, 2073, 2072, 1561, 2076, 1837, 2074,
	1176, 1172, 527, 2077, 2071, 1866, 1867, 173, 2476, 2448,
	1155, 1594, 1819, 1186, 173, 1173, 1586, 1827, 1560, 2220,
	527, 2138, 2034, 2033, 2374, 1872, 527, 2308, 1942, 2210,
	1315, 1315, 1833, 1914, 1915, 527, 2310, 1838, 1848, 1894,
	1584, 1585, 1175, 583, 1174, 2047, 2049, 1961, 2044, 1403,
	1877, 660, 1911, 1646, 2050, 1176, 1172, 1960, 173, 173,
	173, 173, 173, 1881, 1884, 2207, 1517, 1930, 934, 685,
	1173, 174, 1677, 2206, 1895, 173, 173, 686, 933, 84,
	1518, 84, 2164, 1925, 1988, 1928, 86, 1037, 174, 1957,
	85, 173, 85, 93, 1918, 1169, 1170, 1175, 1956, 1174,
	526, 111, 2212, 92, 86, 91, 1927, 528, 1933, 1502,
	174, 1602, 1603, 2510, 86, 528, 1959, 2130, 1758, 2397,
	1295, 528, 1794, 1937, 1938, 1939, 2351, 1910, 1870, 1591,
	693, 694, 2032, 527, 1747, 1774, 91, 92, 1958, 2461,
	2031, 2316, 93, 712, 2314, 2313, 862, 527, 869, 2306,
	2211, 2014, 92, 667, 91, 2209, 2135, 173, 2094, 1699,
	692, 527, 1809, 1810, 2305, 2199, 2037, 93, 2466, 2465,
	527, 1836, 2025, 2466, 1996, 527, 527, 92, 173, 173,
	173, 173, 173, 1803, 1980, 1995, 1195, 1951, 1952, 2380,
	173, 97, 98, 2106, 683, 173, 1997, 173, 95, 173,
	673, 2011, 173, 173, 173, 80, 2010, 1, 2065, 2025,
	2038, 2430, 496, 1798, 1571, 1153, 1986, 510, 2426, 1987,
	1165, 1379, 2103, 2059, 2084, 2109, 1369, 2282, 2352, 1675,
	173, 895, 136, 1636, 1637, 2443, 101, 858, 100, 898,
	996, 1700, 2274, 2024, 2035, 1912, 1647, 2039, 1228, 1226,
	1227, 2128, 2086, 2021, 1225, 2087, 1230, 173, 1229, 675,
	1452, 524, 674, 1869, 527, 171, 1217, 2067, 2068, 174,
	2070, 527, 2078, 2029, 582, 1196, 173, 935, 486, 2140,
	2103, 2120, 2082, 2088, 2066, 2102, 173, 2069, 1731, 492,
	1107, 2030, 1194, 87, 1885, 2095, 711, 704, 2061, 2056,
	173, 528, 2064, 173, 2056, 2099, 2204, 2043, 2045, 1843,
	2048, 2041, 1413, 2165, 2373, 2307, 2396, 1644, 528, 528,
	2124, 528, 2123, 528, 528, 1192, 528, 528, 528, 528,
	528, 528, 2125, 2126, 1795, 1114, 1519, 1616, 1579, 1472,
	549, 528, 548, 2102, 546, 174, 1677, 2139, 1829, 1850,
	2146, 173, 2144, 1070, 605, 1203, 1861, 2136, 1859, 1858,
	1756, 174, 1622, 2228, 2224, 2524, 2160, 2159, 2452, 1618,
	1614, 1835, 528, 557, 174, 550, 542, 2098, 1645, 2162,
	2163, 1967, 2148, 1049, 1168, 2167, 2509, 536, 2173, 174,
	870, 1516, 2357, 1773, 2137, 2184, 2166, 1167, 1528, 1529,
	2336, 1891, 58, 36, 531, 174, 173, 2472, 1040, 699,
	31, 2197, 174, 30, 29, 28, 27, 22, 21, 20,
	19, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	528, 528, 528, 2213, 2208, 2201, 18, 24, 2230, 17,
	2233, 2223, 16, 15, 106, 45, 42, 40, 113, 112,
	173, 43, 39, 173, 173, 173, 527, 972, 37, 2237,
	174, 26, 2238, 2239, 2269, 2236, 25, 14, 13, 12,
	11, 10, 9, 8, 2249, 527, 527, 527, 527, 4,
	1043, 23, 2, 2242, 2012, 2013, 0, 2247, 2248, 2016,
	0, 0, 2289, 2018, 2019, 2020, 2252, 0, 2254, 0,
	0, 2170, 2171, 0, 2172, 0, 0, 2174, 2278, 2176,
	0, 0, 0, 527, 527, 527, 173, 0, 0, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 528, 528, 0, 0, 0, 0,
	527, 0, 527, 2302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2288, 0, 712, 712, 712, 0, 0,
	1554, 2292, 0, 2323, 33, 2331, 174, 2083, 2312, 2311,
	0, 527, 2303, 1039, 1041, 0, 2325, 2319, 0, 2340,
	2327, 2321, 667, 2300, 2301, 0, 0, 2059, 0, 0,
	0, 2059, 174, 0, 0, 528, 0, 0, 0, 1179,
	1181, 0, 527, 0, 0, 174, 0, 0, 528, 0,
	0, 0, 2332, 2333, 174, 0, 174, 174, 528, 0,
	0, 528, 0, 0, 0, 0, 2344, 0, 0, 0,
	2287, 2347, 528, 2346, 0, 0, 0, 0, 0, 0,
	0, 2354, 1083, 0, 1782, 0, 0, 0, 0, 0,
	527, 0, 0, 0, 1147, 0, 2370, 2369, 2384, 0,
	2372, 0, 2056, 0, 1084, 1085, 1086, 1087, 1088, 1089,
	1090, 1092, 1091, 1093, 1094, 0, 527, 173, 2381, 0,
	0, 0, 0, 0, 2402, 0, 527, 528, 0, 2387,
	0, 667, 0, 2059, 0, 0, 2399, 33, 0, 0,
	0, 0, 0, 527, 2383, 0, 0, 0, 0, 2186,
	0, 528, 0, 1156, 0, 527, 0, 528, 0, 0,
	0, 527, 527, 2425, 0, 0, 0, 0, 0, 2200,
	0, 0, 2412, 0, 0, 0, 173, 527, 0, 0,
	527, 1199, 2437, 33, 0, 2429, 0, 2434, 2457, 712,
	2442, 0, 540, 0, 0, 1218, 0, 0, 0, 528,
	2354, 2444, 481, 2451, 2417, 0, 0, 0, 0, 0,
	2463, 0, 530, 0, 0, 0, 0, 0, 0, 2469,
	663, 0, 0, 0, 0, 0, 0, 0, 0, 2246,
	2475, 0, 2482, 0, 2480, 0, 0, 0, 0, 527,
	2485, 2484, 174, 0, 2491, 2251, 1554, 0, 2493, 174,
	0, 2498, 2497, 2495, 174, 174, 2499, 866, 174, 2500,
	174, 0, 0, 0, 0, 0, 174, 0, 2056, 0,
	2512, 2515, 0, 174, 2513, 2511, 0, 2277, 0, 0,
	0, 527, 1554, 0, 2518, 0, 0, 2521, 0, 2523,
	2534, 2533, 2103, 2536, 2538, 0, 0, 0, 0, 0,
	0, 174, 528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2290, 0, 2291, 0, 0, 0, 0, 2294,
	2295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2328, 0,
	0, 2330, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 862, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1147, 0,
	0, 0, 1321, 1321, 0, 1321, 0, 1321, 1321, 0,
	1330, 1321, 1321, 1321, 1321, 1321, 0, 0, 0, 0,
	0, 0, 0, 1147, 1147, 862, 0, 0, 0, 0,
	174, 0, 0, 0, 0, 169, 0, 0, 174, 0,
	0, 0, 0, 0, 0, 0, 528, 2371, 540, 0,
	0, 0, 0, 0, 0, 0, 1391, 0, 111, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 0, 0, 0, 0, 174, 0, 2393,
	174, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1523, 0, 0, 0, 1524, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 712, 712, 712, 0, 0, 0,
	0, 0, 0, 0, 0, 1179, 1569, 150, 0, 151,
	2418, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2438, 528, 0, 0, 168, 0, 174, 0, 0, 0,
	0, 0, 0, 174, 0, 1589, 0, 0, 0, 528,
	0, 0, 0, 0, 0, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 0, 0, 174, 174, 174,
	174, 174, 0, 1512, 0, 0, 0, 0, 0, 0,
	1147, 0, 0, 0, 174, 174, 0, 0, 1526, 1527,
	0, 1147, 1147, 1147, 0, 712, 0, 0, 0, 0,
	174, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 0, 973, 482, 978, 0, 522, 980, 154, 0,
	0, 0, 0, 482, 0, 0, 2519, 159, 0, 0,
	0, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 528, 680, 0, 0, 0, 0, 0, 1593,
	0, 0, 0, 0, 0, 0, 528, 0, 0, 698,
	0, 0, 1199, 0, 0, 712, 174, 0, 482, 0,
	528, 0, 712, 0, 0, 712, 0, 0, 0, 528,
	0, 0, 0, 0, 528, 528, 862, 174, 174, 174,
	174, 174, 0, 0, 0, 0, 0, 0, 0, 174,
	0, 0, 0, 0, 174, 0, 174, 0, 174, 0,
	0, 174, 174, 174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 146, 0, 0, 0, 0, 174,
	0, 869, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 862, 174, 0, 0, 0,
	0, 869, 0, 528, 70, 35, 72, 0, 0, 0,
	528, 0, 0, 0, 0, 174, 0, 0, 0, 0,
	0, 0, 0, 76, 0, 174, 0, 38, 64, 65,
	0, 62, 66, 0, 0, 0, 0, 0, 0, 174,
	63, 0, 174, 862, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1205, 0, 0, 0, 0, 51,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 1785, 0, 0, 0, 1789, 0, 1790, 1791,
	174, 0, 0, 0, 0, 0, 0, 1799, 0, 0,
	1800, 0, 0, 0, 0, 0, 612, 71, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1804, 0, 1806, 1807, 0,
	1808, 0, 0, 0, 0, 0, 0, 1813, 1814, 1815,
	1816, 1817, 0, 1589, 0, 174, 1767, 0, 0, 0,
	0, 0, 0, 0, 1828, 147, 152, 149, 155, 156,
	157, 158, 160, 161, 162, 163, 0, 0, 0, 0,
	0, 164, 165, 166, 167, 0, 670, 0, 71, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 174,
	0, 0, 174, 174, 174, 528, 670, 0, 0, 0,
	0, 0, 0, 0, 41, 44, 47, 46, 49, 0,
	61, 0, 0, 67, 528, 528, 528, 528, 0, 0,
	0, 0, 0, 1223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 50, 75, 74, 0, 0,
	59, 60, 48, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 528, 528, 528, 174, 0, 0, 0, 0,
	0, 712, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 482, 0, 482, 0, 0, 482, 528,
	1830, 528, 52, 53, 0, 54, 55, 56, 57, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1352,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	528, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1422,
	0, 0, 0, 0, 0, 0, 1426, 0, 0, 0,
	0, 0, 0, 0, 0, 1931, 0, 1437, 1438, 1439,
	1440, 1441, 1442, 1443, 2022, 2023, 0, 0, 0, 528,
	0, 0, 0, 1593, 0, 0, 0, 0, 0, 1948,
	0, 0, 0, 0, 0, 1148, 73, 0, 1953, 0,
	0, 0, 0, 0, 1461, 528, 174, 0, 0, 78,
	0, 0, 0, 0, 0, 528, 0, 0, 0, 2062,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 528, 0, 0, 0, 2080, 2081, 0, 0,
	0, 0, 0, 0, 528, 0, 482, 0, 0, 0,
	528, 528, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 680, 0, 174, 528, 0, 0, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 482, 0, 0, 0, 1147,
	0, 0, 0, 0, 0, 0, 712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2040, 0, 0, 0, 528, 0,
	0, 0, 0, 712, 0, 1147, 0, 0, 2063, 1321,
	1147, 0, 0, 0, 0, 0, 0, 0, 0, 1604,
	0, 0, 0, 0, 0, 0, 0, 0, 1610, 0,
	0, 1461, 0, 0, 2169, 0, 0, 0, 0, 0,
	528, 0, 0, 0, 0, 2178, 2179, 2181, 2183, 0,
	0, 0, 0, 0, 0, 2189, 2190, 0, 0, 2191,
	0, 0, 0, 0, 2195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1032, 1032,
	1032, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2217, 2218, 862, 71, 2222,
	1147, 0, 0, 0, 1593, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 482, 0, 0, 2234, 0, 0,
	0, 0, 0, 0, 0, 670, 1103, 1104, 1105, 0,
	1108, 0, 1110, 1111, 1112, 1113, 0, 1116, 1118, 1118,
	0, 1118, 1122, 1122, 1124, 1125, 1126, 1127, 1128, 1129,
	1130, 0, 1132, 1133, 1134, 1135, 1136, 0, 0, 1148,
	0, 1122, 1122, 1122, 1122, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2272, 0, 0, 0,
	0, 0, 0, 0, 1148, 1148, 0, 0, 0, 0,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1367, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1461, 0, 0, 482,
	0, 0, 0, 1742, 0, 0, 0, 2297, 1752, 1753,
	1157, 0, 1757, 670, 1412, 0, 0, 670, 0, 0,
	1760, 0, 0, 670, 0, 0, 0, 1763, 0, 0,
	482, 0, 0, 0, 0, 0, 0, 482, 0, 0,
	0, 0, 0, 0, 0, 0, 1435, 1436, 482, 482,
	482, 482, 482, 482, 482, 1766, 0, 0, 0, 0,
	0, 2339, 0, 0, 0, 0, 0, 0, 0, 1593,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 482, 0, 0, 2283, 2284,
	2285, 2286, 2350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2360, 2361, 2362, 0, 2363,
	2364, 2366, 0, 0, 0, 2367, 2368, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2298, 2298, 2298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 698, 0,
	0, 0, 0, 0, 0, 698, 698, 0, 1147, 0,
	0, 1148, 0, 2324, 0, 2326, 0, 0, 0, 0,
	0, 0, 1148, 1148, 1148, 698, 1412, 698, 698, 698,
	698, 698, 2404, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 1593, 0, 0, 0, 0, 0,
	0, 1367, 0, 0, 0, 0, 0, 0, 0, 0,
	111, 0, 133, 698, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 712, 0, 680, 0, 0,
	0, 0, 0, 0, 1876, 0, 0, 0, 0, 0,
	482, 0, 0, 0, 0, 0, 1412, 0, 0, 482,
	0, 482, 1624, 0, 143, 0, 0, 0, 0, 132,
	0, 0, 0, 2470, 2471, 0, 0, 0, 0, 0,
	0, 0, 0, 1593, 0, 0, 0, 0, 0, 150,
	0, 151, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 120, 121, 142, 141, 168, 0, 0, 1593,
	1934, 0, 0, 0, 0, 0, 0, 0, 0, 2408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1147, 0, 2413, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1593, 0,
	0, 0, 0, 0, 712, 712, 0, 0, 0, 0,
	0, 1971, 1972, 1973, 1974, 1975, 0, 0, 0, 0,
	2454, 0, 0, 1593, 0, 0, 0, 0, 1461, 1981,
	0, 0, 0, 0, 0, 0, 0, 1032, 1032, 1032,
	0, 0, 0, 0, 1989, 0, 0, 0, 0, 137,
	118, 144, 125, 117, 0, 138, 139, 0, 0, 0,
	154, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	126, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2454, 0, 129, 127, 122, 123, 124, 128,
	0, 0, 0, 0, 119, 0, 0, 482, 0, 0,
	0, 0, 0, 130, 482, 0, 0, 0, 0, 482,
	482, 0, 0, 482, 0, 1759, 0, 0, 0, 0,
	0, 482, 0, 0, 1593, 0, 0, 0, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 146, 0, 0, 0,
	0, 0, 0, 2112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2131, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 698, 0, 1617, 0, 0, 0, 0, 0, 2143,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2147,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 0,
	0, 140, 0, 2158, 0, 0, 2161, 0, 1941, 0,
	0, 698, 698, 134, 0, 0, 135, 0, 0, 0,
	0, 111, 1412, 133, 0, 482, 0, 0, 0, 0,
	0, 0, 0, 1367, 153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 143, 0, 0, 0, 0,
	132, 0, 482, 0, 0, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	150, 0, 151, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1298, 1299, 142, 141, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 147, 152, 149,
	155, 156, 157, 158, 160, 161, 162, 163, 0, 0,
	0, 0, 0, 164, 165, 166, 167, 0, 0, 0,
	0, 482, 0, 0, 0, 0, 0, 0, 1940, 0,
	0, 0, 0, 2265, 0, 0, 2266, 2267, 2268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 482, 482, 482, 482, 482, 0, 0, 0,
	137, 1300, 144, 0, 1297, 0, 138, 139, 0, 482,
	482, 154, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 0, 0, 0, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 698,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1148, 0, 0, 0, 0, 0, 698, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1148, 0, 0, 0,
	0, 1148, 482, 482, 482, 482, 482, 0, 0, 0,
	0, 0, 0, 0, 2079, 0, 1811, 146, 0, 482,
	0, 1367, 0, 482, 0, 0, 482, 2089, 1412, 0,
	0, 0, 0, 1826, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 670, 0,
	0, 0, 0, 0, 482, 0, 1294, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 1855, 0, 0, 111,
	2403, 133, 0, 0, 1874, 0, 0, 0, 0, 0,
	0, 482, 153, 0, 0, 0, 0, 0, 0, 0,
	0, 1148, 140, 0, 0, 0, 0, 0, 0, 0,
	482, 0, 0, 0, 134, 0, 0, 135, 0, 0,
	482, 0, 0, 143, 0, 0, 0, 0, 132, 0,
	0, 2479, 0, 0, 482, 0, 0, 482, 0, 0,
	0, 1245, 0, 0, 0, 0, 0, 0, 150, 0,
	151, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1298, 1299, 142, 141, 168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1954, 0, 0, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 147, 152,
	149, 155, 156, 157, 158, 160, 161, 162, 163, 0,
	0, 0, 0, 0, 164, 165, 166, 167, 0, 0,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 1300,
	144, 0, 1297, 0, 138, 139, 0, 0, 0, 154,
	0, 0, 1233, 0, 0, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 482, 0, 0, 482, 482, 482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1617, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2060,
	0, 71, 0, 0, 1617, 1617, 1617, 1617, 1617, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1874, 0, 0, 0, 1617, 0, 0, 1617, 0,
	1367, 0, 1246, 0, 0, 0, 0, 0, 0, 0,
	0, 1245, 0, 0, 0, 0, 2097, 0, 0, 1148,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 146, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1259, 1262, 1263, 1264, 1265, 1266,
	1267, 0, 1268, 1269, 1270, 1271, 1272, 1247, 1248, 1249,
	1250, 1231, 1232, 1260, 2145, 1234, 0, 1235, 1236, 1237,
	1238, 1239, 1240, 1241, 1242, 1243, 1244, 1251, 1252, 1253,
	1254, 1255, 1256, 1257, 1258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	140, 0, 0, 0, 0, 2168, 0, 0, 0, 0,
	0, 0, 134, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1233, 2192, 2193, 2194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1261, 0, 0, 0, 1148, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1617, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1367, 0, 1246, 0, 0, 0, 147, 152, 149, 155,
	156, 157, 158, 160, 161, 162, 163, 0, 0, 0,
	0, 0, 164, 165, 166, 167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1259, 1262, 1263, 1264, 1265, 1266,
	1267, 0, 1268, 1269, 1270, 1271, 1272, 1247, 1248, 1249,
	1250, 1231, 1232, 1260, 0, 1234, 0, 1235, 1236, 1237,
	1238, 1239, 1240, 1241, 1242, 1243, 1244, 1251, 1252, 1253,
	1254, 1255, 1256, 1257, 1258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2060, 0, 71, 0, 2060, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 840,
	826, 406, 774, 843, 744, 762, 853, 765, 768, 808,
	723, 787, 329, 759, 0, 748, 719, 754, 720, 746,
	776, 233, 743, 828, 791, 842, 285, 230, 725, 749,
	343, 764, 184, 810, 382, 218, 295, 292, 413, 244,
	236, 232, 217, 269, 301, 341, 400, 335, 849, 289,
	797, 1261, 391, 314, 0, 0, 0, 778, 832, 785,
	822, 773, 809, 733, 796, 844, 760, 805, 845, 275,
	216, 183, 326, 392, 248, 0, 0, 0, 0, 175,
	176, 177, 0, 2445, 0, 2446, 0, 0, 0, 2060,
	0, 207, 0, 214, 756, 0, 0, 0, 0, 0,
	802, 839, 757, 804, 228, 273, 235, 227, 410, 850,
	831, 0, 2398, 199, 841, 780, 0, 807, 71, 856,
	718, 799, 0, 721, 724, 852, 835, 752, 238, 0,
	0, 0, 0, 0, 0, 0, 777, 786, 819, 771,
	0, 0, 0, 0, 0, 0, 0, 750, 0, 795,
	0, 0, 0, 729, 722, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 71, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 775, 0, 0, 0,
	732, 0, 751, 820, 0, 716, 256, 726, 315, 0,
	824, 834, 772, 442, 838, 770, 769, 814, 730, 830,
	763, 284, 728, 281, 179, 195, 0, 761, 325, 365,
	371, 829, 747, 755, 219, 753, 369, 339, 427, 203,
	246, 362, 344, 367, 794, 812, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	423, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 1034, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 742, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 825,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 320, 266, 389, 282, 291, 817, 855, 338, 370,
	209, 429, 390, 737, 741, 735, 736, 789, 790, 738,
	846, 847, 848, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 821, 731, 0, 739, 740, 0, 827, 836,
	837, 793, 178, 192, 287, 851, 359, 249, 456, 436,
	432, 717, 734, 225, 745, 0, 0, 758, 766, 767,
	779, 781, 782, 783, 784, 311, 800, 801, 803, 811,
	813, 816, 818, 823, 833, 854, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 792, 798, 298,
	243, 261, 272, 806, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 788, 815, 294, 407, 408, 268, 840,
	826, 406, 774, 843, 744, 762, 853, 765, 768, 808,
	723, 787, 329, 759, 0, 748, 719, 754, 720, 746,
	776, 233, 743, 828, 791, 842, 285, 230, 725, 749,
	343, 764, 184, 810, 382, 218, 295, 292, 413, 244,
	236, 232, 217, 269, 301, 341, 400, 335, 849, 289,
	797, 0, 391, 314, 0, 0, 0, 778, 832, 785,
	822, 773, 809, 733, 796, 844, 760, 805, 845, 275,
	216, 183, 326, 392, 248, 0, 0, 0, 0, 175,
	176, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 0, 214, 756, 0, 0, 0, 0, 0,
	802, 839, 757, 804, 228, 273, 235, 227, 410, 850,
	831, 0, 0, 199, 841, 780, 0, 807, 0, 856,
	718, 799, 0, 721, 724, 852, 835, 752, 238, 0,
	0, 0, 0, 0, 0, 0, 777, 786, 819, 771,
	0, 0, 0, 0, 0, 2090, 0, 750, 0, 795,
	0, 0, 0, 729, 722, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 775, 0, 0, 0,
	732, 0, 751, 820, 0, 716, 256, 726, 315, 0,
	824, 834, 772, 442, 838, 770, 769, 814, 730, 830,
	763, 284, 728, 281, 179, 195, 0, 761, 325, 365,
	371, 829, 747, 755, 219, 753, 369, 339, 427, 203,
	246, 362, 344, 367, 794, 812, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	423, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 1034, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 742, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 825,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 320, 266, 389, 282, 291, 817, 855, 338, 370,
	209, 429, 390, 737, 741, 735, 736, 789, 790, 738,
	846, 847, 848, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 821, 731, 0, 739, 740, 0, 827, 836,
	837, 793, 178, 192, 287, 851, 359, 249, 456, 436,
	432, 717, 734, 225, 745, 0, 0, 758, 766, 767,
	779, 781, 782, 783, 784, 311, 800, 801, 803, 811,
	813, 816, 818, 823, 833, 854, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 792, 798, 298,
	243, 261, 272, 806, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 788, 815, 294, 407, 408, 268, 840,
	826, 406, 774, 843, 744, 762, 853, 765, 768, 808,
	723, 787, 329, 759, 0, 748, 719, 754, 720, 746,
	776, 233, 743, 828, 791, 842, 285, 230, 725, 749,
	343, 764, 184, 810, 382, 218, 295, 292, 413, 244,
	236, 232, 217, 269, 301, 341, 400, 335, 849, 289,
	797, 0, 391, 314, 0, 0, 0, 778, 832, 785,
	822, 773, 809, 733, 796, 844, 760, 805, 845, 275,
	216, 183, 326, 392, 248, 0, 0, 0, 0, 175,
	176, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 0, 214, 756, 0, 0, 0, 0, 0,
	802, 839, 757, 804, 228, 273, 235, 227, 410, 850,
	831, 0, 0, 199, 841, 780, 0, 807, 0, 856,
	718, 799, 0, 721, 724, 852, 835, 752, 238, 0,
	0, 0, 0, 0, 0, 0, 777, 786, 819, 771,
	0, 0, 0, 0, 0, 2051, 0, 750, 0, 795,
	0, 0, 0, 729, 722, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 775, 0, 0, 0,
	732, 0, 751, 820, 0, 716, 256, 726, 315, 0,
	824, 834, 772, 442, 838, 770, 769, 814, 730, 830,
	763, 284, 728, 281, 179, 195, 0, 761, 325, 365,
	371, 829, 747, 755, 219, 753, 369, 339, 427, 203,
	246, 362, 344, 367, 794, 812, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	423, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 1034, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 742, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 825,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 320, 266, 389, 282, 291, 817, 855, 338, 370,
	209, 429, 390, 737, 741, 735, 736, 789, 790, 738,
	846, 847, 848, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 821, 731, 0, 739, 740, 0, 827, 836,
	837, 793, 178, 192, 287, 851, 359, 249, 456, 436,
	432, 717, 734, 225, 745, 0, 0, 758, 766, 767,
	779, 781, 782, 783, 784, 311, 800, 801, 803, 811,
	813, 816, 818, 823, 833, 854, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 792, 798, 298,
	243, 261, 272, 806, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 788, 815, 294, 407, 408, 268, 840,
	826, 406, 774, 843, 744, 762, 853, 765, 768, 808,
	723, 787, 329, 759, 0, 748, 719, 754, 720, 746,
	776, 233, 743, 828, 791, 842, 285, 230, 725, 749,
	343, 764, 184, 810, 382, 218, 295, 292, 413, 244,
	236, 232, 217, 269, 301, 341, 400, 335, 849, 289,
	797, 0, 391, 314, 0, 0, 0, 778, 832, 785,
	822, 773, 809, 733, 796, 844, 760, 805, 845, 275,
	216, 183, 326, 392, 248, 0, 0, 0, 0, 175,
	176, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 0, 214, 756, 0, 0, 0, 0, 0,
	802, 839, 757, 804, 228, 273, 235, 227, 410, 850,
	831, 0, 0, 199, 841, 780, 0, 807, 0, 856,
	718, 799, 0, 721, 724, 852, 835, 752, 238, 0,
	0, 0, 0, 0, 0, 0, 777, 786, 819, 771,
	0, 0, 0, 0, 0, 1606, 0, 750, 0, 795,
	0, 0, 0, 729, 722, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 775, 0, 0, 0,
	732, 0, 751, 820, 0, 716, 256, 726, 315, 0,
	824, 834, 772, 442, 838, 770, 769, 814, 730, 830,
	763, 284, 728, 281, 179, 195, 0, 761, 325, 365,
	371, 829, 747, 755, 219, 753, 369, 339, 427, 203,
	246, 362, 344, 367, 794, 812, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	423, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 1034, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 742, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 825,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 320, 266, 389, 282, 291, 817, 855, 338, 370,
	209, 429, 390, 737, 741, 735, 736, 789, 790, 738,
	846, 847, 848, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 821, 731, 0, 739, 740, 0, 827, 836,
	837, 793, 178, 192, 287, 851, 359, 249, 456, 436,
	432, 717, 734, 225, 745, 0, 0, 758, 766, 767,
	779, 781, 782, 783, 784, 311, 800, 801, 803, 811,
	813, 816, 818, 823, 833, 854, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 792, 798, 298,
	243, 261, 272, 806, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 788, 815, 294, 407, 408, 268, 840,
	826, 406, 774, 843, 744, 762, 853, 765, 768, 808,
	723, 787, 329, 759, 0, 748, 719, 754, 720, 746,
	776, 233, 743, 828, 791, 842, 285, 230, 725, 749,
	343, 764, 184, 810, 382, 218, 295, 292, 413, 244,
	236, 232, 217, 269, 301, 341, 400, 335, 849, 289,
	797, 0, 391, 314, 0, 0, 0, 778, 832, 785,
	822, 773, 809, 733, 796, 844, 760, 805, 845, 275,
	216, 183, 326, 392, 248, 0, 79, 0, 0, 175,
	176, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 0, 214, 756, 0, 0, 0, 0, 0,
	802, 839, 757, 804, 228, 273, 235, 227, 410, 850,
	831, 0, 0, 199, 841, 780, 0, 807, 0, 856,
	718, 799, 0, 721, 724, 852, 835, 752, 238, 0,
	0, 0, 0, 0, 0, 0, 777, 786, 819, 771,
	0, 0, 0, 0, 0, 0, 0, 750, 0, 795,
	0, 0, 0, 729, 722, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 775, 0, 0, 0,
	732, 0, 751, 820, 0, 716, 256, 726, 315, 0,
	824, 834, 772, 442, 838, 770, 769, 814, 730, 830,
	763, 284, 728, 281, 179, 195, 0, 761, 325, 365,
	371, 829, 747, 755, 219, 753, 369, 339, 427, 203,
	246, 362, 344, 367, 794, 812, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	423, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 1034, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 742, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 825,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 320, 266, 389, 282, 291, 817, 855, 338, 370,
	209, 429, 390, 737, 741, 735, 736, 789, 790, 738,
	846, 847, 848, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 821, 731, 0, 739, 740, 0, 827, 836,
	837, 793, 178, 192, 287, 851, 359, 249, 456, 436,
	432, 717, 734, 225, 745, 0, 0, 758, 766, 767,
	779, 781, 782, 783, 784, 311, 800, 801, 803, 811,
	813, 816, 818, 823, 833, 854, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 792, 798, 298,
	243, 261, 272, 806, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 788, 815, 294, 407, 408, 268, 840,
	826, 406, 774, 843, 744, 762, 853, 765, 768, 808,
	723, 787, 329, 759, 0, 748, 719, 754, 720, 746,
	776, 233, 743, 828, 791, 842, 285, 230, 725, 749,
	343, 764, 184, 810, 382, 218, 295, 292, 413, 244,
	236, 232, 217, 269, 301, 341, 400, 335, 849, 289,
	797, 0, 391, 314, 0, 0, 0, 778, 832, 785,
	822, 773, 809, 733, 796, 844, 760, 805, 845, 275,
	216, 183, 326, 392, 248, 0, 0, 0, 0, 175,
	176, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 0, 214, 756, 0, 0, 0, 0, 0,
	802, 839, 757, 804, 228, 273, 235, 227, 410, 850,
	831, 0, 0, 199, 841, 780, 0, 807, 0, 856,
	718, 799, 0, 721, 724, 852, 835, 752, 238, 0,
	0, 0, 0, 0, 0, 0, 777, 786, 819, 771,
	0, 0, 0, 0, 0, 0, 0, 750, 0, 795,
	0, 0, 0, 729, 722, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 775, 0, 0, 0,
	732, 0, 751, 820, 0, 716, 256, 726, 315, 0,
	824, 834, 772, 442, 838, 770, 769, 814, 730, 830,
	763, 284, 728, 281, 179, 195, 0, 761, 325, 365,
	371, 829, 747, 755, 219, 753, 369, 339, 427, 203,
	246, 362, 344, 367, 794, 812, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	423, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 1034, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 742, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 825,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 320, 266, 389, 282, 291, 817, 855, 338, 370,
	209, 429, 390, 737, 741, 735, 736, 789, 790, 738,
	846, 847, 848, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 821, 731, 0, 739, 740, 0, 827, 836,
	837, 793, 178, 192, 287, 851, 359, 249, 456, 436,
	432, 717, 734, 225, 745, 0, 0, 758, 766, 767,
	779, 781, 782, 783, 784, 311, 800, 801, 803, 811,
	813, 816, 818, 823, 833, 854, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 792, 798, 298,
	243, 261, 272, 806, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 788, 815, 294, 407, 408, 268, 840,
	826, 406, 774, 843, 744, 762, 853, 765, 768, 808,
	723, 787, 329, 759, 0, 748, 719, 754, 720, 746,
	776, 233, 743, 828, 791, 842, 285, 230, 725, 749,
	343, 764, 184, 810, 382, 218, 295, 292, 413, 244,
	236, 232, 217, 269, 301, 341, 400, 335, 849, 289,
	797, 0, 391, 314, 0, 0, 0, 778, 832, 785,
	822, 773, 809, 733, 796, 844, 760, 805, 845, 275,
	216, 183, 326, 392, 248, 0, 0, 0, 0, 175,
	176, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 0, 214, 756, 0, 0, 0, 0, 0,
	802, 839, 757, 804, 228, 273, 235, 227, 410, 850,
	831, 0, 0, 857, 841, 780, 0, 807, 0, 856,
	718, 799, 0, 721, 724, 852, 835, 752, 238, 0,
	0, 0, 0, 0, 0, 0, 777, 786, 819, 771,
	0, 0, 0, 0, 0, 0, 0, 750, 0, 795,
	0, 0, 0, 729, 722, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 775, 0, 0, 0,
	732, 0, 751, 820, 0, 716, 256, 726, 315, 0,
	824, 834, 772, 442, 838, 770, 769, 814, 730, 830,
	763, 284, 728, 281, 179, 195, 0, 761, 325, 365,
	371, 829, 747, 755, 219, 753, 369, 339, 427, 203,
	246, 362, 344, 367, 794, 812, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	423, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 727, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 742, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 825,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 715, 709, 708, 282, 291, 817, 855, 338, 370,
	209, 429, 390, 737, 741, 735, 736, 789, 790, 738,
	846, 847, 848, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 821, 731, 0, 739, 740, 0, 827, 836,
	837, 793, 178, 192, 287, 851, 359, 249, 456, 436,
	432, 717, 734, 225, 745, 0, 0, 758, 766, 767,
	779, 781, 782, 783, 784, 311, 800, 801, 803, 811,
	813, 816, 818, 823, 833, 854, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 792, 798, 298,
	243, 261, 272, 806, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 788, 815, 294, 407, 408, 268, 840,
	826, 406, 774, 843, 744, 762, 853, 765, 768, 808,
	723, 787, 329, 759, 0, 748, 719, 754, 720, 746,
	776, 233, 743, 828, 791, 842, 285, 230, 725, 749,
	343, 764, 184, 810, 382, 218, 295, 292, 413, 244,
	236, 232, 217, 269, 301, 341, 400, 335, 849, 289,
	797, 0, 391, 314, 0, 0, 0, 778, 832, 785,
	822, 773, 809, 733, 796, 844, 760, 805, 845, 275,
	216, 183, 326, 392, 248, 0, 0, 0, 0, 175,
	176, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 0, 214, 756, 0, 0, 0, 0, 0,
	802, 839, 757, 804, 228, 273, 235, 227, 410, 850,
	831, 0, 0, 857, 841, 780, 0, 807, 0, 856,
	718, 799, 0, 721, 724, 852, 835, 752, 238, 0,
	0, 0, 0, 0, 0, 0, 777, 786, 819, 771,
	0, 0, 0, 0, 0, 0, 0, 750, 0, 795,
	0, 0, 0, 729, 722, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 775, 0, 0, 0,
	732, 0, 751, 820, 0, 716, 256, 726, 315, 0,
	824, 834, 772, 442, 838, 770, 769, 814, 730, 830,
	763, 284, 728, 281, 179, 195, 0, 761, 325, 365,
	371, 829, 747, 755, 219, 753, 369, 339, 427, 203,
	246, 362, 344, 367, 794, 812, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	1209, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 727, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 742, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 825,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 715, 709, 708, 282, 291, 817, 855, 338, 370,
	209, 429, 390, 737, 741, 735, 736, 789, 790, 738,
	846, 847, 848, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 821, 731, 0, 739, 740, 0, 827, 836,
	837, 793, 178, 192, 287, 851, 359, 249, 456, 436,
	432, 717, 734, 225, 745, 0, 0, 758, 766, 767,
	779, 781, 782, 783, 784, 311, 800, 801, 803, 811,
	813, 816, 818, 823, 833, 854, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 792, 798, 298,
	243, 261, 272, 806, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 788, 815, 294, 407, 408, 268, 840,
	826, 406, 774, 843, 744, 762, 853, 765, 768, 808,
	723, 787, 329, 759, 0, 748, 719, 754, 720, 746,
	776, 233, 743, 828, 791, 842, 285, 230, 725, 749,
	343, 764, 184, 810, 382, 218, 295, 292, 413, 244,
	236, 232, 217, 269, 301, 341, 400, 335, 849, 289,
	797, 0, 391, 314, 0, 0, 0, 778, 832, 785,
	822, 773, 809, 733, 796, 844, 760, 805, 845, 275,
	216, 183, 326, 392, 248, 0, 0, 0, 0, 175,
	176, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 0, 214, 756, 0, 0, 0, 0, 0,
	802, 839, 757, 804, 228, 273, 235, 227, 410, 850,
	831, 0, 0, 857, 841, 780, 0, 807, 0, 856,
	718, 799, 0, 721, 724, 852, 835, 752, 238, 0,
	0, 0, 0, 0, 0, 0, 777, 786, 819, 771,
	0, 0, 0, 0, 0, 0, 0, 750, 0, 795,
	0, 0, 0, 729, 722, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 775, 0, 0, 0,
	732, 0, 751, 820, 0, 716, 256, 726, 315, 0,
	824, 834, 772, 442, 838, 770, 769, 814, 730, 830,
	763, 284, 728, 281, 179, 195, 0, 761, 325, 365,
	371, 829, 747, 755, 219, 753, 369, 339, 427, 203,
	246, 362, 344, 367, 794, 812, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	706, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 727, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 742, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 825,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 715, 709, 708, 282, 291, 817, 855, 338, 370,
	209, 429, 390, 737, 741, 735, 736, 789, 790, 738,
	846, 847, 848, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 821, 731, 0, 739, 740, 0, 827, 836,
	837, 793, 178, 192, 287, 851, 359, 249, 456, 436,
	432, 717, 734, 225, 745, 0, 0, 758, 766, 767,
	779, 781, 782, 783, 784, 311, 800, 801, 803, 811,
	813, 816, 818, 823, 833, 854, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 792, 798, 298,
	243, 261, 272, 806, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 788, 815, 294, 407, 408, 268, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 0, 1556, 0, 558, 0, 0, 0, 233,
	563, 0, 0, 0, 285, 230, 0, 1557, 343, 0,
	184, 0, 382, 218, 295, 292, 413, 244, 236, 232,
	217, 269, 301, 341, 400, 335, 570, 289, 0, 0,
	391, 314, 0, 0, 0, 0, 0, 565, 566, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 216, 183,
	326, 392, 248, 0, 79, 0, 0, 175, 176, 177,
	606, 613, 614, 615, 616, 607, 609, 0, 0, 207,
	608, 214, 579, 580, 581, 598, 600, 599, 611, 617,
	618, 0, 228, 273, 235, 227, 410, 0, 0, 0,
	0, 199, 0, 0, 0, 0, 0, 0, 0, 541,
	555, 0, 569, 0, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 552, 553, 696, 0, 0, 0, 588, 0, 554,
	0, 0, 562, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 564, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 315, 0, 587, 0,
	0, 442, 0, 0, 585, 0, 0, 0, 0, 284,
	0, 281, 179, 195, 0, 0, 325, 365, 371, 0,
	0, 0, 219, 0, 369, 339, 427, 203, 246, 362,
	344, 367, 0, 0, 368, 290, 415, 357, 425, 443,
	444, 226, 319, 433, 404, 439, 455, 196, 223, 333,
	397, 430, 388, 312, 411, 412, 280, 387, 254, 182,
	288, 449, 194, 377, 211, 201, 187, 399, 423, 208,
	380, 0, 0, 457, 189, 421, 396, 308, 277, 278,
	188, 0, 361, 231, 252, 221, 328, 418, 419, 220,
	458, 198, 438, 191, 0, 437, 321, 414, 422, 309,
	300, 190, 420, 307, 299, 283, 242, 263, 355, 293,
	356, 264, 317, 316, 318, 0, 185, 0, 393, 431,
	459, 204, 205, 206, 0, 241, 245, 251, 253, 259,
	260, 267, 286, 332, 354, 352, 358, 0, 409, 426,
	434, 441, 447, 448, 450, 451, 452, 453, 454, 320,
	266, 389, 282, 291, 0, 0, 338, 370, 209, 429,
	390, 594, 586, 574, 576, 595, 596, 571, 572, 575,
	597, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 0,
	589, 561, 560, 0, 567, 568, 0, 577, 578, 559,
	178, 192, 287, 0, 359, 249, 456, 436, 432, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 181, 193, 202, 212, 224,
	239, 247, 257, 262, 265, 270, 271, 274, 279, 297,
	302, 303, 304, 305, 322, 323, 324, 327, 330, 331,
	334, 336, 337, 340, 347, 348, 349, 350, 351, 353,
	360, 364, 372, 373, 374, 375, 376, 378, 379, 383,
	384, 385, 386, 394, 398, 416, 417, 428, 440, 445,
	258, 424, 446, 0, 296, 0, 0, 298, 243, 261,
	272, 0, 435, 395, 197, 366, 250, 186, 215, 200,
	222, 237, 240, 276, 306, 313, 342, 346, 255, 234,
	213, 363, 210, 381, 401, 402, 403, 405, 310, 229,
	345, 406, 0, 294, 407, 408, 268, 0, 0, 0,
	0, 0, 329, 0, 0, 0, 0, 558, 0, 0,
	0, 233, 563, 0, 0, 0, 285, 230, 0, 0,
	343, 0, 184, 0, 382, 218, 295, 292, 413, 244,
	236, 232, 217, 269, 301, 341, 400, 335, 570, 289,
	0, 0, 391, 314, 0, 0, 0, 0, 0, 565,
	566, 0, 0, 0, 0, 0, 0, 1631, 0, 275,
	216, 183, 326, 392, 248, 0, 79, 0, 0, 175,
	176, 177, 606, 613, 614, 615, 616, 607, 609, 0,
	0, 207, 608, 214, 579, 580, 581, 598, 600, 599,
	611, 617, 618, 1632, 228, 273, 235, 227, 410, 0,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 0,
	0, 541, 555, 0, 569, 0, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 552, 553, 0, 0, 0, 0, 588,
	0, 554, 0, 0, 562, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 564, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 315, 0,
	587, 0, 0, 442, 0, 0, 585, 0, 0, 0,
	0, 284, 0, 281, 179, 195, 0, 0, 325, 365,
	371, 0, 0, 0, 219, 0, 369, 339, 427, 203,
	246, 362, 344, 367, 0, 0, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	423, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 0, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 0, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 0,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 320, 266, 389, 282, 291, 0, 0, 338, 370,
	209, 429, 390, 594, 586, 574, 576, 595, 596, 571,
	572, 575, 597, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 589, 561, 560, 0, 567, 568, 0, 577,
	578, 559, 178, 192, 287, 0, 359, 249, 456, 436,
	432, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 0, 0, 298,
	243, 261, 272, 0, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 70, 406, 294, 407, 408, 268, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	558, 0, 0, 0, 233, 563, 0, 0, 0, 285,
	230, 0, 0, 343, 0, 184, 0, 382, 218, 295,
	292, 413, 244, 236, 232, 217, 269, 301, 341, 400,
	335, 570, 289, 0, 0, 391, 314, 0, 0, 0,
	0, 0, 565, 566, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 216, 183, 326, 392, 248, 0, 79,
	0, 0, 175, 176, 177, 606, 613, 614, 615, 616,
	607, 609, 0, 0, 207, 608, 214, 579, 580, 581,
	598, 600, 599, 611, 617, 618, 0, 228, 273, 235,
	227, 410, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 0, 541, 555, 0, 569, 0, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 552, 553, 0, 0,
	0, 0, 588, 0, 554, 0, 0, 562, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 564,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 315, 0, 587, 0, 0, 442, 0, 0, 585,
	0, 0, 0, 0, 284, 0, 281, 179, 195, 0,
	0, 325, 365, 371, 0, 0, 0, 219, 0, 369,
	339, 427, 203, 246, 362, 344, 367, 0, 0, 368,
	290, 415, 357, 425, 443, 444, 226, 319, 433, 404,
	439, 455, 196, 223, 333, 397, 430, 388, 312, 411,
	412, 280, 387, 254, 182, 288, 449, 194, 377, 211,
	201, 187, 399, 423, 208, 380, 0, 0, 457, 189,
	421, 396, 308, 277, 278, 188, 0, 361, 231, 252,
	221, 328, 418, 419, 220, 458, 198, 438, 191, 0,
	437, 321, 414, 422, 309, 300, 190, 420, 307, 299,
	283, 242, 263, 355, 293, 356, 264, 317, 316, 318,
	0, 185, 0, 393, 431, 459, 204, 205, 206, 0,
	241, 245, 251, 253, 259, 260, 267, 286, 332, 354,
	352, 358, 0, 409, 426, 434, 441, 447, 448, 450,
	451, 452, 453, 454, 320, 266, 389, 282, 291, 0,
	0, 338, 370, 209, 429, 390, 594, 586, 574, 576,
	595, 596, 571, 572, 575, 597, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 589, 561, 560, 0, 567,
	568, 0, 577, 578, 559, 178, 192, 287, 78, 359,
	249, 456, 436, 432, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	181, 193, 202, 212, 224, 239, 247, 257, 262, 265,
	270, 271, 274, 279, 297, 302, 303, 304, 305, 322,
	323, 324, 327, 330, 331, 334, 336, 337, 340, 347,
	348, 349, 350, 351, 353, 360, 364, 372, 373, 374,
	375, 376, 378, 379, 383, 384, 385, 386, 394, 398,
	416, 417, 428, 440, 445, 258, 424, 446, 0, 296,
	0, 0, 298, 243, 261, 272, 0, 435, 395, 197,
	366, 250, 186, 215, 200, 222, 237, 240, 276, 306,
	313, 342, 346, 255, 234, 213, 363, 210, 381, 401,
	402, 403, 405, 310, 229, 345, 406, 0, 294, 407,
	408, 268, 0, 0, 0, 0, 0, 329, 0, 0,
	0, 0, 558, 0, 0, 0, 233, 563, 0, 0,
	0, 285, 230, 0, 0, 343, 0, 184, 0, 382,
	218, 295, 292, 413, 244, 236, 232, 217, 269, 301,
	341, 400, 335, 570, 289, 0, 0, 391, 314, 0,
	0, 0, 0, 0, 565, 566, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 216, 183, 326, 392, 248,
	0, 79, 0, 0, 175, 176, 177, 606, 613, 614,
	615, 616, 607, 609, 0, 0, 207, 608, 214, 579,
	580, 581, 598, 600, 599, 611, 617, 618, 0, 228,
	273, 235, 227, 410, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 541, 555, 0, 569,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 552, 553,
	0, 0, 0, 0, 588, 0, 554, 0, 0, 562,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 564, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 315, 0, 587, 0, 0, 442, 0,
	0, 585, 0, 0, 0, 0, 284, 0, 281, 179,
	195, 0, 0, 325, 365, 371, 0, 0, 0, 219,
	0, 369, 339, 427, 203, 246, 362, 344, 367, 2439,
	0, 368, 290, 415, 357, 425, 443, 444, 226, 319,
	433, 404, 439, 455, 196, 223, 333, 397, 430, 388,
	312, 411, 412, 280, 387, 254, 182, 288, 449, 194,
	377, 211, 201, 187, 399, 423, 208, 380, 0, 0,
	457, 189, 421, 396, 308, 277, 278, 188, 0, 361,
	231, 252, 221, 328, 418, 419, 220, 458, 198, 438,
	191, 0, 437, 321, 414, 422, 309, 300, 190, 420,
	307, 299, 283, 242, 263, 355, 293, 356, 264, 317,
	316, 318, 0, 185, 0, 393, 431, 459, 204, 205,
	206, 0, 241, 245, 251, 253, 259, 260, 267, 286,
	332, 354, 352, 358, 0, 409, 426, 434, 441, 447,
	448, 450, 451, 452, 453, 454, 320, 266, 389, 282,
	291, 0, 0, 338, 370, 209, 429, 390, 594, 586,
	574, 576, 595, 596, 571, 572, 575, 597, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 589, 561, 560,
	0, 567, 568, 0, 577, 578, 559, 178, 192, 287,
	0, 359, 249, 456, 436, 432, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 181, 193, 202, 212, 224, 239, 247, 257,
	262, 265, 270, 271, 274, 279, 297, 302, 303, 304,
	305, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 347, 348, 349, 350, 351, 353, 360, 364, 372,
	373, 374, 375, 376, 378, 379, 383, 384, 385, 386,
	394, 398, 416, 417, 428, 440, 445, 258, 424, 446,
	0, 296, 0, 0, 298, 243, 261, 272, 0, 435,
	395, 197, 366, 250, 186, 215, 200, 222, 237, 240,
	276, 306, 313, 342, 346, 255, 234, 213, 363, 210,
	381, 401, 402, 403, 405, 310, 229, 345, 406, 0,
	294, 407, 408, 268, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 558, 0, 0, 0, 233, 563,
	0, 0, 0, 285, 230, 0, 0, 343, 0, 184,
	0, 382, 218, 295, 292, 413, 244, 236, 232, 217,
	269, 301, 341, 400, 335, 570, 289, 0, 0, 391,
	314, 0, 0, 0, 0, 0, 565, 566, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 216, 183, 326,
	392, 248, 0, 79, 0, 1178, 175, 176, 177, 606,
	613, 614, 615, 616, 607, 609, 0, 0, 207, 608,
	214, 579, 580, 581, 598, 600, 599, 611, 617, 618,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 541, 555,
	0, 569, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	552, 553, 0, 0, 0, 0, 588, 0, 554, 0,
	0, 562, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 564, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 315, 0, 587, 0, 0,
	442, 0, 0, 585, 0, 0, 0, 0, 284, 0,
	281, 179, 195, 0, 0, 325, 365, 371, 0, 0,
	0, 219, 0, 369, 339, 427, 203, 246, 362, 344,
	367, 0, 0, 368, 290, 415, 357, 425, 443, 444,
	226, 319, 433, 404, 439, 455, 196, 223, 333, 397,
	430, 388, 312, 411, 412, 280, 387, 254, 182, 288,
	449, 194, 377, 211, 201, 187, 399, 423, 208, 380,
	0, 0, 457, 189, 421, 396, 308, 277, 278, 188,
	0, 361, 231, 252, 221, 328, 418, 419, 220, 458,
	198, 438, 191, 0, 437, 321, 414, 422, 309, 300,
	190, 420, 307, 299, 283, 242, 263, 355, 293, 356,
	264, 317, 316, 318, 0, 185, 0, 393, 431, 459,
	204, 205, 206, 0, 241, 245, 251, 253, 259, 260,
	267, 286, 332, 354, 352, 358, 0, 409, 426, 434,
	441, 447, 448, 450, 451, 452, 453, 454, 320, 266,
	389, 282, 291, 0, 0, 338, 370, 209, 429, 390,
	594, 586, 574, 576, 595, 596, 571, 572, 575, 597,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 589,
	561, 560, 0, 567, 568, 0, 577, 578, 559, 178,
	192, 287, 0, 359, 249, 456, 436, 432, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 270, 271, 274, 279, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 378, 379, 383, 384,
	385, 386, 394, 398, 416, 417, 428, 440, 445, 258,
	424, 446, 0, 296, 0, 0, 298, 243, 261, 272,
	0, 435, 395, 197, 366, 250, 186, 215, 200, 222,
	237, 240, 276, 306, 313, 342, 346, 255, 234, 213,
	363, 210, 381, 401, 402, 403, 405, 310, 229, 345,
	406, 0, 294, 407, 408, 268, 0, 0, 0, 0,
	0, 329, 0, 0, 0, 0, 558, 0, 0, 0,
	233, 563, 0, 0, 0, 285, 230, 0, 0, 343,
	0, 184, 0, 382, 218, 295, 292, 413, 244, 236,
	232, 217, 269, 301, 341, 400, 335, 570, 289, 0,
	0, 391, 314, 0, 0, 0, 0, 0, 565, 566,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 216,
	183, 326, 392, 248, 0, 79, 0, 0, 175, 176,
	177, 606, 613, 614, 615, 616, 607, 609, 0, 0,
	207, 608, 214, 579, 580, 581, 598, 600, 599, 611,
	617, 618, 0, 228, 273, 235, 227, 410, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	541, 555, 0, 569, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 552, 553, 696, 0, 0, 0, 588, 0,
	554, 0, 0, 562, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 564, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 315, 0, 587,
	0, 0, 442, 0, 0, 585, 0, 0, 0, 0,
	284, 0, 281, 179, 195, 0, 0, 325, 365, 371,
	0, 0, 0, 219, 0, 369, 339, 427, 203, 246,
	362, 344, 367, 0, 0, 368, 290, 415, 357, 425,
	443, 444, 226, 319, 433, 404, 439, 455, 196, 223,
	333, 397, 430, 388, 312, 411, 412, 280, 387, 254,
	182, 288, 449, 194, 377, 211, 201, 187, 399, 423,
	208, 380, 0, 0, 457, 189, 421, 396, 308, 277,
	278, 188, 0, 361, 231, 252, 221, 328, 418, 419,
	220, 458, 198, 438, 191, 0, 437, 321, 414, 422,
	309, 300, 190, 420, 307, 299, 283, 242, 263, 355,
	293, 356, 264, 317, 316, 318, 0, 185, 0, 393,
	431, 459, 204, 205, 206, 0, 241, 245, 251, 253,
	259, 260, 267, 286, 332, 354, 352, 358, 0, 409,
	426, 434, 441, 447, 448, 450, 451, 452, 453, 454,
	320, 266, 389, 282, 291, 0, 0, 338, 370, 209,
	429, 390, 594, 586, 574, 576, 595, 596, 571, 572,
	575, 597, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 589, 561, 560, 0, 567, 568, 0, 577, 578,
	559, 178, 192, 287, 0, 359, 249, 456, 436, 432,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 181, 193, 202, 212,
	224, 239, 247, 257, 262, 265, 270, 271, 274, 279,
	297, 302, 303, 304, 305, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 347, 348, 349, 350, 351,
	353, 360, 364, 372, 373, 374, 375, 376, 378, 379,
	383, 384, 385, 386, 394, 398, 416, 417, 428, 440,
	445, 258, 424, 446, 0, 296, 0, 0, 298, 243,
	261, 272, 0, 435, 395, 197, 366, 250, 186, 215,
	200, 222, 237, 240, 276, 306, 313, 342, 346, 255,
	234, 213, 363, 210, 381, 401, 402, 403, 405, 310,
	229, 345, 406, 0, 294, 407, 408, 268, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 558, 0,
	0, 0, 233, 563, 0, 0, 0, 285, 230, 0,
	0, 343, 0, 184, 0, 382, 218, 295, 292, 413,
	244, 236, 232, 217, 269, 301, 341, 400, 335, 570,
	289, 0, 0, 391, 314, 0, 0, 0, 0, 0,
	565, 566, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 216, 183, 326, 392, 248, 0, 79, 0, 0,
	175, 176, 177, 606, 613, 614, 615, 616, 607, 609,
	0, 0, 207, 608, 214, 579, 580, 581, 598, 600,
	599, 611, 617, 618, 0, 228, 273, 235, 227, 410,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 541, 555, 0, 569, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 552, 553, 0, 0, 0, 0,
	588, 0, 554, 0, 0, 562, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 564, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 315,
	0, 587, 0, 0, 442, 0, 0, 585, 0, 0,
	0, 0, 284, 0, 281, 179, 195, 0, 0, 325,
	365, 371, 0, 0, 0, 219, 0, 369, 339, 427,
	203, 246, 362, 344, 367, 0, 0, 368, 290, 415,
	357, 425, 443, 444, 226, 319, 433, 404, 439, 455,
	196, 223, 333, 397, 430, 388, 312, 411, 412, 280,
	387, 254, 182, 288, 449, 194, 377, 211, 201, 187,
	399, 423, 208, 380, 0, 0, 457, 189, 421, 396,
	308, 277, 278, 188, 0, 361, 231, 252, 221, 328,
	418, 419, 220, 458, 198, 438, 191, 0, 437, 321,
	414, 422, 309, 300, 190, 420, 307, 299, 283, 242,
	263, 355, 293, 356, 264, 317, 316, 318, 0, 185,
	0, 393, 431, 459, 204, 205, 206, 0, 241, 245,
	251, 253, 259, 260, 267, 286, 332, 354, 352, 358,
	0, 409, 426, 434, 441, 447, 448, 450, 451, 452,
	453, 454, 320, 266, 389, 282, 291, 0, 0, 338,
	370, 209, 429, 390, 594, 586, 574, 576, 595, 596,
	571, 572, 575, 597, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 589, 561, 560, 0, 567, 568, 0,
	577, 578, 559, 178, 192, 287, 0, 359, 249, 456,
	436, 432, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 181, 193,
	202, 212, 224, 239, 247, 257, 262, 265, 270, 271,
	274, 279, 297, 302, 303, 304, 305, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 347, 348, 349,
	350, 351, 353, 360, 364, 372, 373, 374, 375, 376,
	378, 379, 383, 384, 385, 386, 394, 398, 416, 417,
	428, 440, 445, 258, 424, 446, 0, 296, 0, 0,
	298, 243, 261, 272, 0, 435, 395, 197, 366, 250,
	186, 215, 200, 222, 237, 240, 276, 306, 313, 342,
	346, 255, 234, 213, 363, 210, 381, 401, 402, 403,
	405, 310, 229, 345, 406, 0, 294, 407, 408, 268,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	558, 0, 0, 0, 233, 563, 0, 0, 0, 285,
	230, 0, 0, 343, 0, 184, 0, 382, 218, 295,
	292, 413, 244, 236, 232, 217, 269, 301, 341, 400,
	335, 570, 289, 0, 0, 391, 314, 0, 0, 0,
	0, 0, 565, 566, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 216, 183, 326, 392, 248, 0, 79,
	0, 0, 175, 176, 177, 606, 613, 614, 615, 616,
	607, 609, 0, 0, 207, 608, 214, 579, 580, 581,
	598, 600, 599, 611, 617, 618, 0, 228, 273, 235,
	227, 410, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 0, 0, 555, 0, 569, 0, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 552, 553, 0, 0,
	0, 0, 588, 0, 554, 0, 0, 562, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 564,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 315, 0, 587, 0, 0, 442, 0, 0, 585,
	0, 0, 0, 0, 284, 0, 281, 179, 195, 0,
	0, 325, 365, 371, 0, 0, 0, 219, 0, 369,
	339, 427, 203, 246, 362, 344, 367, 0, 0, 368,
	290, 415, 357, 425, 443, 444, 226, 319, 433, 404,
	439, 455, 196, 223, 333, 397, 430, 388, 312, 411,
	412, 280, 387, 254, 182, 288, 449, 194, 377, 211,
	201, 187, 399, 423, 208, 380, 0, 0, 457, 189,
	421, 396, 308, 277, 278, 188, 0, 361, 231, 252,
	221, 328, 418, 419, 220, 458, 198, 438, 191, 0,
	437, 321, 414, 422, 309, 300, 190, 420, 307, 299,
	283, 242, 263, 355, 293, 356, 264, 317, 316, 318,
	0, 185, 0, 393, 431, 459, 204, 205, 206, 0,
	241, 245, 251, 253, 259, 260, 267, 286, 332, 354,
	352, 358, 0, 409, 426, 434, 441, 447, 448, 450,
	451, 452, 453, 454, 320, 266, 389, 282, 291, 0,
	0, 338, 370, 209, 429, 390, 594, 586, 574, 576,
	595, 596, 571, 572, 575, 597, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 589, 561, 560, 0, 567,
	568, 0, 577, 578, 559, 178, 192, 287, 0, 359,
	249, 456, 436, 432, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	181, 193, 202, 212, 224, 239, 247, 257, 262, 265,
	270, 271, 274, 279, 297, 302, 303, 304, 305, 322,
	323, 324, 327, 330, 331, 334, 336, 337, 340, 347,
	348, 349, 350, 351, 353, 360, 364, 372, 373, 374,
	375, 376, 378, 379, 383, 384, 385, 386, 394, 398,
	416, 417, 428, 440, 445, 258, 424, 446, 0, 296,
	0, 0, 298, 243, 261, 272, 0, 435, 395, 197,
	366, 250, 186, 215, 200, 222, 237, 240, 276, 306,
	313, 342, 346, 255, 234, 213, 363, 210, 381, 401,
	402, 403, 405, 310, 229, 345, 406, 0, 294, 407,
	408, 268, 0, 0, 0, 0, 0, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 285, 230, 0, 0, 343, 0, 184, 0, 382,
	218, 295, 292, 413, 244, 236, 232, 217, 269, 301,
	341, 400, 335, 0, 289, 0, 0, 391, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 216, 183, 326, 392, 248,
	0, 0, 0, 0, 175, 176, 177, 0, 613, 614,
	0, 0, 0, 0, 0, 0, 207, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	273, 235, 227, 410, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 315, 0, 0, 0, 0, 442, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 281, 179,
	195, 0, 0, 325, 365, 371, 0, 0, 0, 219,
	0, 369, 339, 427, 203, 246, 362, 344, 367, 0,
	0, 368, 290, 415, 357, 425, 443, 444, 226, 319,
	433, 404, 439, 455, 196, 223, 333, 397, 430, 388,
	312, 411, 412, 280, 387, 254, 182, 288, 449, 194,
	377, 211, 201, 187, 399, 423, 208, 380, 0, 0,
	457, 189, 421, 396, 308, 277, 278, 188, 0, 361,
	231, 252, 221, 328, 418, 419, 220, 458, 198, 438,
	191, 0, 437, 321, 414, 422, 309, 300, 190, 420,
	307, 299, 283, 242, 263, 355, 293, 356, 264, 317,
	316, 318, 0, 185, 0, 393, 431, 459, 204, 205,
	206, 0, 241, 245, 251, 253, 259, 260, 267, 286,
	332, 354, 352, 358, 0, 409, 426, 434, 441, 447,
	448, 450, 451, 452, 453, 454, 320, 266, 389, 282,
	291, 0, 0, 338, 370, 209, 429, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 192, 287,
	0, 359, 249, 456, 436, 432, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 181, 193, 202, 212, 224, 239, 247, 257,
	262, 265, 270, 271, 274, 279, 297, 302, 303, 304,
	305, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 347, 348, 349, 350, 351, 353, 360, 364, 372,
	373, 374, 375, 376, 378, 379, 383, 384, 385, 386,
	394, 398, 416, 417, 428, 440, 445, 258, 424, 446,
	0, 296, 0, 0, 298, 243, 261, 272, 0, 435,
	395, 197, 366, 250, 186, 215, 200, 222, 237, 240,
	276, 306, 313, 342, 346, 255, 234, 213, 363, 210,
	381, 401, 402, 403, 405, 310, 229, 345, 406, 0,
	294, 407, 408, 268, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 0, 0, 285, 230, 0, 0, 343, 0, 184,
	0, 382, 218, 295, 292, 413, 244, 236, 232, 217,
	269, 301, 341, 400, 335, 0, 289, 0, 79, 391,
	314, 0, 0, 0, 606, 613, 614, 615, 616, 607,
	609, 0, 0, 0, 608, 0, 275, 216, 183, 326,
	392, 248, 611, 617, 618, 0, 175, 176, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 903, 0, 0, 2104, 2105, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 315, 0, 0, 0, 902,
	442, 0, 0, 0, 0, 0, 899, 900, 284, 865,
	281, 179, 195, 893, 897, 325, 365, 371, 0, 0,
	0, 219, 0, 369, 339, 427, 203, 246, 362, 344,
	367, 0, 0, 368, 290, 415, 357, 425, 443, 444,
	226, 319, 433, 404, 439, 455, 196, 223, 333, 397,
	430, 388, 312, 411, 412, 280, 387, 254, 182, 288,
	449, 194, 377, 211, 201, 187, 399, 423, 208, 380,
	0, 0, 457, 189, 421, 396, 308, 277, 278, 188,
	0, 361, 231, 252, 221, 328, 418, 419, 220, 458,
	198, 438, 191, 0, 437, 321, 414, 422, 309, 300,
	190, 420, 307, 299, 283, 242, 263, 355, 293, 356,
	264, 317, 316, 318, 0, 185, 0, 393, 431, 459,
	204, 205, 206, 0, 241, 245, 251, 253, 259, 260,
	267, 286, 332, 354, 352, 358, 0, 409, 426, 434,
	441, 447, 448, 450, 451, 452, 453, 454, 320, 266,
	389, 282, 291, 0, 0, 338, 370, 209, 429, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	192, 287, 0, 359, 249, 456, 436, 432, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 270, 271, 274, 279, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 378, 379, 383, 384,
	385, 386, 394, 398, 416, 417, 428, 440, 445, 258,
	424, 446, 0, 296, 0, 0, 298, 243, 261, 272,
	0, 435, 395, 197, 366, 250, 186, 215, 200, 222,
	237, 240, 276, 306, 313, 342, 346, 255, 234, 213,
	363, 210, 381, 401, 402, 403, 405, 310, 229, 345,
	406, 0, 294, 407, 408, 268, 0, 0, 0, 0,
	0, 329, 0, 0, 0, 1198, 0, 0, 0, 0,
	233, 0, 0, 0, 0, 285, 230, 0, 0, 343,
	0, 184, 0, 382, 218, 295, 292, 413, 244, 236,
	232, 217, 269, 301, 341, 400, 335, 0, 289, 0,
	0, 391, 314, 0, 0, 0, 613, 614, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 216,
	183, 326, 392, 248, 0, 0, 0, 0, 175, 176,
	177, 0, 1200, 0, 0, 0, 0, 0, 0, 0,
	207, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 273, 235, 227, 410, 0, 0,
	0, 0, 199, 0, 0, 0, 1065, 0, 1066, 1067,
	0, 0, 0, 0, 0, 0, 0, 238, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 315, 0, 0,
	0, 0, 442, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 281, 179, 195, 0, 0, 325, 365, 371,
	0, 0, 0, 219, 0, 369, 339, 427, 203, 246,
	362, 344, 367, 0, 0, 368, 290, 415, 357, 425,
	443, 444, 226, 319, 433, 404, 439, 455, 196, 223,
	333, 397, 430, 388, 312, 411, 412, 280, 387, 254,
	182, 288, 449, 194, 377, 211, 201, 187, 399, 423,
	208, 380, 0, 0, 457, 189, 421, 396, 308, 277,
	278, 188, 0, 361, 231, 252, 221, 328, 418, 419,
	220, 458, 198, 438, 191, 0, 437, 321, 414, 422,
	309, 300, 190, 420, 307, 299, 283, 242, 263, 355,
	293, 356, 264, 317, 316, 318, 0, 185, 0, 393,
	431, 459, 204, 205, 206, 0, 241, 245, 251, 253,
	259, 260, 267, 286, 332, 354, 352, 358, 0, 409,
	426, 434, 441, 447, 448, 450, 451, 452, 453, 454,
	320, 266, 389, 282, 291, 0, 0, 338, 370, 209,
	429, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 192, 287, 0, 359, 249, 456, 436, 432,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 181, 193, 202, 212,
	224, 239, 247, 257, 262, 265, 270, 271, 274, 279,
	297, 302, 303, 304, 305, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 347, 348, 349, 350, 351,
	353, 360, 364, 372, 373, 374, 375, 376, 378, 379,
	383, 384, 385, 386, 394, 398, 416, 417, 428, 440,
	445, 258, 424, 446, 0, 296, 0, 0, 298, 243,
	261, 272, 0, 435, 395, 197, 366, 250, 186, 215,
	200, 222, 237, 240, 276, 306, 313, 342, 346, 255,
	234, 213, 363, 210, 381, 401, 402, 403, 405, 310,
	229, 345, 406, 0, 294, 407, 408, 268, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 285, 230, 0,
	0, 343, 0, 184, 0, 382, 218, 295, 292, 413,
	244, 236, 232, 217, 269, 301, 341, 400, 335, 0,
	289, 0, 0, 391, 314, 0, 0, 606, 613, 614,
	615, 616, 607, 609, 0, 0, 0, 608, 0, 0,
	275, 216, 183, 326, 392, 248, 617, 618, 0, 0,
	175, 176, 177, 1143, 1146, 0, 0, 0, 1142, 1145,
	0, 0, 207, 1141, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 273, 235, 227, 410,
	0, 0, 0, 0, 199, 0, 0, 0, 2104, 2105,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 315,
	0, 0, 0, 0, 442, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 281, 179, 195, 0, 0, 325,
	365, 371, 0, 0, 0, 219, 0, 369, 339, 427,
	203, 246, 362, 344, 367, 0, 0, 368, 290, 415,
	357, 425, 443, 444, 226, 319, 433, 404, 439, 455,
	196, 223, 333, 397, 430, 388, 312, 411, 412, 280,
	387, 254, 182, 288, 449, 194, 377, 211, 201, 187,
	399, 423, 208, 380, 0, 0, 457, 189, 421, 396,
	308, 277, 278, 188, 0, 361, 231, 252, 221, 328,
	418, 419, 220, 458, 198, 438, 191, 0, 437, 321,
	414, 422, 309, 300, 190, 420, 307, 299, 283, 242,
	263, 355, 293, 356, 264, 317, 316, 318, 0, 185,
	0, 393, 431, 459, 204, 205, 206, 0, 241, 245,
	251, 253, 259, 260, 267, 286, 332, 354, 352, 358,
	0, 409, 426, 434, 441, 447, 448, 450, 451, 452,
	453, 454, 320, 266, 389, 282, 291, 0, 0, 338,
	370, 209, 429, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 192, 287, 0, 359, 249, 456,
	436, 432, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 181, 193,
	202, 212, 224, 239, 247, 257, 262, 265, 270, 271,
	274, 279, 297, 302, 303, 304, 305, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 347, 348, 349,
	350, 351, 353, 360, 364, 372, 373, 374, 375, 376,
	378, 379, 383, 384, 385, 386, 394, 398, 416, 417,
	428, 440, 445, 258, 424, 446, 0, 296, 0, 0,
	298, 243, 261, 272, 0, 435, 395, 197, 366, 250,
	186, 215, 200, 222, 237, 240, 276, 306, 313, 342,
	346, 255, 234, 213, 363, 210, 381, 401, 402, 403,
	405, 310, 229, 345, 70, 406, 294, 407, 408, 268,
	0, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	285, 230, 0, 0, 343, 0, 184, 0, 382, 218,
	295, 292, 413, 244, 236, 232, 217, 269, 301, 341,
	400, 335, 0, 289, 0, 0, 391, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 216, 183, 326, 392, 248, 0,
	79, 0, 0, 175, 176, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 207, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 273,
	235, 227, 410, 0, 0, 0, 0, 199, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 315, 0, 0, 0, 0, 442, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 281, 179, 195,
	0, 0, 325, 365, 371, 0, 0, 0, 219, 0,
	369, 339, 427, 203, 246, 362, 344, 367, 0, 0,
	368, 290, 415, 357, 425, 443, 444, 226, 319, 433,
	404, 439, 455, 196, 223, 333, 397, 430, 388, 312,
	411, 412, 280, 387, 254, 182, 288, 449, 194, 377,
	211, 201, 187, 399, 423, 208, 380, 0, 0, 457,
	189, 421, 396, 308, 277, 278, 188, 0, 361, 231,
	252, 221, 328, 418, 419, 220, 458, 198, 438, 191,
	0, 437, 321, 414, 422, 309, 300, 190, 420, 307,
	299, 283, 242, 263, 355, 293, 356, 264, 317, 316,
	318, 0, 185, 0, 393, 431, 459, 204, 205, 206,
	0, 241, 245, 251, 253, 259, 260, 267, 286, 332,
	354, 352, 358, 0, 409, 426, 434, 441, 447, 448,
	450, 451, 452, 453, 454, 320, 266, 389, 282, 291,
	0, 0, 338, 370, 209, 429, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 192, 287, 78,
	359, 249, 456, 436, 432, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 1619, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 181, 193, 202, 212, 224, 239, 247, 257, 262,
	265, 270, 271, 274, 279, 297, 302, 303, 304, 305,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	347, 348, 349, 350, 351, 353, 360, 364, 372, 373,
	374, 375, 376, 378, 379, 383, 384, 385, 386, 394,
	398, 416, 417, 428, 440, 445, 258, 424, 446, 0,
	296, 0, 0, 298, 243, 261, 272, 0, 435, 395,
	197, 366, 250, 186, 215, 200, 222, 237, 240, 276,
	306, 313, 342, 346, 255, 234, 213, 363, 210, 381,
	401, 402, 403, 405, 310, 229, 345, 70, 406, 294,
	407, 408, 268, 0, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 0, 0, 285, 230, 0, 0, 343, 0, 184,
	0, 382, 218, 295, 292, 413, 244, 236, 232, 217,
	269, 301, 341, 400, 335, 0, 289, 0, 0, 391,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 216, 183, 326,
	392, 248, 0, 79, 0, 1178, 175, 176, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 315, 0, 0, 0, 0,
	442, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	281, 179, 195, 0, 0, 325, 365, 371, 0, 0,
	0, 219, 0, 369, 339, 427, 203, 246, 362, 344,
	367, 0, 0, 368, 290, 415, 357, 425, 443, 444,
	226, 319, 433, 404, 439, 455, 196, 223, 333, 397,
	430, 388, 312, 411, 412, 280, 387, 254, 182, 288,
	449, 194, 377, 211, 201, 187, 399, 423, 208, 380,
	0, 0, 457, 189, 421, 396, 308, 277, 278, 188,
	0, 361, 231, 252, 221, 328, 418, 419, 220, 458,
	198, 438, 191, 0, 437, 321, 414, 422, 309, 300,
	190, 420, 307, 299, 283, 242, 263, 355, 293, 356,
	264, 317, 316, 318, 0, 185, 0, 393, 431, 459,
	204, 205, 206, 0, 241, 245, 251, 253, 259, 260,
	267, 286, 332, 354, 352, 358, 0, 409, 426, 434,
	441, 447, 448, 450, 451, 452, 453, 454, 320, 266,
	389, 282, 291, 0, 0, 338, 370, 209, 429, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	192, 287, 78, 359, 249, 456, 436, 432, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 270, 271, 274, 279, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 378, 379, 383, 384,
	385, 386, 394, 398, 416, 417, 428, 440, 445, 258,
	424, 446, 0, 296, 0, 0, 298, 243, 261, 272,
	0, 435, 395, 197, 366, 250, 186, 215, 200, 222,
	237, 240, 276, 306, 313, 342, 346, 255, 234, 213,
	363, 210, 381, 401, 402, 403, 405, 310, 229, 345,
	406, 0, 294, 407, 408, 268, 0, 0, 0, 0,
	0, 329, 0, 0, 0, 1578, 0, 0, 0, 0,
	233, 0, 0, 0, 0, 285, 230, 0, 0, 343,
	0, 184, 0, 382, 218, 295, 292, 413, 244, 236,
	232, 217, 269, 301, 341, 400, 335, 0, 289, 0,
	0, 391, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 216,
	183, 326, 392, 248, 0, 0, 0, 0, 175, 176,
	177, 0, 1368, 0, 0, 0, 0, 0, 0, 0,
	207, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 273, 235, 227, 410, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 315, 0, 0,
	0, 0, 442, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 281, 179, 195, 0, 0, 325, 365, 371,
	0, 0, 0, 219, 0, 369, 339, 427, 203, 246,
	362, 344, 367, 0, 1576, 368, 290, 415, 357, 425,
	443, 444, 226, 319, 433, 404, 439, 455, 196, 223,
	333, 397, 430, 388, 312, 411, 412, 280, 387, 254,
	182, 288, 449, 194, 377, 211, 201, 187, 399, 423,
	208, 380, 0, 0, 457, 189, 421, 396, 308, 277,
	278, 188, 0, 361, 231, 252, 221, 328, 418, 419,
	220, 458, 198, 438, 191, 0, 437, 321, 414, 422,
	309, 300, 190, 420, 307, 299, 283, 242, 263, 355,
	293, 356, 264, 317, 316, 318, 0, 185, 0, 393,
	431, 459, 204, 205, 206, 0, 241, 245, 251, 253,
	259, 260, 267, 286, 332, 354, 352, 358, 0, 409,
	426, 434, 441, 447, 448, 450, 451, 452, 453, 454,
	320, 266, 389, 282, 291, 0, 0, 338, 370, 209,
	429, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 192, 287, 0, 359, 249, 456, 436, 432,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 181, 193, 202, 212,
	224, 239, 247, 257, 262, 265, 270, 271, 274, 279,
	297, 302, 303, 304, 305, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 347, 348, 349, 350, 351,
	353, 360, 364, 372, 373, 374, 375, 376, 378, 379,
	383, 384, 385, 386, 394, 398, 416, 417, 428, 440,
	445, 258, 424, 446, 0, 296, 0, 0, 298, 243,
	261, 272, 0, 435, 395, 197, 366, 250, 186, 215,
	200, 222, 237, 240, 276, 306, 313, 342, 346, 255,
	234, 213, 363, 210, 381, 401, 402, 403, 405, 310,
	229, 345, 406, 0, 294, 407, 408, 268, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 285, 230, 0,
	0, 343, 0, 184, 0, 382, 218, 295, 292, 413,
	244, 236, 232, 217, 269, 301, 341, 400, 335, 0,
	289, 0, 0, 391, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 216, 183, 326, 392, 248, 0, 0, 0, 0,
	175, 176, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 273, 235, 227, 410,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 315,
	0, 0, 0, 0, 442, 0, 0, 0, 0, 0,
	0, 0, 284, 865, 281, 179, 195, 863, 0, 325,
	365, 371, 0, 0, 0, 219, 0, 369, 339, 427,
	203, 246, 362, 344, 367, 0, 0, 368, 290, 415,
	357, 425, 443, 444, 226, 319, 433, 404, 439, 455,
	196, 223, 333, 397, 430, 388, 312, 411, 412, 280,
	387, 254, 182, 288, 449, 194, 377, 211, 201, 187,
	399, 423, 208, 380, 0, 0, 457, 189, 421, 396,
	308, 277, 278, 188, 0, 361, 231, 252, 221, 328,
	418, 419, 220, 458, 198, 438, 191, 0, 437, 321,
	414, 422, 309, 300, 190, 420, 307, 299, 283, 242,
	263, 355, 293, 356, 264, 317, 316, 318, 0, 185,
	0, 393, 431, 459, 204, 205, 206, 0, 241, 245,
	251, 253, 259, 260, 267, 286, 332, 354, 352, 358,
	0, 409, 426, 434, 441, 447, 448, 450, 451, 452,
	453, 454, 320, 266, 389, 282, 291, 0, 0, 338,
	370, 209, 429, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 192, 287, 0, 359, 249, 456,
	436, 432, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 181, 193,
	202, 212, 224, 239, 247, 257, 262, 265, 270, 271,
	274, 279, 297, 302, 303, 304, 305, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 347, 348, 349,
	350, 351, 353, 360, 364, 372, 373, 374, 375, 376,
	378, 379, 383, 384, 385, 386, 394, 398, 416, 417,
	428, 440, 445, 258, 424, 446, 0, 296, 0, 0,
	298, 243, 261, 272, 0, 435, 395, 197, 366, 250,
	186, 215, 200, 222, 237, 240, 276, 306, 313, 342,
	346, 255, 234, 213, 363, 210, 381, 401, 402, 403,
	405, 310, 229, 345, 406, 0, 294, 407, 408, 268,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 1578,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 285,
	230, 0, 0, 343, 0, 184, 0, 382, 218, 295,
	292, 413, 244, 236, 232, 217, 269, 301, 341, 400,
	335, 0, 289, 0, 0, 391, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 216, 183, 326, 392, 248, 0, 0,
	0, 0, 175, 176, 177, 0, 1368, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 273, 235,
	227, 410, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 315, 0, 0, 0, 0, 442, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 281, 179, 195, 0,
	0, 325, 365, 371, 0, 0, 0, 219, 0, 369,
	339, 427, 203, 246, 362, 344, 367, 0, 0, 368,
	290, 415, 357, 425, 443, 444, 226, 319, 433, 404,
	439, 455, 196, 223, 333, 397, 430, 388, 312, 411,
	412, 280, 387, 254, 182, 288, 449, 194, 377, 211,
	201, 187, 399, 423, 208, 380, 0, 0, 457, 189,
	421, 396, 308, 277, 278, 188, 0, 361, 231, 252,
	221, 328, 418, 419, 220, 458, 198, 438, 191, 0,
	437, 321, 414, 422, 309, 300, 190, 420, 307, 299,
	283, 242, 263, 355, 293, 356, 264, 317, 316, 318,
	0, 185, 0, 393, 431, 459, 204, 205, 206, 0,
	241, 245, 251, 253, 259, 260, 267, 286, 332, 354,
	352, 358, 0, 409, 426, 434, 441, 447, 448, 450,
	451, 452, 453, 454, 320, 266, 389, 282, 291, 0,
	0, 338, 370, 209, 429, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 192, 287, 0, 359,
	249, 456, 436, 432, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	181, 193, 202, 212, 224, 239, 247, 257, 262, 265,
	270, 271, 274, 279, 297, 302, 303, 304, 305, 322,
	323, 324, 327, 330, 331, 334, 336, 337, 340, 347,
	348, 349, 350, 351, 353, 360, 364, 372, 373, 374,
	375, 376, 378, 379, 383, 384, 385, 386, 394, 398,
	416, 417, 428, 440, 445, 258, 424, 446, 0, 296,
	0, 0, 298, 243, 261, 272, 0, 435, 395, 197,
	366, 250, 186, 215, 200, 222, 237, 240, 276, 306,
	313, 342, 346, 255, 234, 213, 363, 210, 381, 401,
	402, 403, 405, 310, 229, 345, 406, 0, 294, 407,
	408, 268, 0, 0, 0, 0, 0, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 285, 230, 0, 0, 343, 0, 184, 0, 382,
	218, 295, 292, 413, 244, 236, 232, 217, 269, 301,
	341, 400, 335, 0, 289, 0, 0, 391, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 216, 183, 326, 392, 248,
	0, 0, 0, 1178, 175, 176, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	273, 235, 227, 410, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 315, 0, 0, 0, 0, 442, 0,
	0, 0, 2299, 0, 0, 0, 284, 0, 281, 179,
	195, 0, 0, 325, 365, 371, 0, 0, 0, 219,
	0, 369, 339, 427, 203, 246, 362, 344, 367, 0,
	0, 368, 290, 415, 357, 425, 443, 444, 226, 319,
	433, 404, 439, 455, 196, 223, 333, 397, 430, 388,
	312, 411, 412, 280, 387, 254, 182, 288, 449, 194,
	377, 211, 201, 187, 399, 423, 208, 380, 0, 0,
	457, 189, 421, 396, 308, 277, 278, 188, 0, 361,
	231, 252, 221, 328, 418, 419, 220, 458, 198, 438,
	191, 0, 437, 321, 414, 422, 309, 300, 190, 420,
	307, 299, 283, 242, 263, 355, 293, 356, 264, 317,
	316, 318, 0, 185, 0, 393, 431, 459, 204, 205,
	206, 0, 241, 245, 251, 253, 259, 260, 267, 286,
	332, 354, 352, 358, 0, 409, 426, 434, 441, 447,
	448, 450, 451, 452, 453, 454, 320, 266, 389, 282,
	291, 0, 0, 338, 370, 209, 429, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 192, 287,
	0, 359, 249, 456, 436, 432, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 181, 193, 202, 212, 224, 239, 247, 257,
	262, 265, 270, 271, 274, 279, 297, 302, 303, 304,
	305, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 347, 348, 349, 350, 351, 353, 360, 364, 372,
	373, 374, 375, 376, 378, 379, 383, 384, 385, 386,
	394, 398, 416, 417, 428, 440, 445, 258, 424, 446,
	0, 296, 0, 0, 298, 243, 261, 272, 0, 435,
	395, 197, 366, 250, 186, 215, 200, 222, 237, 240,
	276, 306, 313, 342, 346, 255, 234, 213, 363, 210,
	381, 401, 402, 403, 405, 310, 229, 345, 406, 0,
	294, 407, 408, 268, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 0, 0, 285, 230, 0, 0, 343, 0, 184,
	0, 382, 218, 295, 292, 413, 244, 236, 232, 217,
	269, 301, 341, 400, 335, 0, 289, 0, 0, 391,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 216, 183, 326,
	392, 248, 0, 79, 0, 0, 175, 176, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 315, 0, 0, 0, 0,
	442, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	281, 179, 195, 0, 0, 325, 365, 371, 0, 0,
	0, 219, 0, 369, 339, 427, 203, 246, 362, 344,
	367, 0, 0, 368, 290, 415, 357, 425, 443, 444,
	226, 319, 433, 404, 439, 455, 196, 223, 333, 397,
	430, 388, 312, 411, 412, 280, 387, 254, 182, 288,
	449, 194, 377, 211, 201, 187, 399, 423, 208, 380,
	0, 0, 457, 189, 421, 396, 308, 277, 278, 188,
	0, 361, 231, 252, 221, 328, 418, 419, 220, 458,
	198, 438, 191, 0, 437, 321, 414, 422, 309, 300,
	190, 420, 307, 299, 283, 242, 263, 355, 293, 356,
	264, 317, 316, 318, 0, 185, 0, 393, 431, 459,
	204, 205, 206, 0, 241, 245, 251, 253, 259, 260,
	267, 286, 332, 354, 352, 358, 0, 409, 426, 434,
	441, 447, 448, 450, 451, 452, 453, 454, 320, 266,
	389, 282, 291, 0, 0, 338, 370, 209, 429, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	192, 287, 0, 359, 249, 456, 436, 432, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 1619, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 270, 271, 274, 279, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 378, 379, 383, 384,
	385, 386, 394, 398, 416, 417, 428, 440, 445, 258,
	424, 446, 0, 296, 0, 0, 298, 243, 261, 272,
	0, 435, 395, 197, 366, 250, 186, 215, 200, 222,
	237, 240, 276, 306, 313, 342, 346, 255, 234, 213,
	363, 210, 381, 401, 402, 403, 405, 310, 229, 345,
	406, 0, 294, 407, 408, 268, 0, 0, 0, 0,
	0, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 0, 0, 285, 230, 0, 0, 343,
	0, 184, 0, 382, 218, 295, 292, 413, 244, 236,
	232, 217, 269, 301, 341, 400, 335, 0, 289, 0,
	0, 391, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 216,
	183, 326, 392, 248, 0, 0, 0, 0, 175, 176,
	177, 0, 0, 0, 1831, 0, 0, 1832, 0, 0,
	207, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 273, 235, 227, 410, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 315, 0, 0,
	0, 0, 442, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 281, 179, 195, 0, 0, 325, 365, 371,
	0, 0, 0, 219, 0, 369, 339, 427, 203, 246,
	362, 344, 367, 0, 0, 368, 290, 415, 357, 425,
	443, 444, 226, 319, 433, 404, 439, 455, 196, 223,
	333, 397, 430, 388, 312, 411, 412, 280, 387, 254,
	182, 288, 449, 194, 377, 211, 201, 187, 399, 423,
	208, 380, 0, 0, 457, 189, 421, 396, 308, 277,
	278, 188, 0, 361, 231, 252, 221, 328, 418, 419,
	220, 458, 198, 438, 191, 0, 437, 321, 414, 422,
	309, 300, 190, 420, 307, 299, 283, 242, 263, 355,
	293, 356, 264, 317, 316, 318, 0, 185, 0, 393,
	431, 459, 204, 205, 206, 0, 241, 245, 251, 253,
	259, 260, 267, 286, 332, 354, 352, 358, 0, 409,
	426, 434, 441, 447, 448, 450, 451, 452, 453, 454,
	320, 266, 389, 282, 291, 0, 0, 338, 370, 209,
	429, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 192, 287, 0, 359, 249, 456, 436, 432,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 181, 193, 202, 212,
	224, 239, 247, 257, 262, 265, 270, 271, 274, 279,
	297, 302, 303, 304, 305, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 347, 348, 349, 350, 351,
	353, 360, 364, 372, 373, 374, 375, 376, 378, 379,
	383, 384, 385, 386, 394, 398, 416, 417, 428, 440,
	445, 258, 424, 446, 0, 296, 0, 0, 298, 243,
	261, 272, 0, 435, 395, 197, 366, 250, 186, 215,
	200, 222, 237, 240, 276, 306, 313, 342, 346, 255,
	234, 213, 363, 210, 381, 401, 402, 403, 405, 310,
	229, 345, 406, 0, 294, 407, 408, 268, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 1220, 0, 0, 0, 285, 230, 0,
	0, 343, 0, 184, 0, 382, 218, 295, 292, 413,
	244, 236, 232, 217, 269, 301, 341, 400, 335, 0,
	289, 0, 0, 391, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 216, 183, 326, 392, 248, 0, 0, 0, 0,
	175, 176, 177, 0, 1219, 0, 0, 0, 0, 0,
	0, 0, 207, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 273, 235, 227, 410,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 315,
	0, 0, 0, 0, 442, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 281, 179, 195, 0, 0, 325,
	365, 371, 0, 0, 0, 219, 0, 369, 339, 427,
	203, 246, 362, 344, 367, 0, 0, 368, 290, 415,
	357, 425, 443, 444, 226, 319, 433, 404, 439, 455,
	196, 223, 333, 397, 430, 388, 312, 411, 412, 280,
	387, 254, 182, 288, 449, 194, 377, 211, 201, 187,
	399, 423, 208, 380, 0, 0, 457, 189, 421, 396,
	308, 277, 278, 188, 0, 361, 231, 252, 221, 328,
	418, 419, 220, 458, 198, 438, 191, 0, 437, 321,
	414, 422, 309, 300, 190, 420, 307, 299, 283, 242,
	263, 355, 293, 356, 264, 317, 316, 318, 0, 185,
	0, 393, 431, 459, 204, 205, 206, 0, 241, 245,
	251, 253, 259, 260, 267, 286, 332, 354, 352, 358,
	0, 409, 426, 434, 441, 447, 448, 450, 451, 452,
	453, 454, 320, 266, 389, 282, 291, 0, 0, 338,
	370, 209, 429, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 192, 287, 0, 359, 249, 456,
	436, 432, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 181, 193,
	202, 212, 224, 239, 247, 257, 262, 265, 270, 271,
	274, 279, 297, 302, 303, 304, 305, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 347, 348, 349,
	350, 351, 353, 360, 364, 372, 373, 374, 375, 376,
	378, 379, 383, 384, 385, 386, 394, 398, 416, 417,
	428, 440, 445, 258, 424, 446, 0, 296, 0, 0,
	298, 243, 261, 272, 0, 435, 395, 197, 366, 250,
	186, 215, 200, 222, 237, 240, 276, 306, 313, 342,
	346, 255, 234, 213, 363, 210, 381, 401, 402, 403,
	405, 310, 229, 345, 406, 0, 294, 407, 408, 268,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 285,
	230, 0, 0, 343, 0, 184, 0, 382, 218, 295,
	292, 413, 244, 236, 232, 217, 269, 301, 341, 400,
	335, 0, 289, 0, 0, 391, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 216, 183, 326, 392, 248, 0, 0,
	0, 0, 175, 176, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 273, 235,
	227, 410, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 315, 0, 0, 0, 0, 442, 0, 0, 0,
	2409, 0, 0, 0, 284, 0, 281, 179, 195, 0,
	0, 325, 365, 371, 0, 0, 0, 219, 0, 369,
	339, 427, 203, 246, 362, 344, 367, 0, 0, 368,
	290, 415, 357, 425, 443, 444, 226, 319, 433, 404,
	439, 455, 196, 223, 333, 397, 430, 388, 312, 411,
	412, 280, 387, 254, 182, 288, 449, 194, 377, 211,
	201, 187, 399, 423, 208, 380, 0, 0, 457, 189,
	421, 396, 308, 277, 278, 188, 0, 361, 231, 252,
	221, 328, 418, 419, 220, 458, 198, 438, 191, 0,
	437, 321, 414, 422, 309, 300, 190, 420, 307, 299,
	283, 242, 263, 355, 293, 356, 264, 317, 316, 318,
	0, 185, 0, 393, 431, 459, 204, 205, 206, 0,
	241, 245, 251, 253, 259, 260, 267, 286, 332, 354,
	352, 358, 0, 409, 426, 434, 441, 447, 448, 450,
	451, 452, 453, 454, 320, 266, 389, 282, 291, 0,
	0, 338, 370, 209, 429, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 192, 287, 0, 359,
	249, 456, 436, 432, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	181, 193, 202, 212, 224, 239, 247, 257, 262, 265,
	270, 271, 274, 279, 297, 302, 303, 304, 305, 322,
	323, 324, 327, 330, 331, 334, 336, 337, 340, 347,
	348, 349, 350, 351, 353, 360, 364, 372, 373, 374,
	375, 376, 378, 379, 383, 384, 385, 386, 394, 398,
	416, 417, 428, 440, 445, 258, 424, 446, 0, 296,
	0, 0, 298, 243, 261, 272, 0, 435, 395, 197,
	366, 250, 186, 215, 200, 222, 237, 240, 276, 306,
	313, 342, 346, 255, 234, 213, 363, 210, 381, 401,
	402, 403, 405, 310, 229, 345, 406, 0, 294, 407,
	408, 268, 0, 0, 0, 0, 0, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 285, 230, 0, 0, 343, 0, 184, 0, 382,
	218, 295, 292, 413, 244, 236, 232, 217, 269, 301,
	341, 400, 335, 0, 289, 0, 0, 391, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 216, 183, 326, 392, 248,
	0, 0, 0, 0, 175, 176, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	273, 235, 227, 410, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 315, 0, 0, 0, 0, 442, 0,
	0, 0, 2299, 0, 0, 0, 284, 0, 281, 179,
	195, 0, 0, 325, 365, 371, 0, 0, 0, 219,
	0, 369, 339, 427, 203, 246, 362, 344, 367, 0,
	0, 368, 290, 415, 357, 425, 443, 444, 226, 319,
	433, 404, 439, 455, 196, 223, 333, 397, 430, 388,
	312, 411, 412, 280, 387, 254, 182, 288, 449, 194,
	377, 211, 201, 187, 399, 423, 208, 380, 0, 0,
	457, 189, 421, 396, 308, 277, 278, 188, 0, 361,
	231, 252, 221, 328, 418, 419, 220, 458, 198, 438,
	191, 0, 437, 321, 414, 422, 309, 300, 190, 420,
	307, 299, 283, 242, 263, 355, 293, 356, 264, 317,
	316, 318, 0, 185, 0, 393, 431, 459, 204, 205,
	206, 0, 241, 245, 251, 253, 259, 260, 267, 286,
	332, 354, 352, 358, 0, 409, 426, 434, 441, 447,
	448, 450, 451, 452, 453, 454, 320, 266, 389, 282,
	291, 0, 0, 338, 370, 209, 429, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 192, 287,
	0, 359, 249, 456, 436, 432, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 181, 193, 202, 212, 224, 239, 247, 257,
	262, 265, 270, 271, 274, 279, 297, 302, 303, 304,
	305, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 347, 348, 349, 350, 351, 353, 360, 364, 372,
	373, 374, 375, 376, 378, 379, 383, 384, 385, 386,
	394, 398, 416, 417, 428, 440, 445, 258, 424, 446,
	0, 296, 0, 0, 298, 243, 261, 272, 0, 435,
	395, 197, 366, 250, 186, 215, 200, 222, 237, 240,
	276, 306, 313, 342, 346, 255, 234, 213, 363, 210,
	381, 401, 402, 403, 405, 310, 229, 345, 406, 0,
	294, 407, 408, 268, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 0, 0, 285, 230, 0, 0, 343, 0, 184,
	0, 382, 218, 295, 292, 413, 244, 236, 232, 217,
	269, 301, 341, 400, 335, 0, 289, 0, 0, 391,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 216, 183, 326,
	392, 248, 0, 0, 0, 0, 175, 176, 177, 0,
	1368, 0, 0, 0, 0, 0, 0, 0, 207, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 315, 0, 0, 0, 0,
	442, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	281, 179, 195, 0, 0, 325, 365, 371, 0, 0,
	0, 219, 0, 369, 339, 427, 203, 246, 362, 344,
	367, 0, 0, 368, 290, 415, 357, 425, 443, 444,
	226, 319, 433, 404, 439, 455, 196, 223, 333, 397,
	430, 388, 312, 411, 412, 280, 387, 254, 182, 288,
	449, 194, 377, 211, 201, 187, 399, 423, 208, 380,
	0, 0, 457, 189, 421, 396, 308, 277, 278, 188,
	0, 361, 231, 252, 221, 328, 418, 419, 220, 458,
	198, 438, 191, 0, 437, 321, 414, 422, 309, 300,
	190, 420, 307, 299, 283, 242, 263, 355, 293, 356,
	264, 317, 316, 318, 0, 185, 0, 393, 431, 459,
	204, 205, 206, 0, 241, 245, 251, 253, 259, 260,
	267, 286, 332, 354, 352, 358, 0, 409, 426, 434,
	441, 447, 448, 450, 451, 452, 453, 454, 320, 266,
	389, 282, 291, 0, 0, 338, 370, 209, 429, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	192, 287, 0, 359, 249, 456, 436, 432, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 270, 271, 274, 279, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 378, 379, 383, 384,
	385, 386, 394, 398, 416, 417, 428, 440, 445, 258,
	424, 446, 0, 296, 0, 0, 298, 243, 261, 272,
	0, 435, 395, 197, 366, 250, 186, 215, 200, 222,
	237, 240, 276, 306, 313, 342, 346, 255, 234, 213,
	363, 210, 381, 401, 402, 403, 405, 310, 229, 345,
	0, 0, 294, 407, 408, 268, 406, 0, 0, 0,
	1620, 0, 0, 0, 0, 0, 0, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 285, 230, 0, 0, 343, 0, 184, 0, 382,
	218, 295, 292, 413, 244, 236, 232, 217, 269, 301,
	341, 400, 335, 0, 289, 0, 0, 391, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 216, 183, 326, 392, 248,
	0, 0, 0, 0, 175, 176, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	273, 235, 227, 410, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 315, 0, 0, 0, 0, 442, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 281, 179,
	195, 0, 0, 325, 365, 371, 0, 0, 0, 219,
	0, 369, 339, 427, 203, 246, 362, 344, 367, 0,
	0, 368, 290, 415, 357, 425, 443, 444, 226, 319,
	433, 404, 439, 455, 196, 223, 333, 397, 430, 388,
	312, 411, 412, 280, 387, 254, 182, 288, 449, 194,
	377, 211, 201, 187, 399, 423, 208, 380, 0, 0,
	457, 189, 421, 396, 308, 277, 278, 188, 0, 361,
	231, 252, 221, 328, 418, 419, 220, 458, 198, 438,
	191, 0, 437, 321, 414, 422, 309, 300, 190, 420,
	307, 299, 283, 242, 263, 355, 293, 356, 264, 317,
	316, 318, 0, 185, 0, 393, 431, 459, 204, 205,
	206, 0, 241, 245, 251, 253, 259, 260, 267, 286,
	332, 354, 352, 358, 0, 409, 426, 434, 441, 447,
	448, 450, 451, 452, 453, 454, 320, 266, 389, 282,
	291, 0, 0, 338, 370, 209, 429, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 192, 287,
	0, 359, 249, 456, 436, 432, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 181, 193, 202, 212, 224, 239, 247, 257,
	262, 265, 270, 271, 274, 279, 297, 302, 303, 304,
	305, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 347, 348, 349, 350, 351, 353, 360, 364, 372,
	373, 374, 375, 376, 378, 379, 383, 384, 385, 386,
	394, 398, 416, 417, 428, 440, 445, 258, 424, 446,
	0, 296, 0, 0, 298, 243, 261, 272, 0, 435,
	395, 197, 366, 250, 186, 215, 200, 222, 237, 240,
	276, 306, 313, 342, 346, 255, 234, 213, 363, 210,
	381, 401, 402, 403, 405, 310, 229, 345, 406, 0,
	294, 407, 408, 268, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 0, 0, 285, 230, 0, 0, 343, 0, 184,
	0, 382, 218, 295, 292, 413, 244, 236, 232, 217,
	269, 301, 341, 400, 335, 0, 289, 0, 0, 391,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 216, 183, 326,
	392, 248, 0, 0, 0, 0, 175, 176, 177, 0,
	1200, 0, 0, 0, 0, 0, 0, 0, 207, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 315, 0, 0, 0, 0,
	442, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	281, 179, 195, 0, 0, 325, 365, 371, 0, 0,
	0, 219, 0, 369, 339, 427, 203, 246, 362, 344,
	367, 0, 0, 368, 290, 415, 357, 425, 443, 444,
	226, 319, 433, 404, 439, 455, 196, 223, 333, 397,
	430, 388, 312, 411, 412, 280, 387, 254, 182, 288,
	449, 194, 377, 211, 201, 187, 399, 423, 208, 380,
	0, 0, 457, 189, 421, 396, 308, 277, 278, 188,
	0, 361, 231, 252, 221, 328, 418, 419, 220, 458,
	198, 438, 191, 0, 437, 321, 414, 422, 309, 300,
	190, 420, 307, 299, 283, 242, 263, 355, 293, 356,
	264, 317, 316, 318, 0, 185, 0, 393, 431, 459,
	204, 205, 206, 0, 241, 245, 251, 253, 259, 260,
	267, 286, 332, 354, 352, 358, 0, 409, 426, 434,
	441, 447, 448, 450, 451, 452, 453, 454, 320, 266,
	389, 282, 291, 0, 0, 338, 370, 209, 429, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	192, 287, 0, 359, 249, 456, 436, 432, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 270, 271, 274, 279, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 378, 379, 383, 384,
	385, 386, 394, 398, 416, 417, 428, 440, 445, 258,
	424, 446, 0, 296, 0, 0, 298, 243, 261, 272,
	0, 435, 395, 197, 366, 250, 186, 215, 200, 222,
	237, 240, 276, 306, 313, 342, 346, 255, 234, 213,
	363, 210, 381, 401, 402, 403, 405, 310, 229, 345,
	406, 0, 294, 407, 408, 268, 0, 0, 0, 0,
	0, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 0, 0, 285, 230, 0, 0, 343,
	0, 184, 0, 382, 218, 295, 292, 413, 244, 236,
	232, 217, 269, 301, 341, 400, 335, 0, 289, 0,
	0, 391, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 216,
	183, 326, 392, 248, 0, 0, 0, 0, 175, 176,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 273, 235, 227, 410, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1095, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 315, 0, 0,
	0, 0, 442, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 281, 179, 195, 0, 0, 325, 365, 371,
	0, 0, 0, 219, 0, 369, 339, 427, 203, 246,
	362, 344, 367, 0, 0, 368, 290, 415, 357, 425,
	443, 444, 226, 319, 433, 404, 439, 455, 196, 223,
	333, 397, 430, 388, 312, 411, 412, 280, 387, 254,
	182, 288, 449, 194, 377, 211, 201, 187, 399, 423,
	208, 380, 0, 0, 457, 189, 421, 396, 308, 277,
	278, 188, 0, 361, 231, 252, 221, 328, 418, 419,
	220, 458, 198, 438, 191, 0, 437, 321, 414, 422,
	309, 300, 190, 420, 307, 299, 283, 242, 263, 355,
	293, 356, 264, 317, 316, 318, 0, 185, 0, 393,
	431, 459, 204, 205, 206, 0, 241, 245, 251, 253,
	259, 260, 267, 286, 332, 354, 352, 358, 0, 409,
	426, 434, 441, 447, 448, 450, 451, 452, 453, 454,
	320, 266, 389, 282, 291, 0, 0, 338, 370, 209,
	429, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 192, 287, 0, 359, 249, 456, 436, 432,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 181, 193, 202, 212,
	224, 239, 247, 257, 262, 265, 270, 271, 274, 279,
	297, 302, 303, 304, 305, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 347, 348, 349, 350, 351,
	353, 360, 364, 372, 373, 374, 375, 376, 378, 379,
	383, 384, 385, 386, 394, 398, 416, 417, 428, 440,
	445, 258, 424, 446, 0, 296, 0, 0, 298, 243,
	261, 272, 0, 435, 395, 197, 366, 250, 186, 215,
	200, 222, 237, 240, 276, 306, 313, 342, 346, 255,
	234, 213, 363, 210, 381, 401, 402, 403, 405, 310,
	229, 345, 406, 0, 294, 407, 408, 268, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 285, 230, 0,
	0, 343, 0, 184, 0, 382, 218, 295, 292, 413,
	244, 236, 232, 217, 269, 301, 341, 400, 335, 0,
	289, 0, 0, 391, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 216, 183, 326, 392, 248, 0, 0, 0, 0,
	175, 176, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 273, 235, 227, 410,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 315,
	0, 0, 0, 0, 442, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 281, 179, 195, 0, 0, 325,
	365, 371, 0, 0, 0, 219, 0, 369, 339, 427,
	203, 246, 362, 344, 367, 0, 0, 368, 290, 415,
	357, 425, 443, 444, 226, 319, 433, 404, 439, 455,
	196, 223, 333, 397, 430, 388, 312, 411, 412, 280,
	387, 254, 182, 288, 449, 194, 377, 211, 201, 187,
	399, 423, 208, 380, 0, 0, 457, 189, 421, 396,
	308, 277, 278, 188, 0, 361, 231, 252, 221, 328,
	418, 419, 220, 458, 198, 438, 191, 0, 437, 321,
	414, 422, 309, 300, 190, 420, 307, 299, 283, 242,
	263, 355, 293, 356, 264, 317, 316, 318, 0, 185,
	0, 393, 431, 459, 204, 205, 206, 0, 241, 245,
	251, 253, 259, 260, 267, 286, 332, 354, 352, 358,
	0, 409, 426, 434, 441, 447, 448, 450, 451, 452,
	453, 454, 320, 266, 389, 282, 291, 0, 0, 338,
	370, 209, 429, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 192, 287, 1459, 359, 249, 456,
	436, 432, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 181, 193,
	202, 212, 224, 239, 247, 257, 262, 265, 270, 271,
	274, 279, 297, 302, 303, 304, 305, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 347, 348, 349,
	350, 351, 353, 360, 364, 372, 373, 374, 375, 376,
	378, 379, 383, 384, 385, 386, 394, 398, 416, 417,
	428, 440, 445, 258, 424, 446, 0, 296, 0, 0,
	298, 243, 261, 272, 0, 435, 395, 197, 366, 250,
	186, 215, 200, 222, 237, 240, 276, 306, 313, 342,
	346, 255, 234, 213, 363, 210, 381, 401, 402, 403,
	405, 310, 229, 345, 406, 0, 294, 407, 408, 268,
	0, 0, 0, 0, 0, 329, 0, 1340, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 285,
	230, 0, 0, 343, 0, 184, 0, 382, 218, 295,
	292, 413, 244, 236, 232, 217, 269, 301, 341, 400,
	335, 0, 289, 0, 0, 391, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 216, 183, 326, 392, 248, 0, 0,
	0, 0, 175, 176, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 273, 235,
	227, 410, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 315, 0, 0, 0, 0, 442, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 281, 179, 195, 0,
	0, 325, 365, 371, 0, 0, 0, 219, 0, 369,
	339, 427, 203, 246, 362, 344, 367, 0, 0, 368,
	290, 415, 357, 425, 443, 444, 226, 319, 433, 404,
	439, 455, 196, 223, 333, 397, 430, 388, 312, 411,
	412, 280, 387, 254, 182, 288, 449, 194, 377, 211,
	201, 187, 399, 423, 208, 380, 0, 0, 457, 189,
	421, 396, 308, 277, 278, 188, 0, 361, 231, 252,
	221, 328, 418, 419, 220, 458, 198, 438, 191, 0,
	437, 321, 414, 422, 309, 300, 190, 420, 307, 299,
	283, 242, 263, 355, 293, 356, 264, 317, 316, 318,
	0, 185, 0, 393, 431, 459, 204, 205, 206, 0,
	241, 245, 251, 253, 259, 260, 267, 286, 332, 354,
	352, 358, 0, 409, 426, 434, 441, 447, 448, 450,
	451, 452, 453, 454, 320, 266, 389, 282, 291, 0,
	0, 338, 370, 209, 429, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 192, 287, 0, 359,
	249, 456, 436, 432, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	181, 193, 202, 212, 224, 239, 247, 257, 262, 265,
	270, 271, 274, 279, 297, 302, 303, 304, 305, 322,
	323, 324, 327, 330, 331, 334, 336, 337, 340, 347,
	348, 349, 350, 351, 353, 360, 364, 372, 373, 374,
	375, 376, 378, 379, 383, 384, 385, 386, 394, 398,
	416, 417, 428, 440, 445, 258, 424, 446, 0, 296,
	0, 0, 298, 243, 261, 272, 0, 435, 395, 197,
	366, 250, 186, 215, 200, 222, 237, 240, 276, 306,
	313, 342, 346, 255, 234, 213, 363, 210, 381, 401,
	402, 403, 405, 310, 229, 345, 406, 0, 294, 407,
	408, 268, 0, 0, 0, 0, 0, 329, 0, 1338,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 285, 230, 0, 0, 343, 0, 184, 0, 382,
	218, 295, 292, 413, 244, 236, 232, 217, 269, 301,
	341, 400, 335, 0, 289, 0, 0, 391, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 216, 183, 326, 392, 248,
	0, 0, 0, 0, 175, 176, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	273, 235, 227, 410, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 315, 0, 0, 0, 0, 442, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 281, 179,
	195, 0, 0, 325, 365, 371, 0, 0, 0, 219,
	0, 369, 339, 427, 203, 246, 362, 344, 367, 0,
	0, 368, 290, 415, 357, 425, 443, 444, 226, 319,
	433, 404, 439, 455, 196, 223, 333, 397, 430, 388,
	312, 411, 412, 280, 387, 254, 182, 288, 449, 194,
	377, 211, 201, 187, 399, 423, 208, 380, 0, 0,
	457, 189, 421, 396, 308, 277, 278, 188, 0, 361,
	231, 252, 221, 328, 418, 419, 220, 458, 198, 438,
	191, 0, 437, 321, 414, 422, 309, 300, 190, 420,
	307, 299, 283, 242, 263, 355, 293, 356, 264, 317,
	316, 318, 0, 185, 0, 393, 431, 459, 204, 205,
	206, 0, 241, 245, 251, 253, 259, 260, 267, 286,
	332, 354, 352, 358, 0, 409, 426, 434, 441, 447,
	448, 450, 451, 452, 453, 454, 320, 266, 389, 282,
	291, 0, 0, 338, 370, 209, 429, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 192, 287,
	0, 359, 249, 456, 436, 432, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 181, 193, 202, 212, 224, 239, 247, 257,
	262, 265, 270, 271, 274, 279, 297, 302, 303, 304,
	305, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 347, 348, 349, 350, 351, 353, 360, 364, 372,
	373, 374, 375, 376, 378, 379, 383, 384, 385, 386,
	394, 398, 416, 417, 428, 440, 445, 258, 424, 446,
	0, 296, 0, 0, 298, 243, 261, 272, 0, 435,
	395, 197, 366, 250, 186, 215, 200, 222, 237, 240,
	276, 306, 313, 342, 346, 255, 234, 213, 363, 210,
	381, 401, 402, 403, 405, 310, 229, 345, 406, 0,
	294, 407, 408, 268, 0, 0, 0, 0, 0, 329,
	0, 1336, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 0, 0, 285, 230, 0, 0, 343, 0, 184,
	0, 382, 218, 295, 292, 413, 244, 236, 232, 217,
	269, 301, 341, 400, 335, 0, 289, 0, 0, 391,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 216, 183, 326,
	392, 248, 0, 0, 0, 0, 175, 176, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 315, 0, 0, 0, 0,
	442, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	281, 179, 195, 0, 0, 325, 365, 371, 0, 0,
	0, 219, 0, 369, 339, 427, 203, 246, 362, 344,
	367, 0, 0, 368, 290, 415, 357, 425, 443, 444,
	226, 319, 433, 404, 439, 455, 196, 223, 333, 397,
	430, 388, 312, 411, 412, 280, 387, 254, 182, 288,
	449, 194, 377, 211, 201, 187, 399, 423, 208, 380,
	0, 0, 457, 189, 421, 396, 308, 277, 278, 188,
	0, 361, 231, 252, 221, 328, 418, 419, 220, 458,
	198, 438, 191, 0, 437, 321, 414, 422, 309, 300,
	190, 420, 307, 299, 283, 242, 263, 355, 293, 356,
	264, 317, 316, 318, 0, 185, 0, 393, 431, 459,
	204, 205, 206, 0, 241, 245, 251, 253, 259, 260,
	267, 286, 332, 354, 352, 358, 0, 409, 426, 434,
	441, 447, 448, 450, 451, 452, 453, 454, 320, 266,
	389, 282, 291, 0, 0, 338, 370, 209, 429, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	192, 287, 0, 359, 249, 456, 436, 432, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 270, 271, 274, 279, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 378, 379, 383, 384,
	385, 386, 394, 398, 416, 417, 428, 440, 445, 258,
	424, 446, 0, 296, 0, 0, 298, 243, 261, 272,
	0, 435, 395, 197, 366, 250, 186, 215, 200, 222,
	237, 240, 276, 306, 313, 342, 346, 255, 234, 213,
	363, 210, 381, 401, 402, 403, 405, 310, 229, 345,
	406, 0, 294, 407, 408, 268, 0, 0, 0, 0,
	0, 329, 0, 1334, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 0, 0, 285, 230, 0, 0, 343,
	0, 184, 0, 382, 218, 295, 292, 413, 244, 236,
	232, 217, 269, 301, 341, 400, 335, 0, 289, 0,
	0, 391, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 216,
	183, 326, 392, 248, 0, 0, 0, 0, 175, 176,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 273, 235, 227, 410, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 315, 0, 0,
	0, 0, 442, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 281, 179, 195, 0, 0, 325, 365, 371,
	0, 0, 0, 219, 0, 369, 339, 427, 203, 246,
	362, 344, 367, 0, 0, 368, 290, 415, 357, 425,
	443, 444, 226, 319, 433, 404, 439, 455, 196, 223,
	333, 397, 430, 388, 312, 411, 412, 280, 387, 254,
	182, 288, 449, 194, 377, 211, 201, 187, 399, 423,
	208, 380, 0, 0, 457, 189, 421, 396, 308, 277,
	278, 188, 0, 361, 231, 252, 221, 328, 418, 419,
	220, 458, 198, 438, 191, 0, 437, 321, 414, 422,
	309, 300, 190, 420, 307, 299, 283, 242, 263, 355,
	293, 356, 264, 317, 316, 318, 0, 185, 0, 393,
	431, 459, 204, 205, 206, 0, 241, 245, 251, 253,
	259, 260, 267, 286, 332, 354, 352, 358, 0, 409,
	426, 434, 441, 447, 448, 450, 451, 452, 453, 454,
	320, 266, 389, 282, 291, 0, 0, 338, 370, 209,
	429, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 192, 287, 0, 359, 249, 456, 436, 432,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 181, 193, 202, 212,
	224, 239, 247, 257, 262, 265, 270, 271, 274, 279,
	297, 302, 303, 304, 305, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 347, 348, 349, 350, 351,
	353, 360, 364, 372, 373, 374, 375, 376, 378, 379,
	383, 384, 385, 386, 394, 398, 416, 417, 428, 440,
	445, 258, 424, 446, 0, 296, 0, 0, 298, 243,
	261, 272, 0, 435, 395, 197, 366, 250, 186, 215,
	200, 222, 237, 240, 276, 306, 313, 342, 346, 255,
	234, 213, 363, 210, 381, 401, 402, 403, 405, 310,
	229, 345, 406, 0, 294, 407, 408, 268, 0, 0,
	0, 0, 0, 329, 0, 1332, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 285, 230, 0,
	0, 343, 0, 184, 0, 382, 218, 295, 292, 413,
	244, 236, 232, 217, 269, 301, 341, 400, 335, 0,
	289, 0, 0, 391, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 216, 183, 326, 392, 248, 0, 0, 0, 0,
	175, 176, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 273, 235, 227, 410,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 315,
	0, 0, 0, 0, 442, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 281, 179, 195, 0, 0, 325,
	365, 371, 0, 0, 0, 219, 0, 369, 339, 427,
	203, 246, 362, 344, 367, 0, 0, 368, 290, 415,
	357, 425, 443, 444, 226, 319, 433, 404, 439, 455,
	196, 223, 333, 397, 430, 388, 312, 411, 412, 280,
	387, 254, 182, 288, 449, 194, 377, 211, 201, 187,
	399, 423, 208, 380, 0, 0, 457, 189, 421, 396,
	308, 277, 278, 188, 0, 361, 231, 252, 221, 328,
	418, 419, 220, 458, 198, 438, 191, 0, 437, 321,
	414, 422, 309, 300, 190, 420, 307, 299, 283, 242,
	263, 355, 293, 356, 264, 317, 316, 318, 0, 185,
	0, 393, 431, 459, 204, 205, 206, 0, 241, 245,
	251, 253, 259, 260, 267, 286, 332, 354, 352, 358,
	0, 409, 426, 434, 441, 447, 448, 450, 451, 452,
	453, 454, 320, 266, 389, 282, 291, 0, 0, 338,
	370, 209, 429, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 192, 287, 0, 359, 249, 456,
	436, 432, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 181, 193,
	202, 212, 224, 239, 247, 257, 262, 265, 270, 271,
	274, 279, 297, 302, 303, 304, 305, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 347, 348, 349,
	350, 351, 353, 360, 364, 372, 373, 374, 375, 376,
	378, 379, 383, 384, 385, 386, 394, 398, 416, 417,
	428, 440, 445, 258, 424, 446, 0, 296, 0, 0,
	298, 243, 261, 272, 0, 435, 395, 197, 366, 250,
	186, 215, 200, 222, 237, 240, 276, 306, 313, 342,
	346, 255, 234, 213, 363, 210, 381, 401, 402, 403,
	405, 310, 229, 345, 406, 0, 294, 407, 408, 268,
	0, 0, 0, 0, 0, 329, 0, 1328, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 285,
	230, 0, 0, 343, 0, 184, 0, 382, 218, 295,
	292, 413, 244, 236, 232, 217, 269, 301, 341, 400,
	335, 0, 289, 0, 0, 391, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 216, 183, 326, 392, 248, 0, 0,
	0, 0, 175, 176, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 273, 235,
	227, 410, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 315, 0, 0, 0, 0, 442, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 281, 179, 195, 0,
	0, 325, 365, 371, 0, 0, 0, 219, 0, 369,
	339, 427, 203, 246, 362, 344, 367, 0, 0, 368,
	290, 415, 357, 425, 443, 444, 226, 319, 433, 404,
	439, 455, 196, 223, 333, 397, 430, 388, 312, 411,
	412, 280, 387, 254, 182, 288, 449, 194, 377, 211,
	201, 187, 399, 423, 208, 380, 0, 0, 457, 189,
	421, 396, 308, 277, 278, 188, 0, 361, 231, 252,
	221, 328, 418, 419, 220, 458, 198, 438, 191, 0,
	437, 321, 414, 422, 309, 300, 190, 420, 307, 299,
	283, 242, 263, 355, 293, 356, 264, 317, 316, 318,
	0, 185, 0, 393, 431, 459, 204, 205, 206, 0,
	241, 245, 251, 253, 259, 260, 267, 286, 332, 354,
	352, 358, 0, 409, 426, 434, 441, 447, 448, 450,
	451, 452, 453, 454, 320, 266, 389, 282, 291, 0,
	0, 338, 370, 209, 429, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 192, 287, 0, 359,
	249, 456, 436, 432, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	181, 193, 202, 212, 224, 239, 247, 257, 262, 265,
	270, 271, 274, 279, 297, 302, 303, 304, 305, 322,
	323, 324, 327, 330, 331, 334, 336, 337, 340, 347,
	348, 349, 350, 351, 353, 360, 364, 372, 373, 374,
	375, 376, 378, 379, 383, 384, 385, 386, 394, 398,
	416, 417, 428, 440, 445, 258, 424, 446, 0, 296,
	0, 0, 298, 243, 261, 272, 0, 435, 395, 197,
	366, 250, 186, 215, 200, 222, 237, 240, 276, 306,
	313, 342, 346, 255, 234, 213, 363, 210, 381, 401,
	402, 403, 405, 310, 229, 345, 406, 0, 294, 407,
	408, 268, 0, 0, 0, 0, 0, 329, 0, 1326,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 285, 230, 0, 0, 343, 0, 184, 0, 382,
	218, 295, 292, 413, 244, 236, 232, 217, 269, 301,
	341, 400, 335, 0, 289, 0, 0, 391, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 216, 183, 326, 392, 248,
	0, 0, 0, 0, 175, 176, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	273, 235, 227, 410, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 315, 0, 0, 0, 0, 442, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 281, 179,
	195, 0, 0, 325, 365, 371, 0, 0, 0, 219,
	0, 369, 339, 427, 203, 246, 362, 344, 367, 0,
	0, 368, 290, 415, 357, 425, 443, 444, 226, 319,
	433, 404, 439, 455, 196, 223, 333, 397, 430, 388,
	312, 411, 412, 280, 387, 254, 182, 288, 449, 194,
	377, 211, 201, 187, 399, 423, 208, 380, 0, 0,
	457, 189, 421, 396, 308, 277, 278, 188, 0, 361,
	231, 252, 221, 328, 418, 419, 220, 458, 198, 438,
	191, 0, 437, 321, 414, 422, 309, 300, 190, 420,
	307, 299, 283, 242, 263, 355, 293, 356, 264, 317,
	316, 318, 0, 185, 0, 393, 431, 459, 204, 205,
	206, 0, 241, 245, 251, 253, 259, 260, 267, 286,
	332, 354, 352, 358, 0, 409, 426, 434, 441, 447,
	448, 450, 451, 452, 453, 454, 320, 266, 389, 282,
	291, 0, 0, 338, 370, 209, 429, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 192, 287,
	0, 359, 249, 456, 436, 432, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 181, 193, 202, 212, 224, 239, 247, 257,
	262, 265, 270, 271, 274, 279, 297, 302, 303, 304,
	305, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 347, 348, 349, 350, 351, 353, 360, 364, 372,
	373, 374, 375, 376, 378, 379, 383, 384, 385, 386,
	394, 398, 416, 417, 428, 440, 445, 258, 424, 446,
	0, 296, 0, 0, 298, 243, 261, 272, 0, 435,
	395, 197, 366, 250, 186, 215, 200, 222, 237, 240,
	276, 306, 313, 342, 346, 255, 234, 213, 363, 210,
	381, 401, 402, 403, 405, 310, 229, 345, 406, 0,
	294, 407, 408, 268, 0, 0, 0, 0, 0, 329,
	0, 1324, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 0, 0, 285, 230, 0, 0, 343, 0, 184,
	0, 382, 218, 295, 292, 413, 244, 236, 232, 217,
	269, 301, 341, 400, 335, 0, 289, 0, 0, 391,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 216, 183, 326,
	392, 248, 0, 0, 0, 0, 175, 176, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 315, 0, 0, 0, 0,
	442, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	281, 179, 195, 0, 0, 325, 365, 371, 0, 0,
	0, 219, 0, 369, 339, 427, 203, 246, 362, 344,
	367, 0, 0, 368, 290, 415, 357, 425, 443, 444,
	226, 319, 433, 404, 439, 455, 196, 223, 333, 397,
	430, 388, 312, 411, 412, 280, 387, 254, 182, 288,
	449, 194, 377, 211, 201, 187, 399, 423, 208, 380,
	0, 0, 457, 189, 421, 396, 308, 277, 278, 188,
	0, 361, 231, 252, 221, 328, 418, 419, 220, 458,
	198, 438, 191, 0, 437, 321, 414, 422, 309, 300,
	190, 420, 307, 299, 283, 242, 263, 355, 293, 356,
	264, 317, 316, 318, 0, 185, 0, 393, 431, 459,
	204, 205, 206, 0, 241, 245, 251, 253, 259, 260,
	267, 286, 332, 354, 352, 358, 0, 409, 426, 434,
	441, 447, 448, 450, 451, 452, 453, 454, 320, 266,
	389, 282, 291, 0, 0, 338, 370, 209, 429, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	192, 287, 0, 359, 249, 456, 436, 432, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 270, 271, 274, 279, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 378, 379, 383, 384,
	385, 386, 394, 398, 416, 417, 428, 440, 445, 258,
	424, 446, 0, 296, 0, 0, 298, 243, 261, 272,
	0, 435, 395, 197, 366, 250, 186, 215, 200, 222,
	237, 240, 276, 306, 313, 342, 346, 255, 234, 213,
	363, 210, 381, 401, 402, 403, 405, 310, 229, 345,
	406, 0, 294, 407, 408, 268, 0, 0, 0, 0,
	0, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 0, 0, 285, 230, 0, 0, 343,
	0, 184, 0, 382, 218, 295, 292, 413, 244, 236,
	232, 217, 269, 301, 341, 400, 335, 0, 289, 0,
	0, 391, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 216,
	183, 326, 392, 248, 0, 1301, 0, 0, 175, 176,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 273, 235, 227, 410, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 315, 0, 0,
	0, 0, 442, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 281, 179, 195, 0, 0, 325, 365, 371,
	0, 0, 0, 219, 0, 369, 339, 427, 203, 246,
	362, 344, 367, 0, 0, 368, 290, 415, 357, 425,
	443, 444, 226, 319, 433, 404, 439, 455, 196, 223,
	333, 397, 430, 388, 312, 411, 412, 280, 387, 254,
	182, 288, 449, 194, 377, 211, 201, 187, 399, 423,
	208, 380, 0, 0, 457, 189, 421, 396, 308, 277,
	278, 188, 0, 361, 231, 252, 221, 328, 418, 419,
	220, 458, 198, 438, 191, 0, 437, 321, 414, 422,
	309, 300, 190, 420, 307, 299, 283, 242, 263, 355,
	293, 356, 264, 317, 316, 318, 0, 185, 0, 393,
	431, 459, 204, 205, 206, 0, 241, 245, 251, 253,
	259, 260, 267, 286, 332, 354, 352, 358, 0, 409,
	426, 434, 441, 447, 448, 450, 451, 452, 453, 454,
	320, 266, 389, 282, 291, 0, 0, 338, 370, 209,
	429, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 192, 287, 0, 359, 249, 456, 436, 432,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 181, 193, 202, 212,
	224, 239, 247, 257, 262, 265, 270, 271, 274, 279,
	297, 302, 303, 304, 305, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 347, 348, 349, 350, 351,
	353, 360, 364, 372, 373, 374, 375, 376, 378, 379,
	383, 384, 385, 386, 394, 398, 416, 417, 428, 440,
	445, 258, 424, 446, 0, 296, 0, 0, 298, 243,
	261, 272, 0, 435, 395, 197, 366, 250, 186, 215,
	200, 222, 237, 240, 276, 306, 313, 342, 346, 255,
	234, 213, 363, 210, 381, 401, 402, 403, 405, 310,
	229, 345, 406, 0, 294, 407, 408, 268, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 0,
	0, 1204, 233, 0, 0, 0, 0, 285, 230, 0,
	0, 343, 0, 184, 0, 382, 218, 295, 292, 413,
	244, 236, 232, 217, 269, 301, 341, 400, 335, 0,
	289, 0, 0, 391, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 216, 183, 326, 392, 248, 0, 0, 0, 0,
	175, 176, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 273, 235, 227, 410,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 315,
	0, 0, 0, 0, 442, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 281, 179, 195, 0, 0, 325,
	365, 371, 0, 0, 0, 219, 0, 369, 339, 427,
	203, 246, 362, 344, 367, 0, 0, 368, 290, 415,
	357, 425, 443, 444, 226, 319, 433, 404, 439, 455,
	196, 223, 333, 397, 430, 388, 312, 411, 412, 280,
	387, 254, 182, 288, 449, 194, 377, 211, 201, 187,
	399, 423, 208, 380, 0, 0, 457, 189, 421, 396,
	308, 277, 278, 188, 0, 361, 231, 252, 221, 328,
	418, 419, 220, 458, 198, 438, 191, 0, 437, 321,
	414, 422, 309, 300, 190, 420, 307, 299, 283, 242,
	263, 355, 293, 356, 264, 317, 316, 318, 0, 185,
	0, 393, 431, 459, 204, 205, 206, 0, 241, 245,
	251, 253, 259, 260, 267, 286, 332, 354, 352, 358,
	0, 409, 426, 434, 441, 447, 448, 450, 451, 452,
	453, 454, 320, 266, 389, 282, 291, 0, 0, 338,
	370, 209, 429, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 192, 287, 0, 359, 249, 456,
	436, 432, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 181, 193,
	202, 212, 224, 239, 247, 257, 262, 265, 270, 271,
	274, 279, 297, 302, 303, 304, 305, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 347, 348, 349,
	350, 351, 353, 360, 364, 372, 373, 374, 375, 376,
	378, 379, 383, 384, 385, 386, 394, 398, 416, 417,
	428, 440, 445, 258, 424, 446, 0, 296, 0, 0,
	298, 243, 261, 272, 0, 435, 395, 197, 366, 250,
	186, 215, 200, 222, 237, 240, 276, 306, 313, 342,
	346, 255, 234, 213, 363, 210, 381, 401, 402, 403,
	405, 310, 229, 345, 406, 0, 294, 407, 408, 268,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 285,
	230, 0, 0, 343, 0, 184, 0, 382, 218, 295,
	292, 413, 244, 236, 232, 217, 269, 301, 341, 400,
	335, 0, 289, 0, 0, 391, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 216, 183, 326, 392, 248, 0, 0,
	0, 0, 175, 176, 177, 0, 1042, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 273, 235,
	227, 410, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 315, 0, 0, 0, 0, 442, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 281, 179, 195, 0,
	0, 325, 365, 371, 0, 0, 0, 219, 0, 369,
	339, 427, 203, 246, 362, 344, 367, 0, 0, 368,
	290, 415, 357, 425, 443, 444, 226, 319, 433, 404,
	439, 455, 196, 223, 333, 397, 430, 388, 312, 411,
	412, 280, 387, 254, 182, 288, 449, 194, 377, 211,
	201, 187, 399, 423, 208, 380, 0, 0, 457, 189,
	421, 396, 308, 277, 278, 188, 0, 361, 231, 252,
	221, 328, 418, 419, 220, 458, 198, 438, 191, 0,
	437, 321, 414, 422, 309, 300, 190, 420, 307, 299,
	283, 242, 263, 355, 293, 356, 264, 317, 316, 318,
	0, 185, 0, 393, 431, 459, 204, 205, 206, 0,
	241, 245, 251, 253, 259, 260, 267, 286, 332, 354,
	352, 358, 0, 409, 426, 434, 441, 447, 448, 450,
	451, 452, 453, 454, 320, 266, 389, 282, 291, 0,
	0, 338, 370, 209, 429, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 192, 287, 0, 359,
	249, 456, 436, 432, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	181, 193, 202, 212, 224, 239, 247, 257, 262, 265,
	270, 271, 274, 279, 297, 302, 303, 304, 305, 322,
	323, 324, 327, 330, 331, 334, 336, 337, 340, 347,
	348, 349, 350, 351, 353, 360, 364, 372, 373, 374,
	375, 376, 378, 379, 383, 384, 385, 386, 394, 398,
	416, 417, 428, 440, 445, 258, 424, 446, 0, 296,
	0, 0, 298, 243, 261, 272, 0, 435, 395, 197,
	366, 250, 186, 215, 200, 222, 237, 240, 276, 306,
	313, 342, 346, 255, 234, 213, 363, 210, 381, 401,
	402, 403, 405, 310, 229, 345, 406, 0, 294, 407,
	408, 268, 0, 0, 0, 0, 0, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 285, 230, 0, 0, 343, 0, 184, 0, 382,
	218, 295, 292, 413, 244, 236, 232, 217, 269, 301,
	341, 400, 335, 0, 289, 0, 0, 391, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 216, 183, 326, 392, 248,
	0, 0, 0, 0, 175, 176, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	273, 235, 227, 410, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 315, 0, 0, 0, 0, 442, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 281, 179,
	195, 0, 0, 325, 365, 371, 0, 0, 0, 219,
	0, 369, 339, 427, 203, 246, 362, 344, 367, 0,
	0, 368, 290, 415, 357, 425, 443, 444, 226, 319,
	433, 404, 439, 455, 196, 223, 333, 397, 430, 388,
	312, 411, 412, 280, 387, 254, 182, 288, 449, 194,
	377, 211, 201, 187, 399, 423, 208, 380, 0, 0,
	457, 189, 421, 396, 308, 277, 278, 188, 0, 361,
	231, 252, 221, 328, 418, 419, 220, 458, 198, 438,
	191, 0, 437, 321, 414, 422, 309, 300, 190, 420,
	307, 299, 283, 242, 263, 355, 293, 356, 264, 317,
	316, 318, 0, 185, 0, 393, 431, 459, 204, 205,
	206, 0, 241, 245, 251, 253, 259, 260, 267, 286,
	332, 354, 352, 358, 0, 409, 426, 434, 441, 447,
	448, 450, 451, 452, 453, 454, 320, 266, 389, 282,
	291, 0, 0, 338, 370, 209, 429, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 192, 287,
	0, 359, 249, 456, 436, 432, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 678, 0, 0,
	0, 180, 181, 193, 202, 212, 224, 239, 247, 257,
	262, 265, 270, 271, 274, 279, 297, 302, 303, 304,
	305, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 347, 348, 349, 350, 351, 353, 360, 364, 372,
	373, 374, 375, 376, 378, 379, 383, 384, 385, 386,
	394, 398, 416, 417, 428, 440, 445, 258, 424, 446,
	0, 296, 0, 0, 298, 243, 261, 272, 0, 435,
	395, 197, 366, 250, 186, 215, 200, 222, 237, 240,
	276, 306, 313, 342, 346, 255, 234, 213, 363, 210,
	381, 401, 402, 403, 405, 310, 229, 345, 406, 0,
	294, 407, 408, 268, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 0, 0, 285, 230, 0, 0, 343, 0, 184,
	0, 382, 218, 295, 292, 413, 244, 236, 232, 217,
	269, 301, 341, 400, 335, 0, 289, 0, 0, 391,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 216, 183, 326,
	392, 248, 0, 0, 0, 0, 175, 176, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 533, 0, 256, 0, 315, 0, 0, 0, 0,
	442, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	281, 179, 195, 0, 0, 325, 365, 371, 0, 0,
	0, 219, 0, 369, 339, 427, 203, 246, 362, 344,
	367, 0, 0, 368, 290, 415, 357, 425, 443, 444,
	226, 319, 433, 404, 439, 455, 196, 223, 333, 397,
	430, 388, 312, 411, 412, 280, 387, 254, 182, 288,
	449, 194, 377, 211, 201, 187, 399, 423, 208, 380,
	0, 0, 457, 189, 421, 396, 308, 277, 278, 188,
	0, 361, 231, 252, 221, 328, 418, 419, 220, 458,
	198, 438, 191, 0, 437, 321, 414, 422, 309, 300,
	190, 420, 307, 299, 283, 242, 263, 355, 293, 356,
	264, 317, 316, 318, 0, 185, 0, 393, 431, 459,
	204, 205, 206, 0, 241, 245, 251, 253, 259, 260,
	267, 286, 332, 354, 352, 358, 0, 409, 426, 434,
	441, 447, 448, 450, 451, 452, 453, 454, 320, 266,
	389, 282, 291, 0, 0, 338, 370, 209, 429, 390,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	192, 287, 0, 359, 249, 456, 436, 432, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 270, 271, 274, 279, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 378, 379, 383, 384,
	385, 386, 394, 398, 416, 417, 428, 440, 445, 532,
	424, 446, 0, 296, 0, 0, 298, 243, 261, 272,
	0, 435, 395, 197, 366, 250, 186, 215, 200, 222,
	237, 240, 276, 306, 313, 342, 346, 255, 234, 213,
	363, 210, 381, 401, 402, 403, 405, 310, 229, 345,
	406, 0, 294, 407, 408, 268, 0, 0, 0, 0,
	0, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 0, 0, 285, 230, 0, 0, 343,
	0, 184, 0, 382, 218, 295, 292, 413, 244, 236,
	232, 217, 269, 301, 341, 400, 335, 0, 289, 0,
	0, 391, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 216,
	183, 326, 392, 248, 0, 0, 0, 0, 175, 176,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 273, 235, 227, 410, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 315, 0, 0,
	480, 0, 442, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 281, 179, 195, 0, 0, 325, 365, 371,
	0, 0, 0, 219, 0, 369, 339, 427, 203, 246,
	362, 344, 367, 0, 0, 368, 290, 415, 357, 425,
	443, 444, 226, 319, 433, 404, 439, 455, 196, 223,
	333, 397, 430, 388, 312, 411, 412, 280, 387, 254,
	182, 288, 449, 194, 377, 211, 201, 187, 399, 423,
	208, 380, 0, 0, 457, 189, 421, 396, 308, 277,
	278, 188, 0, 361, 231, 252, 221, 328, 418, 419,
	220, 458, 198, 438, 191, 0, 437, 321, 414, 422,
	309, 300, 190, 420, 307, 299, 283, 242, 263, 355,
	293, 356, 264, 317, 316, 318, 0, 185, 0, 393,
	431, 459, 204, 205, 206, 0, 241, 245, 251, 253,
	259, 260, 267, 286, 332, 354, 352, 358, 0, 409,
	426, 434, 441, 447, 448, 450, 451, 452, 453, 454,
	320, 266, 389, 282, 291, 0, 0, 338, 370, 209,
	429, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 192, 287, 0, 359, 249, 456, 436, 432,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 181, 193, 202, 212,
	224, 239, 247, 257, 262, 265, 270, 271, 274, 279,
	297, 302, 303, 304, 305, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 347, 348, 349, 350, 351,
	353, 360, 364, 372, 373, 374, 375, 376, 378, 379,
	383, 384, 385, 386, 394, 398, 416, 417, 428, 440,
	445, 258, 424, 446, 0, 296, 0, 0, 298, 243,
	261, 272, 0, 435, 395, 197, 366, 250, 186, 215,
	200, 222, 237, 240, 276, 306, 313, 342, 346, 255,
	234, 213, 363, 210, 381, 401, 402, 403, 405, 310,
	229, 345, 406, 0, 294, 407, 408, 268, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 233, 0, 0, 0, 0, 285, 230, 0,
	0, 343, 0, 184, 0, 382, 218, 295, 292, 413,
	244, 236, 232, 217, 269, 301, 341, 400, 335, 0,
	289, 0, 0, 391, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 216, 183, 326, 392, 248, 0, 0, 0, 0,
	175, 176, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 273, 235, 227, 410,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 315,
	0, 0, 0, 0, 442, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 281, 179, 195, 0, 0, 325,
	365, 371, 0, 0, 0, 219, 0, 369, 339, 427,
	203, 246, 362, 344, 367, 0, 0, 368, 290, 415,
	357, 425, 443, 444, 226, 319, 433, 404, 439, 455,
	196, 223, 333, 397, 430, 388, 312, 411, 412, 280,
	387, 254, 182, 288, 449, 194, 377, 211, 201, 187,
	399, 423, 208, 380, 0, 0, 457, 189, 421, 396,
	308, 277, 278, 188, 0, 361, 231, 252, 221, 328,
	418, 419, 220, 458, 198, 438, 191, 0, 437, 321,
	414, 422, 309, 300, 190, 420, 307, 299, 283, 242,
	263, 355, 293, 356, 264, 317, 316, 318, 0, 185,
	0, 393, 431, 459, 204, 205, 206, 0, 241, 245,
	251, 253, 259, 260, 267, 286, 332, 354, 352, 358,
	0, 409, 426, 434, 441, 447, 448, 450, 451, 452,
	453, 454, 320, 266, 389, 282, 291, 0, 0, 338,
	370, 209, 429, 390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 192, 287, 0, 359, 249, 456,
	436, 432, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 181, 193,
	202, 212, 224, 239, 247, 257, 262, 265, 270, 271,
	274, 279, 297, 302, 303, 304, 305, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 347, 348, 349,
	350, 351, 353, 360, 364, 372, 373, 374, 375, 376,
	378, 379, 383, 384, 385, 386, 394, 398, 416, 417,
	428, 440, 445, 258, 424, 446, 0, 296, 0, 0,
	298, 243, 261, 272, 0, 435, 395, 197, 366, 250,
	186, 215, 200, 222, 237, 240, 276, 306, 313, 342,
	346, 255, 234, 213, 363, 210, 381, 401, 402, 403,
	405, 310, 229, 345, 406, 0, 294, 407, 408, 268,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 285,
	230, 0, 0, 343, 0, 184, 0, 382, 218, 295,
	292, 413, 244, 236, 232, 217, 269, 301, 341, 400,
	335, 0, 289, 0, 0, 391, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 216, 183, 326, 392, 248, 0, 0,
	0, 0, 175, 176, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 273, 235,
	227, 410, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 315, 0, 0, 0, 0, 442, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 281, 179, 195, 0,
	0, 325, 365, 371, 0, 0, 0, 219, 0, 369,
	339, 427, 203, 246, 362, 344, 367, 0, 0, 368,
	290, 415, 357, 425, 443, 444, 226, 319, 433, 404,
	439, 455, 196, 223, 333, 397, 430, 388, 312, 411,
	412, 280, 387, 254, 182, 288, 449, 194, 377, 211,
	201, 187, 399, 423, 208, 380, 0, 0, 457, 189,
	421, 396, 308, 277, 278, 188, 0, 361, 231, 252,
	221, 328, 418, 419, 220, 458, 198, 438, 191, 0,
	437, 321, 414, 422, 309, 300, 190, 420, 307, 299,
	283, 242, 263, 355, 293, 356, 264, 317, 316, 318,
	0, 185, 0, 393, 431, 459, 204, 205, 206, 0,
	241, 245, 251, 253, 259, 260, 267, 286, 332, 354,
	352, 358, 0, 409, 426, 434, 441, 447, 448, 450,
	451, 452, 453, 454, 320, 266, 389, 282, 291, 0,
	0, 338, 370, 209, 429, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 192, 287, 0, 359,
	249, 456, 436, 432, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	181, 193, 202, 212, 224, 239, 247, 257, 262, 265,
	270, 271, 274, 279, 297, 302, 303, 304, 305, 2455,
	323, 324, 327, 330, 331, 334, 336, 337, 340, 347,
	348, 349, 350, 351, 353, 360, 364, 372, 373, 374,
	375, 376, 378, 379, 383, 384, 385, 386, 394, 398,
	416, 417, 428, 440, 445, 258, 424, 446, 0, 296,
	0, 0, 298, 243, 261, 272, 0, 435, 395, 197,
	366, 250, 186, 215, 200, 222, 237, 240, 276, 306,
	313, 342, 346, 255, 234, 213, 363, 210, 381, 401,
	402, 403, 405, 310, 229, 345, 79, 0, 294, 407,
	408, 268, 606, 613, 614, 615, 616, 607, 609, 0,
	0, 0, 608, 0, 0, 0, 0, 0, 0, 0,
	611, 617, 618, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2104, 2105, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 594, 0, 0, 0, 595, 596, 0,
	0, 0, 597,
}

var yyPact = [...]int{
	3028, -1000, -378, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1740, 1768, -1000, -1000, -1000, 1862, -1000, 684,
	1528, -1000, 1753, 3962, -1000, 33085, 458, -1000, 32543, 457,
	227, 33085, -1000, 152, -1000, 113, 33085, 143, 32001, -1000,
	-1000, -289, 13565, 1690, 1, -2, 33085, -1000, 1842, 1544,
	-1000, 300, -1000, -1000, -1000, -1000, -1000, -1000, 31459, -1000,
	-1000, -1000, 1758, 1742, 1865, 589, 1710, -1000, 1799, 1544,
	-1000, 13565, 1824, 1790, 13023, -1000, 373, -1000, -1000, 9764,
	-1000, -1000, 18445, 33085, 33085, 232, -1000, 1753, -1000, -1000,
	318, -1000, 266, 1468, -1000, 1466, -1000, 535, 531, 289,
	408, 403, 287, 285, 283, 281, 278, 277, 275, 273,
	301, -1000, 645, 645, -142, -148, 2660, 329, 329, 329,
	382, 1726, 1716, -1000, 663, -1000, 645, 645, 317, 645,
	645, 645, 645, 234, 233, 645, 645, 645, 645, 645,
	645, 645, 645, 645, 645, 645, 645, 645, 645, 645,
	292, 1753, 217, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 33085, 131,
	33085, -1000, 521, 33085, 728, 728, 114, 728, 728, 728,
	728, 123, 533, -8, -1000, 122, 224, 115, 213, 741,
	108, 116, -1000, -1000, 209, 741, 1153, 600, 87, -1000,
	728, 7564, 7564, 7564, -1000, 1738, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 381, -1000, -1000, -1000, -1000, 33085,
	30917, 274, 655, -1000, -1000, -1000, 98, -1000, -1000, 1311,
	719, 13565, 869, -1000, 1367, 572, -1000, -1000, -1000, -1000,
	-1000, 489, 14107, 14107, 14107, 14107, -1000, -1000, 1475, 1475,
	1475, 1475, 14107, 1475, 14107, 1475, 1475, 1475, 1475, 13565,
	1475, 1475, 1475, -1000, 1475, 1475, 1475, 1475, 1475, 1475,
	1475, 1475, 1475, 1475, 520, 1475, 1475, 1475, 1475, 1475,
	-1000, -1000, -1000, -1000, 1475, 1475, 1475, 1475, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	16275, -1000, 11397, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 33085, -1000, 1475, 129, 1799, 1544, -1000, 1842, 1817,
	300, -1000, 1715, 1442, 1262, 1163, 1544, 1457, 33085, -1000,
	1483, -1000, -1000, -1000, 1635, 1081, 1150, -1000, -1000, -1000,
	-1000, 1072, 13565, -1000, -1000, 1855, -1000, 15733, 517, 801,
	30375, -1000, 373, 373, 1465, 9214, -31, -1000, -1000, -1000,
	652, 21155, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1738, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1447, 33085,
	-1000, -1000, 5002, 1115, -1000, 1527, -1000, 1441, -1000, 1487,
	1537, 449, 1115, 435, 402, 391, -1000, -88, -1000, -1000,
	-1000, -1000, -1000, 645, 645, 279, 3962, 4721, -1000, -1000,
	-1000, 29833, 1523, 1115, -1000, 1518, -1000, 732, 428, 519,
	519, 1115, -1000, -1000, 33085, 1115, 731, 714, 33085, 33085,
	-1000, 29291, -1000, 28749, 28207, 1021, 33085, 27665, 27123, 26581,
	26039, 25497, -1000, 1595, -1000, 1516, -1000, -1000, -1000, 33085,
	33085, 33085, 264, -1000, -1000, 33085, 1115, -1000, -1000, 1013,
	1012, 645, 645, 1000, 1148, 1131, 1129, 645, 645, 995,
	1126, 22781, 207, 990, 989, 980, 1009, 1124, 177, 996,
	906, 972, 33085, 1517, 33085, -1000, 205, 668, 357, 650,
	1753, 1688, 1460, 380, 444, 1115, 337, 337, -1000, 8114,
	-1000, -1000, 1121, 13565, -1000, 754, 741, 741, -1000, -1000,
	-1000, -1000, -1000, -1000, 728, 33085, 754, -1000, -1000, -1000,
	741, 728, 33085, 728, 728, 728, 728, 741, 741, 741,
	728, 33085, 33085, 33085, 33085, 33085, 33085, 33085, 33085, 33085,
	7564, 7564, 7564, 600, 728, -293, -1000, 1117, -1000, 1583,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 120, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -99, 1459,
	24955, -1000, -294, -296, -299, -300, -1000, -1000, -1000, -301,
	-305, -1000, -1000, -1000, 13565, 13565, 13565, 13565, -1000, 875,
	14107, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 800, 804,
	14107, 14107, 14107, 14107, 14107, 14107, 14107, 14107, 14107, 14107,
	14107, 14107, 14107, 14107, 14107, 727, 1114, 1101, 572, 572,
	572, 572, -1000, 13023, 13565, 13565, 572, -1000, 1115, 24413,
	13023, 13023, 13565, 1725, 660, 719, 33085, -1000, 1163, -1000,
	-1000, -1000, 854, -1000, 33085, 33085, 24, 33085, 33085, 14649,
	10312, 8114, 13023, 13023, 13023, 13023, 13023, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 516, 1386,
	1264, 1424, -1000, 1458, -1000, -160, 17903, 13565, 1099, -1000,
	-1000, -1000, 1799, -1000, 1799, 1386, 1660, 1640, 13023, -1000,
	-1000, 1660, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1217, -1000, 33085, 1457, 1787, 33085, 1632, 1098, 264, -1000,
	13565, 13565, 1456, -1000, 976, 33085, -1000, -1000, 23871, -1000,
	-1000, 7014, -1000, 270, 33085, -1000, 20071, 23329, 8664, -31,
	-1000, 8664, 1375, -1000, -28, -36, 10854, 571, -1000, -1000,
	-1000, 2660, 15191, 1270, 1696, 44, -1000, -1000, -1000, 1487,
	-1000, 1487, 1487, 1487, 1487, 264, 264, 264, 264, -1000,
	-1000, -1000, -1000, -1000, 1515, 1510, -1000, 1487, 1487, 1487,
	1487, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1509, 1509,
	1509, 1490, 1490, 324, -1000, 13565, 218, 33085, 1767, 952,
	205, 359, 1548, 1115, 1115, 1115, 359, -1000, 1277, 1258,
	-1000, 1451, -1000, -1000, 1823, -1000, -1000, 445, 755, 751,
	615, 33085, 166, 268, -1000, 322, -1000, 33085, 1115, 710,
	519, 1115, -1000, 1115, -1000, -1000, -1000, -1000, -1000, 1115,
	1449, -1000, 1309, 776, 748, 766, 726, 1449, -1000, -1000,
	-114, 1449, -1000, 1449, -1000, 1449, -1000, 1449, -1000, 1449,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 647, 33085,
	166, 727, -1000, 379, -1000, -1000, 727, 727, -1000, -1000,
	-1000, -1000, 1080, 1065, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -354, 33085, -1000, 197, 648, 248, 284, 230, 33085,
	215, 1794, 247, 231, 33085, 33085, 337, 1580, 33085, 1775,
	33085, -1000, -1000, -1000, -1000, 719, 33085, -1000, -1000, 728,
	728, -1000, -1000, 33085, 728, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 728, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 33085, 33085, -1000, -1000, -1000, -1000, -1000, 127, -30,
	282, -1000, -1000, -1000, -1000, -1000, 1796, -1000, 719, 763,
	689, -1000, -1000, -1000, 954, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 800, 14107, 14107, 14107, 2198, 414, 1227, 1120,
	1011, 775, 775, 802, 802, 576, 576, 576, 576, 576,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1397, -1000, 841,
	959, 1163, -1000, 1397, 1397, 867, 13023, -1000, -1000, 703,
	-1000, 13565, 1163, -1000, -1000, 1163, 1426, 1422, 1852, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1163, 1420, 1163, 1163, 1062, 1163, 13023, 13023, 1415, 1475,
	507, -1000, 1397, 1163, 1163, 1397, 1397, 8114, 1163, -1000,
	33085, -1000, -285, -1000, -49, 514, 1475, -1000, 22781, 1163,
	1311, -1000, -1000, -1000, -1000, -1000, 20613, 1478, 1660, -1000,
	-1000, 1475, 1417, -1000, -1000, 264, 33, 818, 719, 719,
	13565, -1000, -1000, -1000, -1000, -1000, -1000, 506, 269, 1475,
	-1000, 1282, 1585, -1000, -1000, -1000, 1786, 16818, -1000, 1507,
	33085, 1453, 1416, -1000, 494, -1000, 1375, -31, -42, -1000,
	-1000, -1000, -1000, 719, -1000, 1240, 272, 276, -1000, 336,
	-1000, -1000, -1000, -1000, 764, 1785, 1694, 28, -1000, -1000,
	-1000, 264, 264, -1000, -1000, -1000, -1000, -1000, -1000, 1060,
	1060, -1000, -1000, -1000, -1000, -1000, 940, -1000, -1000, -1000,
	907, -1000, -1000, 1198, 1581, 218, -1000, -1000, 645, 1058,
	1711, 33085, -1000, -1000, 1244, 197, 33085, 669, 1573, -1000,
	1548, 1548, 1548, 33085, -1000, -1000, -1000, -1000, 4363, 33085,
	1404, -1000, 163, -1000, 1231, 33085, -1000, 1402, 1504, 1115,
	1115, -1000, -1000, -1000, 33085, 1475, -1000, -1000, -1000, -1000,
	443, 1750, 1741, 166, 163, 571, 1115, -1000, -1000, -1000,
	-1000, -1000, -357, 1399, 385, 174, 237, 33085, 33085, 33085,
	33085, 33085, 472, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 229, 377, -1000, 33085, 33085, 468, -1000, -1000, -1000,
	741, -1000, -1000, 741, -1000, -1000, -1000, -1000, -1000, 1734,
	33085, -32, -326, -1000, -323, -1000, -1000, -1000, -1000, 1513,
	395, 1227, 14107, 14107, 13023, -102, 637, 637, 727, -1000,
	-1000, -1000, 13565, 13565, 1307, 616, -1000, 13565, 836, -1000,
	-1000, 13565, 13565, 13565, -1000, 33085, -1000, -1000, -1000, 1397,
	1397, 13023, 8114, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 390, 388, 387, 33085, -1000, -1000, 1801,
	-1000, 1649, 1648, 1840, 1834, -1000, 20071, 1660, -1000, -1000,
	33085, -280, -1000, 1685, 1681, -1000, -1000, -1000, -1000, 6464,
	1572, 33085, 1475, -1000, 17361, 33085, 33085, 20071, 20071, 20071,
	20071, 20071, -1000, 1621, 1612, -1000, 1611, 1609, 1620, 33085,
	-1000, 1395, 1163, 1817, 16818, 13565, 18987, 1454, 20071, -1000,
	-1000, 20071, 33085, 5914, -1000, -1000, -37, -48, -1000, -1000,
	-1000, -1000, 1822, 2660, -1000, -1000, -1000, -1000, 787, 34094,
	1864, -1000, 1043, -1000, 1092, -1000, 701, 678, -1000, 33085,
	1501, -1000, -1000, -1000, -1000, -1000, 1391, -1000, 1389, 1373,
	1379, 140, -1000, 1536, 1733, 645, 645, -1000, 904, -1000,
	1115, -1000, -1000, 384, -1000, 1774, 33085, 1571, 1562, 1559,
	-1000, 1820, 1321, 33085, -1000, -1000, 33085, -1000, 1647, 218,
	33085, -1000, -1000, -1000, 268, 33085, -1000, 15166, 163, -1000,
	-1000, -1000, -1000, -1000, -1000, 33085, 193, -1000, 1500, 1094,
	-1000, 1486, -1000, -1000, -1000, -1000, 119, 242, -1000, 33085,
	450, 1581, 33085, -1000, -1000, -1000, 728, 728, -1000, -1000,
	1732, -1000, 1115, 14107, 14107, -1000, 572, -1000, 1475, 1163,
	1487, 1487, -1000, 1487, 1490, -1000, 1487, 91, 1487, 89,
	1163, 1163, 943, 969, -96, -1000, 719, 13565, 1059, 992,
	1091, 1163, -1000, -1000, 1163, -1000, 1475, 1475, 1475, 1351,
	33085, -1000, -1000, -1000, -1000, 1834, 1832, 13565, 1358, -1000,
	-1000, 33, 319, -1000, 1701, 1681, -1000, 1819, 1663, 1814,
	-1000, -1000, -1000, 1755, 1257, -1000, 643, 1305, -1000, -1000,
	12481, 1377, 1645, 488, 1351, 1455, 1585, 1542, 1558, 1511,
	-1000, -1000, -1000, -1000, 1610, -1000, 1575, -1000, -1000, 1483,
	-1000, -1000, 1264, 982, 270, 20071, 1337, 1337, -1000, 486,
	-1000, -1000, -1000, -1000, -367, -1000, -1000, 13565, -1000, -1000,
	-1000, -1000, -1000, -1000, 809, 809, 442, -1000, -1000, -1000,
	-1000, -1000, 1485, 13565, 264, 1042, 264, 900, -1000, 895,
	-1000, -1000, -193, -1000, -1000, 1467, 1565, -1000, -1000, 33085,
	-1000, -1000, 33085, 33085, 33085, 33085, -1000, -1000, 257, -1000,
	1349, 1315, -1000, -145, -1000, 13565, -1000, 1483, -1000, -1000,
	-1000, 1229, -1000, -124, 33085, 33085, 33085, 33085, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 572, 14107, -1000,
	-1000, 320, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	13565, -1000, 13565, -1000, 1799, 1041, 719, 13565, 13565, -1000,
	-1000, -1000, 19529, 22239, 22239, 18987, -1000, 1832, 1830, 1813,
	719, 1657, 1667, 1667, 1701, -1000, 1809, 1808, -1000, 1039,
	1805, 1038, 674, -1000, 33085, 13565, 1475, -1000, 290, 33085,
	1475, 33085, -1000, 1802, -1000, -1000, 13565, 1484, -1000, 13565,
	-1000, -1000, -1000, -1000, -1000, 15707, 1834, 1337, -1000, -1000,
	582, 57, 286, -1000, -1000, -1000, 1091, -1000, -1000, -1000,
	33085, 1170, -1000, -1000, -1000, 1220, 1207, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1483, -1000, -1000, -1000, 1321,
	253, 302, -1000, 268, -1000, -153, -157, 1091, 1784, -1000,
	-1000, 8114, -1000, -1000, 1482, 1543, -1000, 246, -1000, -1000,
	1091, 1091, 1163, -1000, 1091, 1091, 1303, -1000, -1000, -1000,
	1303, 1303, 514, 1830, -1000, 13565, 13565, 1653, 870, -1000,
	-1000, -1000, -1000, 1035, 1030, -1000, 1027, -1000, 1860, -1000,
	719, -1000, 1475, -1000, 484, 1305, -1000, 1799, 719, 33085,
	719, 17, 1802, -1000, 1477, 1535, -360, 13565, 1476, -1000,
	1301, -1000, -1000, -1000, 1777, 1475, -1000, -1000, -1000, -1000,
	-1000, 300, 1319, -1000, 636, 33085, 33085, 1163, 249, -128,
	-1000, -1000, -1000, -1000, -1000, 21697, -1000, -1000, -1000, -1000,
	-1000, 719, 1311, -1000, 866, -1000, -1000, -1000, -1000, -1000,
	33085, 1305, 33085, -1000, 1284, 1203, 1474, 1799, 13565, 1472,
	612, -365, 886, 1154, 33085, 1557, 673, 300, 11939, -118,
	8114, 5364, 1255, -1000, -1000, 1630, -110, -137, -1000, -1000,
	-1000, -1000, 1288, -1000, -1000, 18987, 33627, -1000, 1127, 33085,
	878, 1470, 1803, -1000, -1000, 1250, 1556, -1000, 1839, -1000,
	-1000, -1000, 769, 984, -1000, -1000, -1000, -118, 1091, 1163,
	-1000, -39, -1000, -1000, -1000, -1000, -1000, 1486, -1000, 1629,
	-1000, -1000, 1235, -1000, 4782, -252, -360, 1223, -1000, -1000,
	268, -364, -1000, -1000, 1844, 620, 620, -1000, -1000, -1000,
	-1000, -1000, 307, -1000, -1000, -124, -126, -1000, 33627, -244,
	571, 15707, -365, -360, 1180, 53, -1000, -1000, -1000, 295,
	888, -1000, 202, -1000, -129, -1000, -1000, 1770, 17, 1470,
	-365, -1000, 1471, 1535, -1000, -1000, -1000, -1000, -139, -253,
	-1000, -1000, -1000, 1470, 13565, 1278, -1000, 15707, -1000, 988,
	33085, 172, -372, 1175, 172, -1000, 1555, -1000, -1000, 16249,
	-1000, 820, -372, -1000, 1551, -225, -1000, -1000, -1000, -312,
	-1000, -1000,
}

var yyPgo = [...]int{
	0, 18, 2163, 15, 1, 7, 2162, 25, 87, 170,
	24, 176, 84, 2161, 2160, 2159, 197, 196, 195, 2153,
	2152, 2151, 2150, 2149, 2148, 2147, 2146, 2141, 2138, 193,
	148, 167, 2137, 2132, 2131, 101, 165, 75, 78, 169,
	2129, 2128, 64, 2127, 2126, 2125, 166, 162, 726, 2124,
	149, 94, 2123, 2122, 2119, 2117, 2116, 2100, 2099, 2098,
	2097, 2096, 2095, 2094, 2093, 2090, 263, 2089, 2088, 21,
	2087, 66, 2084, 2083, 2082, 2081, 2080, 13, 2079, 2078,
	2077, 2075, 131, 2073, 2072, 2071, 172, 2070, 2067, 2066,
	285, 111, 91, 2064, 2063, 89, 168, 2062, 102, 144,
	2061, 2058, 371, 3, 74, 65, 2057, 141, 70, 2,
	62, 9, 2056, 2055, 85, 82, 2053, 90, 53, 2051,
	106, 88, 2050, 2049, 14, 16, 2048, 6, 2045, 5,
	48, 2044, 2043, 109, 2042, 2040, 2039, 83, 2038, 2036,
	2393, 2035, 80, 119, 34, 55, 2034, 2033, 2029, 2028,
	2024, 47, 2022, 2020, 2019, 123, 33, 2018, 35, 50,
	44, 125, 2017, 127, 71, 2016, 122, 2015, 2014, 54,
	32, 36, 2005, 38, 117, 147, 56, 99, 124, 1997,
	1996, 45, 73, 1995, 1994, 1991, 1990, 1989, 1988, 68,
	1987, 43, 1986, 175, 1978, 8, 40, 69, 60, 126,
	58, 31, 1977, 160, 1976, 42, 161, 116, 146, 1974,
	1971, 1970, 164, 231, 1969, 1968, 72, 152, 128, 132,
	1961, 262, 1958, 1957, 108, 1089, 1723, 39, 143, 1955,
	1954, 1946, 2824, 130, 118, 27, 1945, 135, 1943, 1941,
	1940, 171, 151, 92, 872, 98, 19, 1938, 1936, 1934,
	1930, 1929, 1928, 180, 179, 61, 11, 137, 63, 1926,
	1925, 1922, 113, 93, 1921, 138, 136, 114, 154, 1920,
	153, 129, 157, 1919, 86, 1918, 1917, 1916, 1915, 81,
	1914, 1913, 1912, 1911, 145, 134, 110, 76, 1909, 77,
	112, 140, 142, 20, 10, 37, 163, 29, 1908, 12,
	0, 1907, 22, 155, 264, 150, 1906, 1901, 17, 1898,
	23, 1897, 1895, 121, 1894, 1892, 1891, 30, 41, 28,
	4, 1887, 1885, 3136, 1604, 120, 1878, 173,
}

//line sql.y:6117
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprOrColumnsUnion() *ExprOrColumns {
	v, _ := st.union.(*ExprOrColumns)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintsUnion() *IndexHints {
	v, _ := st.union.(*IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 321, 322, 322, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 300, 300, 300, 303, 303, 27,
	61, 29, 29, 28, 28, 31, 31, 30, 7, 7,
	7, 8, 8, 8, 8, 8, 8, 8, 8, 9,
	9, 9, 9, 9, 10, 10, 10, 10, 12, 12,
	12, 12, 12, 15, 11, 11, 16, 16, 73, 73,
	17, 18, 18, 18, 18, 325, 325, 135, 135, 133,
	133, 123, 125, 126, 126, 124, 124, 124, 124, 124,
	124, 89, 89, 128, 127, 129, 129, 129, 134, 134,
	198, 198, 19, 20, 20, 208, 208, 207, 207, 207,
	209, 209, 209, 209, 244, 244, 21, 21, 21, 21,
	21, 87, 87, 302, 302, 301, 299, 299, 298, 298,
	297, 33, 34, 43, 43, 43, 43, 44, 45, 304,
	304, 275, 49, 49, 48, 48, 48, 48, 50, 50,
	47, 47, 46, 46, 277, 277, 264, 264, 276, 276,
	276, 276, 276, 276, 276, 263, 263, 101, 101, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	316, 316, 180, 180, 180, 180, 180, 180, 106, 106,
	114, 114, 114, 114, 104, 104, 105, 103, 103, 103,
	109, 109, 109, 109, 109, 109, 109, 109, 109, 109,
	109, 109, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 113, 113, 110, 110, 111, 111, 111,
	317, 317, 317, 317, 246, 246, 246, 246, 249, 249,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 248,
	248, 248, 248, 248, 250, 250, 250, 250, 250, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 252, 252, 252, 252, 252, 252,
	252, 252, 262, 262, 253, 253, 257, 257, 258, 258,
	258, 259, 259, 259, 260, 260, 255, 255, 255, 255,
	256, 256, 256, 265, 289, 289, 288, 288, 286, 286,
	286, 286, 274, 274, 283, 283, 283, 283, 283, 273,
	273, 269, 269, 269, 270, 270, 271, 271, 268, 268,
	272, 272, 285, 285, 284, 266, 266, 267, 267, 291,
	318, 318, 318, 318, 319, 319, 292, 309, 310, 308,
	308, 308, 308, 308, 71, 71, 71, 220, 220, 220,
	281, 281, 280, 280, 280, 282, 282, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 215, 215, 215, 307, 307,
	307, 307, 307, 307, 306, 306, 306, 278, 278, 278,
	305, 305, 51, 51, 164, 164, 40, 40, 40, 40,
	40, 40, 39, 39, 39, 35, 35, 35, 35, 35,
	35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
	35, 35, 35, 35, 35, 35, 35, 35, 41, 41,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 75,
	75, 75, 75, 77, 77, 77, 294, 294, 1, 1,
	5, 5, 2, 2, 76, 76, 3, 3, 4, 4,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 261, 261, 261, 293, 293, 295, 295, 23,
	32, 32, 24, 24, 24, 24, 25, 25, 52, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 311, 311, 214,
	214, 222, 222, 213, 213, 237, 237, 237, 216, 216,
	216, 217, 217, 315, 315, 315, 54, 54, 56, 56,
	57, 58, 58, 239, 239, 240, 240, 59, 60, 72,
	72, 72, 72, 72, 72, 74, 74, 74, 14, 14,
	14, 14, 68, 68, 68, 13, 13, 55, 55, 62,
	312, 312, 313, 314, 314, 314, 314, 63, 65, 26,
	26, 26, 26, 26, 26, 94, 94, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 82, 82, 82, 88,
	88, 88, 83, 83, 326, 66, 67, 67, 86, 86,
	86, 80, 80, 80, 85, 85, 85, 91, 91, 93,
	93, 93, 93, 93, 95, 95, 95, 95, 95, 95,
	95, 90, 90, 92, 92, 92, 92, 229, 229, 229,
	228, 228, 117, 117, 119, 118, 118, 120, 120, 121,
	121, 121, 121, 162, 143, 143, 196, 196, 195, 195,
	197, 197, 197, 197, 199, 199, 122, 122, 122, 122,
	130, 130, 131, 131, 132, 132, 238, 238, 235, 235,
	235, 234, 234, 136, 136, 136, 138, 137, 137, 137,
	137, 139, 139, 141, 141, 140, 140, 142, 144, 144,
	144, 144, 144, 145, 145, 102, 102, 102, 102, 102,
	102, 112, 112, 112, 112, 115, 115, 115, 115, 115,
	115, 115, 115, 115, 115, 115, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 211, 211, 146, 146, 154, 154, 154, 154,
	147, 147, 147, 147, 147, 147, 147, 155, 155, 155,
	161, 156, 156, 152, 152, 152, 152, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 230,
	230, 230, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 327, 327, 254, 254, 254, 153, 153,
	153, 153, 153, 84, 84, 84, 84, 84, 243, 243,
	243, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 167, 167, 81, 81, 165, 165,
	166, 168, 168, 163, 163, 163, 149, 149, 149, 169,
	169, 170, 170, 171, 171, 173, 172, 172, 174, 175,
	175, 175, 176, 176, 177, 177, 177, 42, 42, 42,
	42, 42, 37, 37, 37, 37, 38, 38, 38, 96,
	96, 96, 96, 98, 98, 97, 97, 69, 69, 70,
	70, 70, 99, 99, 100, 100, 100, 100, 193, 193,
	178, 178, 178, 185, 185, 185, 181, 181, 183, 183,
	183, 184, 184, 184, 182, 190, 190, 192, 192, 191,
	191, 187, 187, 188, 188, 189, 189, 189, 186, 186,
	148, 148, 148, 148, 148, 194, 194, 194, 194, 200,
	200, 158, 158, 160, 160, 159, 116, 201, 201, 205,
	202, 202, 206, 206, 206, 206, 206, 203, 203, 204,
	204, 231, 231, 231, 210, 210, 221, 221, 218, 218,
	219, 219, 212, 212, 223, 223, 223, 64, 157, 157,
	290, 290, 287, 226, 226, 227, 227, 232, 232, 236,
	236, 233, 233, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 323, 324, 241, 242, 242, 242,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 0, 1, 2,
	3, 2, 3, 0, 1, 3, 1, 4, 3, 3,
	4, 3, 2, 3, 4, 3, 4, 2, 7, 1,
	3, 3, 3, 3, 1, 2, 1, 1, 3, 2,
	3, 3, 2, 5, 9, 8, 7, 8, 1, 1,
	10, 11, 9, 8, 8, 1, 1, 1, 3, 1,
	3, 8, 4, 1, 3, 3, 6, 7, 7, 8,
	4, 0, 1, 3, 3, 1, 1, 2, 1, 3,
	0, 4, 3, 5, 4, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 1, 1, 2, 2, 6, 12,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 6, 4, 7, 8, 8, 8, 6, 3, 1,
	1, 5, 0, 1, 1, 1, 2, 2, 0, 1,
	4, 4, 4, 4, 2, 4, 1, 3, 1, 1,
	3, 4, 3, 3, 3, 4, 9, 0, 2, 0,
	2, 3, 5, 3, 4, 2, 3, 2, 3, 3,
	1, 1, 0, 2, 2, 3, 3, 2, 1, 1,
	2, 2, 2, 2, 1, 1, 1, 1, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 1, 2, 1, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 3,
	3, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 5, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 3, 0, 5, 0, 3,
	5, 0, 1, 1, 0, 1, 0, 2, 2, 2,
	0, 2, 2, 5, 0, 1, 1, 2, 1, 3,
	2, 3, 0, 1, 4, 3, 3, 4, 2, 0,
	2, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	0, 1, 1, 3, 3, 3, 1, 3, 1, 7,
	5, 6, 6, 7, 0, 1, 5, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 1, 0, 1, 2,
	0, 1, 1, 3, 2, 1, 2, 3, 3, 4,
	4, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 5, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 1, 0, 2, 0, 1, 5, 1,
	3, 7, 1, 3, 3, 1, 2, 2, 2, 5,
	5, 5, 6, 8, 6, 5, 5, 2, 2, 2,
	2, 3, 3, 3, 4, 1, 3, 5, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 2,
	4, 4, 2, 11, 3, 6, 8, 6, 6, 6,
	13, 8, 6, 10, 5, 5, 5, 5, 5, 0,
	10, 11, 7, 0, 8, 9, 0, 3, 0, 1,
	0, 3, 1, 1, 3, 4, 0, 2, 0, 2,
	5, 3, 7, 4, 4, 4, 4, 3, 3, 3,
	7, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 0, 2, 2, 1, 3, 8, 8, 3,
	3, 5, 7, 7, 6, 5, 3, 2, 3, 3,
	3, 7, 3, 3, 3, 3, 4, 7, 5, 2,
	4, 4, 4, 4, 4, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 2, 4,
	2, 4, 5, 4, 4, 4, 4, 4, 3, 3,
	3, 5, 2, 3, 3, 3, 3, 1, 1, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 2, 1, 1, 2,
	1, 1, 5, 0, 1, 0, 1, 2, 3, 0,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 3, 3, 2, 2, 3,
	1, 3, 2, 1, 2, 1, 2, 2, 4, 3,
	3, 6, 4, 7, 6, 1, 3, 2, 2, 2,
	2, 1, 1, 1, 3, 2, 1, 1, 1, 0,
	1, 1, 0, 3, 0, 2, 0, 2, 1, 2,
	2, 0, 1, 1, 0, 1, 1, 0, 1, 0,
	1, 2, 3, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 3, 1, 3, 3, 7, 0, 3, 1, 3,
	1, 1, 3, 3, 1, 3, 4, 4, 4, 3,
	2, 4, 0, 1, 0, 2, 0, 1, 0, 1,
	2, 1, 1, 1, 2, 2, 1, 2, 3, 2,
	3, 2, 2, 2, 1, 1, 3, 3, 0, 5,
	4, 5, 5, 0, 2, 3, 3, 3, 2, 3,
	1, 3, 4, 3, 1, 3, 4, 5, 6, 3,
	4, 5, 6, 3, 4, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 3, 1, 1, 2, 2, 2, 2,
	1, 1, 2, 9, 6, 6, 6, 2, 2, 3,
	3, 3, 0, 3, 1, 1, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 4, 5, 5, 6, 4, 4, 8,
	6, 8, 6, 8, 5, 4, 2, 2, 1, 2,
	2, 2, 8, 8, 6, 4, 6, 4, 4, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 0, 2, 3, 4, 4,
	4, 4, 4, 0, 3, 4, 7, 3, 1, 1,
	1, 2, 3, 3, 1, 2, 2, 1, 2, 1,
	2, 2, 1, 2, 0, 1, 0, 2, 1, 2,
	4, 0, 2, 1, 3, 5, 1, 2, 2, 0,
	3, 0, 2, 0, 1, 3, 1, 3, 2, 0,
	1, 1, 0, 1, 2, 4, 4, 0, 2, 2,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 0,
	3, 3, 3, 0, 3, 1, 1, 0, 4, 0,
	1, 1, 0, 3, 1, 3, 2, 1, 2, 4,
	9, 3, 5, 0, 3, 3, 0, 1, 0, 2,
	2, 0, 2, 2, 2, 0, 2, 1, 2, 3,
	3, 0, 2, 1, 2, 3, 4, 3, 0, 1,
	2, 1, 5, 4, 4, 1, 3, 3, 5, 0,
	5, 1, 3, 1, 2, 3, 1, 1, 3, 3,
	1, 3, 3, 3, 3, 3, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 1, 1, 5, 0, 1,
	0, 1, 2, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -321, -6, -10, -15, -16, -17, -18, -19, -20,
	-21, -22, -23, -24, -25, -52, -53, -54, -56, -57,
	-58, -59, -60, -13, -55, -26, -27, -61, -62, -63,
	-64, -65, -8, -7, -12, 7, -73, -28, 29, -33,
	-43, 206, -44, -34, 207, -45, 209, 208, 244, 210,
	237, 71, 284, 285, 287, 288, 289, 290, -74, 242,
	243, 212, 33, 42, 30, 31, 34, 215, -9, -29,
	6, -323, 8, 408, 239, 238, 25, -11, 421, 82,
	-322, 555, -193, -178, 19, 30, 26, -177, -173, -86,
	-178, 17, 15, 5, -66, -326, -66, 9, 10, -66,
	-275, -277, 82, 143, 82, -66, -49, -48, -47, -46,
	-50, 28, -40, -41, -296, -39, -36, 211, 208, 252,
	110, 111, 244, 245, 246, 210, 228, 243, 247, 242,
	261, -35, 77, 30, 421, 424, -282, 207, 213, 214,
	409, 113, 112, 72, 209, -279, 334, 525, -50, 527,
	97, 99, 526, 41, 218, 528, 529, 530, 531, 227,
	532, 533, 534, 535, 541, 542, 543, 544, 114, 5,
	-66, -236, -232, -300, -225, 85, 86, 87, 418, 230,
	452, 453, 277, 77, 38, 334, 525, 284, 298, 292,
	319, 311, 419, 454, 280, 231, 265, 522, 309, 119,
	527, 283, 455, 245, 339, 340, 341, 97, 287, 376,
	540, 282, 456, 538, 99, 526, 76, 48, 41, 240,
	307, 303, 528, 266, 457, 429, 259, 113, 110, 547,
	33, 301, 47, 27, 537, 112, 46, 529, 134, 458,
	530, 343, 324, 516, 45, 344, 246, 459, 80, 423,
	524, 345, 302, 346, 276, 536, 212, 460, 508, 347,
	348, 517, 461, 325, 329, 462, 368, 349, 554, 49,
	463, 464, 518, 111, 465, 75, 531, 296, 297, 466,
	274, 229, 370, 323, 227, 32, 350, 420, 278, 55,
	253, 371, 43, 327, 551, 42, 512, 467, 515, 322,
	318, 50, 468, 469, 470, 471, 532, 321, 295, 317,
	546, 441, 271, 533, 59, 214, 331, 330, 332, 260,
	367, 314, 472, 473, 474, 234, 78, 475, 304, 18,
	476, 477, 351, 267, 478, 53, 479, 480, 374, 243,
	481, 51, 534, 36, 248, 548, 535, 482, 483, 484,
	485, 486, 353, 487, 352, 326, 328, 255, 354, 422,
	488, 300, 247, 539, 489, 235, 523, 249, 252, 242,
	375, 236, 490, 491, 492, 493, 494, 281, 495, 496,
	288, 541, 40, 497, 498, 499, 500, 275, 270, 369,
	378, 58, 79, 336, 501, 521, 294, 268, 502, 285,
	52, 542, 543, 544, 262, 545, 7, 552, 553, 356,
	114, 272, 273, 44, 315, 254, 503, 504, 305, 306,
	320, 293, 316, 286, 509, 256, 357, 244, 505, 377,
	269, 337, 426, 261, 358, 520, 425, 313, 310, 263,
	506, 359, 219, 257, 258, 507, 510, 360, 361, 279,
	362, 363, 364, 365, 366, 264, 424, 291, 308, 338,
	389, 390, 391, 392, 393, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 217, -66,
	217, -140, -232, 217, -203, 340, -222, 342, 355, 350,
	360, 348, -214, 351, 353, 255, -315, 368, 217, 357,
	206, 160, 343, 352, 361, 362, 279, 363, 366, 264,
	-311, -300, 530, 545, 119, 312, 347, 345, 369, 512,
	365, 364, -232, 286, -239, 291, -226, -300, -225, 289,
	-140, -72, 508, 210, -241, -241, -88, 512, 514, -156,
	-102, 127, -112, -115, -107, -108, -150, -151, -152, -153,
	-113, -163, 149, 150, 157, 128, -161, -116, 23, 417,
	410, 409, 160, 28, 202, 65, 66, 412, 413, 130,
	54, 385, 386, -114, 381, 387, 382, 415, 416, 100,
	101, 102, -230, -226, -232, 222, 380, 216, 155, 408,
	-109, -105, -7, -159, 379, 383, 384, 388, 103, 105,
	104, -300, -225, -111, -110, -146, 88, 93, 98, 94,
	-320, 106, -323, 89, 90, 91, 92, 107, 108, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	41, 356, 356, -140, -66, -171, -86, -173, -9, -7,
	-323, 6, -66, -7, -8, -12, -29, -31, 448, -30,
	-232, -178, -193, 9, 145, 39, 47, -176, -177, -11,
	-7, -102, 16, 20, 21, -92, 151, -102, -232, -67,
	-212, 221, -66, -66, -202, -244, 286, -206, 369, 368,
	-227, -204, -226, -224, -203, 367, 211, 427, 126, 22,
	24, 129, 160, 16, 130, 34, 213, 312, 228, 159,
	224, 409, 206, 69, 428, 381, 382, 379, 385, 411,
	412, 380, 342, 28, 10, 430, 25, 238, 21, 35,
	153, 208, 133, 241, 23, 239, 100, 108, 433, 19,
	72, 233, 11, 226, 37, 13, 434, 435, 14, 222,
	221, 145, 218, 67, 8, 202, 26, 142, 63, 436,
	121, 437, 438, 439, 440, 65, 143, 17, 549, 383,
	384, 30, 513, 417, 250, 155, 70, 56, 514, 127,
	442, 443, 106, 444, 109, 73, 519, 123, 15, 68,
	39, 445, 251, 446, 223, 550, 447, 372, 448, 144,
	209, 408, 66, 449, 216, 355, 6, 414, 29, 237,
	225, 116, 64, 450, 217, 132, 415, 416, 220, 107,
	5, 120, 31, 9, 71, 74, 386, 387, 388, 54,
	115, 421, 131, 12, 451, 373, 125, 119, -276, 143,
	-263, -267, -226, 232, -292, 228, -140, -285, -284, -226,
	-87, -221, 218, 226, 225, 120, -304, 123, 272, 380,
	216, -46, -47, -203, 159, 249, 83, 83, -267, -266,
	-265, -305, 251, 232, -291, -283, 224, 233, -273, 225,
	226, -268, 218, 121, -305, -268, 223, 233, 251, 251,
	114, 251, 114, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 248, -274, 135, -274, 425, 425, -279, -305,
	-305, -305, 220, 32, 32, -223, -268, 220, 22, -274,
	-274, -203, 159, -274, -274, -274, -274, 259, 259, -274,
	-274, -274, -274, -274, -274, -274, -274, -274, -274, -274,
	-274, -274, -274, -274, 217, -304, -96, 366, 279, 77,
	-48, 261, -32, -140, -221, 218, 219, -304, -140, 203,
	-140, -216, 143, 12, -216, -213, 356, 354, 341, 346,
	-216, -216, -216, -216, 262, 339, -269, 218, 32, 229,
	356, 262, 339, 262, 263, 262, 263, 349, 359, 262,
	-237, 11, 145, 380, 344, 348, 255, 217, 256, 219,
	358, -300, 515, 263, -237, 89, -217, 143, 356, 258,
	-216, -242, -323, -227, 312, -242, -242, 29, 220, -226,
	-68, -226, 89, -14, -10, -17, -16, -18, 135, -94,
	356, -82, 160, 530, 516, 517, 518, 515, 353, 523,
	521, 519, 262, 520, 83, 123, 125, 126, -102, 142,
	-147, 135, 136, 137, 138, 139, 140, 141, 145, 127,
	129, 143, 144, 124, 146, 147, 148, 149, 150, 151,
	152, 154, 153, 155, 156, 159, 204, 205, -108, -108,
	-108, -108, -161, -323, -323, -323, -108, -211, -323, -108,
	-323, -323, -323, -323, -167, -102, -323, -327, -323, -327,
	-327, -254, -323, -254, -323, -323, -323, -323, -323, -323,
	-323, 203, -323, -323, -323, -323, -323, -254, -254, -254,
	-254, 98, 93, 88, -163, 94, 89, -226, -232, -7,
	-8, -156, -241, -312, -313, -143, -140, -323, 279, -176,
	-11, -7, -171, -177, -173, -7, -66, -80, -93, 60,
	61, -95, 21, 35, 64, 62, 20, -324, 84, -324,
	-193, -324, 83, -31, -196, 82, 58, 40, 89, 89,
	83, 18, -172, -174, -102, 11, -229, -228, 22, -226,
	89, 203, 96, -141, 26, -140, -212, -212, 83, 286,
	-206, -244, -208, -207, 370, 372, 135, -231, -226, 89,
	28, 84, 83, -140, -246, -249, -251, -250, -252, -247,
	-248, 309, 310, 160, 313, 315, 316, 317, 318, 319,
	320, 321, 322, 323, 324, 29, 240, 305, 306, 307,
	308, 325, 326, 327, 328, 329, 330, 331, 332, 292,
	311, 419, 293, 294, 295, 296, 297, 298, 300, 301,
	302, 303, 304, -303, -300, 82, 84, 83, -253, 82,
	-96, 217, -300, 218, 218, 218, -66, 408, -274, -274,
	248, -39, -36, -296, 15, -35, -36, 211, 110, 111,
	208, 82, -263, 82, -272, -303, -300, 82, 121, 223,
	120, -271, -268, -271, -272, -300, -163, -300, 121, 121,
	-199, -226, -199, -199, 20, -199, 20, -199, 20, 91,
	-226, -199, 20, -199, 20, -199, 20, -199, 20, -199,
	20, 28, 75, 76, 28, 78, 79, 80, -163, -163,
	-263, -203, -140, -300, 91, 91, -274, -274, 91, 89,
	89, 89, -274, -274, 91, 89, -234, -232, 89, -306,
	234, 276, 278, 91, 91, 91, 91, 28, 89, -307,
	28, 537, 536, 538, 539, 540, 91, 28, 91, 28,
	91, -226, 82, -140, -99, 266, 206, 208, 211, 73,
	89, 280, 135, 41, 83, 220, 217, -300, -218, 222,
	-218, -233, -232, -224, 89, -102, -270, 11, 145, -237,
	-237, -216, -140, -270, -237, -216, -140, -216, -216, -216,
	-216, -237, -237, -237, -216, -232, -232, -140, -140, -140,
	-140, -140, -140, -140, -242, -242, -242, -217, -216, 515,
	89, 73, -240, 289, 323, 509, 510, 511, 83, 421,
	-133, -140, 515, 515, 515, 515, 515, 515, -102, -102,
	-102, -102, -154, 106, 127, 107, 108, -115, -155, -159,
	-161, 95, 145, 129, 143, 144, -107, -108, -107, -107,
	-107, -107, -107, -107, -107, -107, -107, -107, -107, -107,
	-107, -243, -300, 89, 160, 89, 89, -90, -92, -102,
	-102, -300, -226, -90, -90, -102, -85, 21, 35, -165,
	-166, 131, -163, -324, -324, 91, -226, -226, -79, -78,
	390, 391, 392, 393, 395, 396, 397, 400, 401, 405,
	406, 389, 407, 394, 399, 402, 403, 404, 398, 308,
	-163, -163, -163, -111, -320, -91, 21, 35, -90, -227,
	-233, -224, -90, -91, -91, -90, -90, 203, -193, -324,
	83, -314, 372, 373, 513, -235, 251, -234, 22, -157,
	-156, 89, -176, -176, 60, 61, 56, -90, -95, -324,
	-30, 22, -195, -226, 59, 89, -255, -203, -102, -102,
	83, -175, 24, 25, -140, -228, 151, -233, -198, 251,
	-140, -118, -120, -121, -122, -143, -162, -323, -123, 436,
	11, -133, -134, -142, -232, -206, -208, 83, 371, 373,
	374, 73, 109, -102, -256, 159, -281, -280, -279, -263,
	-265, -266, -267, 84, -179, -101, 37, -259, 337, 336,
	-253, -253, -253, -253, -253, -255, -255, -255, -255, 82,
	82, -253, -253, -253, -253, -257, 82, -257, -257, -258,
	82, -258, -292, -102, -289, -288, -286, -287, 227, 97,
	421, 74, -284, -175, 91, -99, -219, 222, -290, -287,
	-300, -300, -300, -219, -300, 89, -300, 89, 83, 16,
	-264, -263, -51, 276, -295, 251, -291, -285, -272, 121,
	-271, -272, -272, -300, 83, 26, 114, 114, 114, 114,
	421, 208, 29, -263, -51, -243, 220, -243, -243, 89,
	89, -215, 545, -133, -98, 268, 135, 257, 257, 217,
	217, 270, -140, 281, 283, 282, 280, 20, 269, 271,
	273, 259, -140, -140, -218, 73, -135, -140, 23, -232,
	-140, -216, -216, -140, -216, -216, -140, -226, -82, 372,
	83, 421, 19, -83, 19, 106, 107, 108, -155, -107,
	-108, -107, 126, 241, 83, -324, 22, 83, 74, -324,
	-324, -324, 83, 11, -90, -168, -166, 133, -102, -324,
	-324, 83, 83, 11, -324, 83, -324, -324, -324, -90,
	-90, -323, 203, -324, -324, -324, -324, -324, -227, -313,
	512, 373, -144, 71, 221, 72, -323, -234, -324, -149,
	-226, 91, 94, -178, -117, -119, 11, -95, -161, 84,
	83, -255, -182, -187, -213, -300, 89, 160, -174, 203,
	-148, 29, 54, -10, -323, -323, 29, 83, -136, -138,
	-137, -139, 63, 67, 69, 64, 65, 66, 70, -238,
	22, -118, -8, -7, -323, 82, -140, -133, -325, 11,
	74, -325, 83, 203, -207, -209, 375, 372, 378, -300,
	89, -75, 251, 83, -279, -267, -319, 106, 127, 28,
	73, 334, 97, -317, 159, -318, 223, 120, 121, 235,
	22, 38, -260, 338, -255, -255, -262, 89, -262, 91,
	91, 84, -42, -37, -38, 30, 77, -286, -274, 89,
	36, -226, 84, -98, -140, 127, 73, -290, -290, -290,
	-232, 15, -195, 83, 84, -164, 277, 84, -226, 84,
	82, -272, -272, -226, -323, 217, 28, 28, -51, -164,
	-256, -300, 547, 546, 84, 219, 275, -100, 385, 89,
	85, -140, -140, -140, -140, -140, 211, 208, 260, 220,
	-133, -140, 83, -71, 236, 231, -237, -237, 30, -140,
	372, 524, 522, 126, 241, -115, -108, -92, 418, -245,
	160, 309, 240, 307, 303, 323, 314, 336, 305, 337,
	-245, -243, -102, -102, -171, 134, -102, 132, -102, -102,
	-102, -163, -324, -324, -91, -227, 218, 218, 218, -199,
	-210, 19, 11, 54, 54, -117, -145, 12, -118, -95,
	-226, -185, 508, -190, 43, -188, -189, 44, -186, 45,
	53, 151, -200, 73, -201, -205, -163, -158, -160, -159,
	-323, -194, -324, -226, -199, -201, -120, -121, -121, -120,
	-121, 63, 63, 63, 68, 63, 68, 63, -137, -232,
	-324, -324, -8, -102, -235, 74, -118, -118, -142, -232,
	151, 372, 376, 377, 16, -279, 106, -323, -106, -114,
	-104, -103, -105, -109, 149, 150, 9, 89, 89, -300,
	121, 121, -140, 82, 84, 83, 84, 83, 84, 83,
	-220, 458, 127, -38, -37, -274, -274, 91, -300, 219,
	23, -140, 73, 73, 73, 16, -263, -163, 54, -289,
	-195, -293, -295, -140, -104, -323, -164, -140, -97, 266,
	274, 82, 86, -302, 74, 257, 334, 257, -140, -71,
	-42, -140, -216, -216, 30, -300, -115, -108, -323, -324,
	-253, -253, -253, -258, -253, 297, -253, 297, -324, -324,
	83, -324, 19, -324, -81, 414, -102, 83, 83, -324,
	-324, -324, -323, -323, -323, -324, -140, -145, -169, 13,
	-102, -182, 48, 315, -192, -191, 52, 44, -189, 16,
	46, 16, 27, -200, 83, 135, 83, -324, -324, 83,
	54, 203, -324, -145, -131, -130, 73, 74, -132, 73,
	-130, 63, 63, -196, -324, 83, -198, -118, -145, -145,
	203, -1, -2, 549, 550, 551, -102, -110, -110, -151,
	82, -102, -255, 89, -255, 91, 91, 458, 28, 78,
	79, 80, 28, 75, 76, -140, -140, -140, -140, -195,
	253, 84, -324, 83, -261, 421, 424, -102, -196, 84,
	-299, 421, -301, -226, -226, -226, -226, -107, -255, -300,
	-102, -102, -176, 89, -102, -102, -197, -324, -226, 223,
	-197, -197, -235, -169, -170, 14, 16, -183, 50, -181,
	49, -181, -191, 16, 16, 89, 16, 89, 121, -205,
	-102, -160, 54, -10, -226, -158, -226, -171, -102, 82,
	-102, -111, -145, -145, 554, 121, -76, 82, 341, -324,
	-195, 84, 84, 84, -196, 254, -318, -295, 425, 425,
	-324, 22, -298, -297, -227, 82, 74, -84, 145, 421,
	-324, -324, -324, -324, -324, 83, -324, -324, -324, -144,
	-170, -102, -156, -184, 51, 73, 109, 89, 89, 89,
	9, -158, 203, -176, -195, -125, 341, -171, 82, -5,
	77, -3, 548, -102, 82, 84, -180, 22, -323, -10,
	83, 135, -195, -140, -324, 419, 70, 422, -226, 223,
	73, 109, -201, -226, 84, 84, 82, -176, -102, 82,
	135, -77, 552, 91, 84, -195, -309, -310, 73, -319,
	-316, 106, 127, 97, -317, 115, 116, -10, -102, 250,
	-69, 421, -297, -278, -227, 89, 91, 84, 59, 420,
	423, -235, -126, -124, -226, 472, 84, -195, 91, -294,
	82, 16, 84, -310, 73, 10, 9, 106, 89, -69,
	-324, -324, -70, 265, 512, -302, 59, 84, 83, 19,
	-246, 482, -3, 84, -293, -1, -308, 236, 231, 234,
	29, -308, 228, -299, 421, -124, 479, -256, -111, -77,
	-3, 84, 554, 121, 230, 28, 106, 267, 422, -89,
	23, -125, -294, -77, 82, -5, 423, 482, -294, -102,
	82, -111, 84, -195, -128, -127, -129, 516, 106, 28,
	-4, 553, 84, -127, -129, 73, -103, 91, -4, 73,
	431, 516,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 64, 66, 67, 714, 714, 0, 714, 0,
	0, 714, -2, -2, 714, 1129, 0, 714, 0, 0,
	-2, 647, 648, 0, 650, -2, 0, 0, 659, 1576,
	1576, 709, 0, 0, 0, 0, 0, 714, 993, 44,
	714, 0, 78, 79, 665, 666, 667, 59, 0, 1574,
	1, 3, 65, 69, 0, 0, 0, 52, 1002, 0,
	72, 0, 0, 718, 0, 716, 1112, 714, 714, 0,
	126, 127, 0, 0, 0, -2, 130, -2, 154, 155,
	0, 159, 499, 459, 502, 457, 488, -2, 450, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 462, 352, 352, 0, 0, -2, 450, 450, 450,
	0, 0, 0, 485, 1114, 405, 352, 352, 0, 352,
	352, 352, 352, 0, 0, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	1019, 158, 1130, 1127, 1128, 34, 35, 36, 1274, 1275,
	1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285,
	1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295,
	1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305,
	1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315,
	1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325,
	1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335,
	1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345,
	1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355,
	1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365,
	1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375,
	1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385,
	1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405,
	1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415,
	1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425,
	1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435,
	1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445,
	1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455,
	1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525,
	1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 0, 1106,
	0, 577, 805, 0, 638, 638, 0, 638, 638, 638,
	638, 0, 0, 0, 589, 0, 0, 0, 0, 635,
	0, 0, 608, 610, 0, 635, 0, 641, 0, 622,
	638, 1577, 1577, 1577, 1097, 0, 632, 630, 644, 645,
	627, 628, 646, 649, 0, 654, 657, 1123, 1124, 0,
	672, 43, 1354, 664, 677, 678, 0, 710, 711, 39,
	891, 0, 820, 824, 835, 848, 849, 850, 851, 852,
	854, 855, 0, 0, 0, 0, 860, 861, 0, 0,
	0, 0, 0, 872, 0, 0, 0, 0, 0, 974,
	0, 943, 943, 908, 943, 945, 945, 0, 0, 0,
	0, 0, 0, 983, 0, 0, 0, 0, 0, 0,
	263, 264, 890, 1086, 945, 945, 945, 945, 919, 920,
	921, -2, -2, 210, 211, 212, 213, 214, 215, 216,
	0, 206, 0, 267, 268, 265, 266, 874, 875, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	243, 244, 245, 246, 247, 248, 249, 250, 251, 252,
	253, 254, 255, 256, 257, 258, 259, 260, 261, 262,
	1576, 0, 687, 0, 0, 1002, 0, 994, 993, 57,
	0, 714, -2, 0, 0, 0, 0, 41, 0, 46,
	766, 71, 70, 1038, 0, 0, 0, 53, 1003, 61,
	63, 1004, 0, 719, 720, 0, 743, 747, 0, 715,
	0, 1113, 1112, 1112, 112, 0, 1519, 1090, -2, -2,
	0, 0, 1125, 1126, 1099, -2, 1133, 1134, 1135, 1136,
	1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146,
	1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156,
	1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166,
	1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176,
	1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186,
	1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196,
	1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206,
	1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216,
	1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226,
	1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236,
	1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246,
	1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256,
	1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266,
	1267, 1268, 1269, 1270, 1271, 1272, 1273, -2, 0, 0,
	168, 169, 0, 37, 378, 0, 164, 0, 372, 324,
	1019, 0, 0, 0, 0, 0, 714, 0, 1107, 149,
	150, 156, 157, 352, 352, 0, 158, 158, 466, 467,
	468, 0, 0, -2, 376, 0, 451, 0, 0, 366,
	366, 370, 368, 369, 0, 0, 0, 0, 0, 0,
	479, 0, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 561, 0, 353, 0, 497, 498, 406, 0,
	0, 0, 0, 477, 478, 0, 0, 1115, 1116, 0,
	0, 352, 352, 0, 0, 0, 0, 352, 352, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 148, 1032, 0, 0, 0,
	-2, 0, 569, 0, 0, 0, 1108, 1108, 576, 0,
	578, 579, 0, 0, 580, 0, 635, 635, 633, 634,
	582, 583, 584, 585, 638, 0, 0, 361, 362, 363,
	635, 638, 0, 638, 638, 638, 638, 635, 635, 635,
	638, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1577, 1577, 1577, 641, 638, 0, 618, 0, 619, 620,
	623, 624, 1578, 1579, 1144, 625, 626, 1098, 655, 658,
	675, 673, 674, 676, 668, 669, 670, 671, 0, 689,
	690, 695, 0, 0, 0, 0, 701, 702, 703, 0,
	0, 706, 707, 708, 0, 0, 0, 0, 818, 0,
	0, 880, 881, 882, 883, 884, 885, 886, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 856, 857,
	858, 859, 862, 0, 0, 0, 867, 868, 0, 0,
	0, 0, 0, 724, 0, 975, 0, 906, 0, 907,
	909, 910, 0, 911, 0, 0, 0, 0, 0, 0,
	727, 0, 0, 727, 727, 0, 0, 200, 201, 202,
	203, 217, 218, 219, 220, 221, 269, 983, 0, 890,
	0, 0, 40, 679, 680, 0, 788, 1118, 0, 51,
	60, 62, 1002, 55, 1002, 0, 729, 0, 0, -2,
	-2, 730, 736, 737, 738, 739, 740, 48, 1575, 49,
	0, 68, 0, 42, 0, 0, 0, 0, 336, 1041,
	0, 0, 995, 996, 999, 0, 744, 748, 0, 750,
	751, 0, 717, 110, 0, 804, 0, 0, 0, 1519,
	1096, 0, 114, 115, 0, 0, 0, 340, 1101, 1102,
	1103, -2, 359, 0, -2, 331, 275, 276, 277, 324,
	279, 324, 324, 324, 324, 336, 336, 336, 336, 307,
	308, 309, 310, 311, 0, 0, 294, 324, 324, 324,
	324, 314, 315, 316, 317, 318, 319, 320, 321, 280,
	281, 282, 283, 284, 285, 286, 287, 288, 326, 326,
	326, 328, 328, 0, 38, 0, 344, 0, 999, 0,
	1032, 1110, 1120, 0, 0, 0, 1110, 132, 0, 0,
	500, 460, 489, 501, 0, 463, 464, -2, 0, 0,
	450, 0, 452, 0, 360, 0, -2, 0, 370, 0,
	366, 370, 367, 370, 358, 371, 481, 482, 483, 0,
	541, 774, 0, 0, 0, 0, 0, 547, 548, 549,
	0, 551, 552, 553, 554, 555, 556, 557, 558, 559,
	560, 490, 491, 492, 493, 494, 495, 496, 0, 0,
	452, 0, 486, 0, 407, 408, 0, 0, 411, 412,
	413, 414, 0, 0, 417, 418, 419, 791, 792, 420,
	444, 445, 446, 421, 422, 423, 424, 425, 426, 427,
	438, 439, 440, 441, 442, 443, 428, 429, 430, 431,
	432, 435, 0, 142, 1023, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1108, 0, 0, 0,
	0, 806, 1131, 1132, 639, 640, 0, 364, 365, 638,
	638, 586, 609, 0, 638, 590, 611, 591, 593, 592,
	594, 613, 614, 638, 597, 636, 637, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 615, 616, 617,
	642, 0, 0, 656, 660, 661, 662, 663, 0, 0,
	692, 89, 697, 698, 699, 700, 712, 705, 892, 815,
	816, 817, 819, 821, 0, 876, 878, 823, 825, 887,
	888, 889, 0, 0, 0, 0, 0, 829, 833, 836,
	837, 838, 839, 840, 841, 842, 843, 844, 845, 846,
	847, 853, 958, 959, 960, 870, 871, 0, 741, 0,
	0, 0, 869, 0, 0, 0, 0, 725, 726, 981,
	978, 0, 0, 944, 946, 0, 0, 0, 0, 922,
	923, 924, 925, 926, 927, 928, 929, 930, 931, 932,
	933, 934, 935, 936, 937, 938, 939, 940, 941, 942,
	0, 0, 0, 0, 0, 0, 0, 0, 728, 984,
	0, -2, 0, 0, 0, 0, 0, 0, 0, 1085,
	0, 682, 683, 685, 0, 808, 0, 789, 0, 0,
	1119, 688, 54, 56, 734, 735, 0, 752, 731, 50,
	45, 0, 0, 768, 1039, 336, 1061, 0, 1005, 1006,
	0, 998, 1000, 1001, 73, 749, 745, 0, 0, 0,
	803, 0, 755, 757, 758, 759, 786, 0, 762, 0,
	0, 0, 0, 108, 805, 1091, 113, 0, 0, 118,
	119, 1092, 1093, 1094, 1095, 0, 519, -2, 402, 170,
	172, 173, 174, 165, 384, 0, 0, 334, 332, 333,
	278, 336, 336, 301, 302, 303, 304, 305, 306, 0,
	0, 295, 296, 297, 298, 289, 0, 290, 291, 292,
	0, 293, 377, 0, 1007, 345, 346, 348, 352, 0,
	0, 0, 373, 374, 0, 1023, 0, 0, 0, 1121,
	1120, 1120, 1120, 0, 160, 161, 162, 163, 158, 0,
	0, 166, 454, 453, 0, 0, 375, 0, 0, 370,
	370, 355, 356, 484, 0, 0, 543, 544, 545, 546,
	0, 0, 0, 452, 454, 340, 0, 409, 410, 415,
	416, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 514, 515, 516, 517, 518, 1020, 1021,
	1022, 0, 0, 570, 0, 0, 394, 87, 1109, 575,
	635, 596, 612, 635, 588, 595, 621, 652, 696, 0,
	0, 0, 0, 704, 0, 822, 877, 879, 826, 0,
	830, 834, 0, 0, 0, 0, 0, 0, 0, 873,
	897, 898, 0, 0, 993, 0, 979, 0, 0, 905,
	947, 0, 0, 0, 915, 0, 917, 918, 893, 0,
	0, 727, 0, 948, 949, 950, 951, 952, 984, 681,
	684, 686, 764, 0, 0, 0, 0, 790, 1117, 0,
	986, 0, 0, 752, 813, 753, 0, 732, 47, 767,
	0, 1043, 1042, 1055, 1068, 337, 338, 339, 997, 0,
	1079, 0, 0, 1071, 0, 0, 0, 0, 0, 0,
	0, 0, 793, 0, 0, 796, 0, 0, 0, 0,
	787, 0, 0, 0, 0, 0, -2, 0, 0, 85,
	86, 0, 0, 0, 116, 117, 0, 0, 123, 341,
	342, 151, 0, 158, 404, 171, 175, 180, 0, 0,
	0, 185, 0, 187, 0, 385, 0, 271, 273, 0,
	0, 178, 274, 335, 299, 300, 0, 322, 0, 0,
	0, 397, 128, 1011, 1010, 352, 352, 347, 0, 350,
	0, 1122, 325, 0, 141, 0, 0, 0, 0, 0,
	147, 0, 458, 0, 469, 470, 0, 540, 0, 344,
	0, 354, 357, 775, 0, 0, 471, 0, 454, 475,
	476, 487, 436, 437, 434, 0, 0, 1033, 1034, 0,
	1037, 133, 507, 509, 508, 512, 0, 0, 505, 0,
	394, 1007, 0, 574, 395, 396, 638, 638, 691, 90,
	0, 694, 0, 0, 0, 827, 831, 742, 0, 0,
	324, 324, 964, 324, 328, 967, 324, 969, 324, 972,
	0, 0, 0, 0, 976, 904, 982, 0, 0, 0,
	0, 0, 894, 895, 0, 985, 0, 0, 0, 0,
	0, 1104, 1105, 987, 988, 813, 989, 0, 754, 733,
	769, 1061, 0, 1054, 0, -2, 1063, 0, 0, 0,
	1069, 746, 76, 0, 1079, 1087, 0, 1070, 1081, 1083,
	0, 0, 0, 1075, 0, 813, 756, 782, 784, 0,
	779, 794, 795, 797, 0, 799, 0, 801, 802, 766,
	761, 763, 0, 0, 110, 0, 813, 813, 109, 0,
	807, 120, 121, 122, 528, 403, 181, 0, 183, 198,
	199, 204, 205, 207, 0, 0, 0, 186, 188, 189,
	270, 272, 0, 0, 336, 0, 336, 0, 329, 0,
	386, 398, 0, 1008, 1009, 0, 0, 349, 351, 0,
	1111, 143, 0, 0, 0, 0, 167, 455, 0, 343,
	0, 0, 565, 562, 472, 0, 474, 766, 1024, 1025,
	1026, 0, 1036, 136, 0, 0, 0, 0, 571, 572,
	573, 88, 581, 587, 693, 713, 828, 832, 0, 864,
	961, 336, 965, 966, 968, 970, 971, 973, 865, 866,
	0, 900, 0, 902, 1002, 0, 980, 0, 0, 914,
	916, 896, 0, 0, 0, 788, 58, 989, 991, 0,
	814, 1048, 1046, 1046, 1056, 1057, 0, 0, 1064, 0,
	0, 0, 0, 77, 0, 0, 0, 1084, 0, 0,
	0, 0, 111, 993, 776, 783, 0, 0, 777, 0,
	778, 798, 800, 760, -2, 0, 813, 813, 83, 84,
	0, 0, 0, 529, 532, 533, 0, 208, 209, 184,
	0, 0, 312, 323, 313, 0, 0, 399, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 766, 144, 145, 146, 461,
	0, 0, 542, 0, 550, 0, 0, 0, 0, 1035,
	506, 0, 134, 135, 0, 0, 511, 953, 962, 963,
	0, 0, 0, 977, 0, 0, 0, 810, 770, 771,
	0, 0, 808, 991, 75, 0, 0, 1051, 0, 1044,
	1047, 1045, 1058, 0, 0, 1065, 0, 1067, 0, 1088,
	1089, 1082, 0, 1074, 1077, 1073, 1076, 1002, 780, 0,
	785, 0, 993, 82, 0, 530, 536, 0, 0, 182,
	0, 192, 327, 330, 0, 0, 379, 566, 563, 564,
	473, 0, 137, 138, 0, 0, 0, 0, 0, 0,
	899, 901, 903, 912, 913, 0, 809, 811, 812, 765,
	74, 992, 990, 1040, 0, 1049, 1050, 1059, 1060, 1066,
	0, 1072, 0, 80, 0, 0, 0, 1002, 0, 0,
	0, 523, 0, 0, 0, 380, 384, 0, 0, 1027,
	0, 0, 0, 513, 863, 0, 0, 0, 772, 773,
	1052, 1053, 1080, 1078, 781, 788, 0, 81, 0, 0,
	0, 526, 0, 537, 534, 0, 381, 382, 0, 176,
	193, 194, 0, 0, 197, 190, 191, 1027, 0, 0,
	503, 1029, 139, 140, 447, 448, 449, 133, 954, 0,
	957, 91, 0, 93, 0, 1418, 536, 0, 531, 522,
	0, 528, 535, 383, 0, 0, 0, 195, 196, 129,
	567, 568, 0, 1030, 1031, 136, 955, 92, 0, 0,
	340, 0, 523, 536, 0, 0, 387, 389, 390, 0,
	0, 388, 0, 510, 0, 94, 95, 101, 0, 526,
	523, 527, 0, 530, 391, 392, 393, 1028, 0, 0,
	102, 100, 520, 526, 0, 0, 956, 0, 521, 0,
	0, 96, 538, 0, 97, 98, 0, 105, 106, 0,
	524, 0, 538, 99, 0, 0, 107, 539, 525, 0,
	103, 104,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 128, 3, 3, 3, 154, 146, 3,
	82, 84, 151, 149, 83, 150, 203, 152, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 555,
	136, 135, 137, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 156, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 124, 3, 157,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 125,
	126, 127, 129, 130, 131, 132, 133, 134, 138, 139,
	140, 141, 142, 143, 144, 145, 147, 148, 153, 155,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:469
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:474
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:475
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:479
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:511
		{
			setParseTree(yylex, nil)
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:517
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:521
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:525
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:530
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:534
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 39:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:540
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:546
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:552
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:556
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:561
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:565
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:571
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:575
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:581
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:587
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:591
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:595
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:618
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:624
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:629
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:635
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:642
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:648
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:655
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:659
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:665
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:669
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:673
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:677
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:681
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:687
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:691
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:696
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:700
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:706
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:710
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:715
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:721
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:727
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:734
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:742
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:746
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:754
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:766
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:778
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:782
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:788
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:794
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:798
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:802
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:806
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:811
		{
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:812
		{
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:816
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:820
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:826
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:830
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:836
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:842
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:848
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:852
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:858
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:862
		{
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, Collate: yyDollar[3].str, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:867
		{
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, Collate: yyDollar[3].str, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:872
		{
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, Collate: yyDollar[3].str, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:877
		{
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, Collate: yyDollar[3].str, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:882
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:889
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:893
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:899
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:905
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:911
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:915
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:919
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:925
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:929
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:934
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:938
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:944
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:950
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:954
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:960
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:964
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:970
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:974
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:978
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:984
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:988
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:992
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:996
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1002
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1006
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1012
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1018
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1025
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1034
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].str, Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1038
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1045
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1049
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1054
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1058
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1064
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1069
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1074
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1080
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1085
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1091
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 141:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1097
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1104
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1111
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1116
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1121
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1126
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1133
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1140
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1151
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1158
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1162
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1168
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1172
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1176
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1180
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 158:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1186
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1190
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1196
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1200
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1206
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 163:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1210
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1217
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1221
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1227
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1231
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1237
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1242
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1247
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1251
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1256
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1260
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1264
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1270
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[4].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1276
		{
			yyDollar[2].columnType.Options = yyDollar[8].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[6].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[9].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1284
		{
			yyVAL.str = ""
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1288
		{
			yyVAL.str = ""
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1297
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1301
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1307
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1313
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1318
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1323
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1328
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1333
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1338
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1343
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1347
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1354
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1358
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1363
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1367
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1372
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1378
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1384
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1389
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1396
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1403
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1407
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1411
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1415
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1426
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1433
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1437
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1443
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1447
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1451
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1455
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1459
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1463
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1467
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1472
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1476
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1480
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1484
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1488
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1495
		{
			yyVAL.str = Armscii8Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1499
		{
			yyVAL.str = ASCIIStr
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1503
		{
			yyVAL.str = Big5Str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1507
		{
			yyVAL.str = UBinaryStr
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1511
		{
			yyVAL.str = Cp1250Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1515
		{
			yyVAL.str = Cp1251Str
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1519
		{
			yyVAL.str = Cp1256Str
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1523
		{
			yyVAL.str = Cp1257Str
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1527
		{
			yyVAL.str = Cp850Str
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1531
		{
			yyVAL.str = Cp852Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1535
		{
			yyVAL.str = Cp866Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1539
		{
			yyVAL.str = Cp932Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1543
		{
			yyVAL.str = Dec8Str
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1547
		{
			yyVAL.str = EucjpmsStr
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1551
		{
			yyVAL.str = EuckrStr
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1555
		{
			yyVAL.str = Gb18030Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1559
		{
			yyVAL.str = Gb2312Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1563
		{
			yyVAL.str = GbkStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1567
		{
			yyVAL.str = Geostd8Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1571
		{
			yyVAL.str = GreekStr
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1575
		{
			yyVAL.str = HebrewStr
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1579
		{
			yyVAL.str = Hp8Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1583
		{
			yyVAL.str = Keybcs2Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1587
		{
			yyVAL.str = Koi8rStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1591
		{
			yyVAL.str = Koi8uStr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1595
		{
			yyVAL.str = Latin1Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1599
		{
			yyVAL.str = Latin2Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1603
		{
			yyVAL.str = Latin5Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1607
		{
			yyVAL.str = Latin7Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1611
		{
			yyVAL.str = MacceStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1615
		{
			yyVAL.str = MacromanStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1619
		{
			yyVAL.str = SjisStr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1623
		{
			yyVAL.str = Swe7Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1627
		{
			yyVAL.str = Tis620Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1631
		{
			yyVAL.str = Ucs2Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1635
		{
			yyVAL.str = UjisStr
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1639
		{
			yyVAL.str = Utf16Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1643
		{
			yyVAL.str = Utf16leStr
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1647
		{
			yyVAL.str = Utf32Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1651
		{
			yyVAL.str = Utf8Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1655
		{
			yyVAL.str = Utf8mb4Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1665
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1669
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1676
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1680
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1684
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1690
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1694
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1698
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1702
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1708
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1719
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1724
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1730
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1734
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1738
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1742
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1746
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1750
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1754
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1758
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1762
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1768
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1774
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1780
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1786
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1792
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1800
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1804
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1808
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1812
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1816
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1822
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1826
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1830
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1834
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1838
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1842
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1846
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1850
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1854
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1858
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1862
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1866
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1870
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1874
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 313:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1879
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1885
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1889
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1893
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1897
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1901
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1905
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1909
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1913
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1919
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1924
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1929
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1933
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1938
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1942
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1950
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1954
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1960
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1968
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1972
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1976
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1981
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1985
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1990
		{
			yyVAL.str = ""
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1994
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1998
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2002
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2007
		{
			yyVAL.str = ""
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2011
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2015
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2022
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2027
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2031
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2037
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2041
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2047
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2051
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2056
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2060
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2066
		{
			yyVAL.str = ""
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2070
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 354:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2076
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2080
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2084
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2088
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2092
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2097
		{
			yyVAL.str = ""
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2101
		{
			yyVAL.str = yyDollar[2].str
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2107
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2111
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2115
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2122
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2126
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2131
		{
			yyVAL.str = "key"
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2135
		{
			yyVAL.str = yyDollar[1].str
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2141
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2145
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2150
		{
			yyVAL.str = ""
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2154
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2160
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2164
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2170
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2176
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2180
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2186
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2190
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2196
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2202
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2206
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2210
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2214
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2219
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2223
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2229
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2235
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2241
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2247
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2251
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2255
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2259
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2263
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2268
		{
			yyVAL.str = ""
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2272
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2276
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2281
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2285
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2289
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2294
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2298
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2304
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2308
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2312
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2318
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2322
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2328
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2332
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2336
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2340
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2344
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2348
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2352
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2356
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2360
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2364
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2368
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2372
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2376
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2380
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2384
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2388
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2392
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2396
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2400
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2404
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2408
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2412
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2416
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2420
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2424
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2428
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2432
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2436
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2441
		{
			yyVAL.str = ""
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2445
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2449
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2468
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2472
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2476
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2481
		{
			yyVAL.str = ""
		}
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2487
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2491
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2496
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2500
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2505
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2509
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2513
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2517
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2521
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 461:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2525
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2531
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2535
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2539
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2545
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2549
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2553
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2557
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2561
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2565
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2569
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2573
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2577
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2581
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2585
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2589
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2593
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2597
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2601
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2605
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2609
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2613
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2617
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2621
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2625
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2629
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2633
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2639
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2643
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2649
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2653
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2657
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2661
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2665
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2669
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2673
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2677
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2681
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2687
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2693
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2700
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2707
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2713
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2717
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2724
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2731
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2743
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2753
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2757
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2761
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2774
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2784
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2788
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2799
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2806
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2813
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2820
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2827
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2834
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2839
		{
			yyLOCAL = &PartitionOption{
				Linear:       yyDollar[3].str,
				isHASH:       true,
				Expr:         yyDollar[6].exprUnion(),
				Partitions:   yyDollar[8].str,
				SubPartition: yyDollar[9].subPartitionUnion(),
				Definitions:  yyDollar[10].partDefsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2851
		{
			yyLOCAL = &PartitionOption{
				Linear:       yyDollar[3].str,
				isKEY:        true,
				KeyAlgorithm: yyDollar[5].str,
				KeyColList:   yyDollar[7].columnsUnion(),
				Partitions:   yyDollar[9].str,
				SubPartition: yyDollar[10].subPartitionUnion(),
				Definitions:  yyDollar[11].partDefsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2864
		{
			yyLOCAL = &PartitionOption{
				RangeOrList:  yyDollar[3].str,
				ExprOrCol:    yyDollar[4].exprOrColumnsUnion(),
				Partitions:   yyDollar[5].str,
				SubPartition: yyDollar[6].subPartitionUnion(),
				Definitions:  yyDollar[7].partDefsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2875
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2879
		{
			yyLOCAL = &SubPartition{
				Linear:        yyDollar[3].str,
				isHASH:        true,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2888
		{
			yyLOCAL = &SubPartition{
				Linear:        yyDollar[3].str,
				isKEY:         true,
				KeyAlgorithm:  yyDollar[5].str,
				KeyColList:    yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2899
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2903
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2908
		{
			yyVAL.str = ""
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2912
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2917
		{
			yyVAL.str = ""
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2921
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2927
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2931
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ExprOrColumns
//line sql.y:2937
		{
			yyLOCAL = &ExprOrColumns{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ExprOrColumns
//line sql.y:2941
		{
			yyLOCAL = &ExprOrColumns{ColumnList: yyDollar[3].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2946
		{
			yyVAL.str = ""
		}
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2950
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 538:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2955
		{
			yyVAL.str = ""
		}
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2959
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2965
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2969
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2973
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2977
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2981
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2985
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2989
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2993
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2997
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3001
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3005
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3009
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3013
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3017
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3021
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3025
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3029
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3033
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3037
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3041
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3045
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3049
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3054
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3058
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3062
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3069
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3073
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 567:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3079
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3083
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3089
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3095
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3099
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 572:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3105
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3109
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3118
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3122
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3128
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3132
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3137
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3143
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3147
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3151
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3155
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3159
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3163
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3167
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3171
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3175
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3179
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3183
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3187
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3191
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3195
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3199
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3203
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3207
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3211
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3215
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3219
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3223
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3227
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3231
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3235
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3239
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3243
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3247
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3251
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3255
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3259
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3263
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3267
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3271
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3275
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3279
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3283
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3287
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3292
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3296
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3300
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3305
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3309
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3313
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3317
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3322
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3336
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3340
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3344
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3350
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3354
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3360
		{
			yyVAL.str = ""
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3364
		{
			yyVAL.str = "extended "
		}
	case 631:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3370
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3374
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3380
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3384
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3390
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3394
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3398
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3404
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3408
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3412
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3418
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3422
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3428
		{
			yyVAL.empty = struct{}{}
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3432
		{
			yyVAL.empty = struct{}{}
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3436
		{
			yyVAL.empty = struct{}{}
		}
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3442
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3446
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3452
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3456
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3462
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3468
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3472
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3477
		{
			yyVAL.empty = struct{}{}
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3479
		{
			yyVAL.empty = struct{}{}
		}
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3482
		{
			yyVAL.empty = struct{}{}
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3484
		{
			yyVAL.empty = struct{}{}
		}
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3489
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3495
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3500
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3504
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3508
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3512
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3516
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3520
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3526
		{
			yyVAL.str = yyDollar[1].str
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3530
		{
			yyVAL.str = yyDollar[1].str
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3534
		{
			yyVAL.str = yyDollar[1].str
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3540
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3544
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3548
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3552
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3557
		{
			yyVAL.str = ""
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3561
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3565
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3571
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3575
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3581
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3585
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3591
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3597
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3601
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3607
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3613
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3617
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3621
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3625
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3631
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3637
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3643
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3647
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3651
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3655
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3659
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3663
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3669
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3673
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3679
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3683
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3687
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3691
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3695
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3699
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3703
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3707
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3711
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3715
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3719
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3723
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3728
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3732
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3736
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3741
		{
			yyVAL.str = ""
		}
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3745
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3750
		{
			setAllowComments(yylex, true)
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3754
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3760
		{
			yyVAL.strs = nil
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3764
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3770
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3774
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3778
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3783
		{
			yyVAL.str = ""
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3787
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3791
		{
			yyVAL.str = SQLCacheStr
		}
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3796
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3800
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3804
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3809
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3813
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3818
		{
			yyVAL.strs = nil
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3822
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3826
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3830
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3834
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3840
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3844
		{
			yyVAL.str = SQLCacheStr
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3848
		{
			yyVAL.str = DistinctStr
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3852
		{
			yyVAL.str = DistinctStr
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3856
		{
			yyVAL.str = StraightJoinHint
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3860
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3864
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3870
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3874
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3880
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3884
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3888
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3892
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3897
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3901
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3905
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3912
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3917
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3921
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3927
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3933
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3937
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3947
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3951
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3955
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3959
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3965
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3971
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3975
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3980
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3984
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3990
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3994
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4000
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4004
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4008
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4012
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4018
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4022
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4035
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4039
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4043
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4047
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4053
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4055
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4059
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4061
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4065
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4067
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4070
		{
			yyVAL.empty = struct{}{}
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4072
		{
			yyVAL.empty = struct{}{}
		}
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4075
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4079
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4083
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4090
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4096
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4100
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4104
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4110
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4116
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4120
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4124
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4128
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4134
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4138
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4148
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4152
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4158
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4162
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4168
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4173
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4177
		{
			yyLOCAL = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4181
		{
			yyLOCAL = &IndexHints{Type: UseOp}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4185
		{
			yyLOCAL = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4189
		{
			yyLOCAL = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4194
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4198
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4205
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4209
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4213
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4217
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4221
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4225
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4232
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4236
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4240
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4244
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4250
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4254
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4258
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4262
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4266
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4270
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4274
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4278
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4282
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4286
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4290
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4296
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4300
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4304
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4308
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4312
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4316
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4320
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4324
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4328
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4332
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4336
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4340
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4344
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4350
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4354
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4358
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4362
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4366
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4370
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4374
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4378
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4382
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4386
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4390
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4394
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4398
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4402
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4406
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4410
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4414
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4418
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4422
		{
			yyLOCAL = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4426
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4430
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4438
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4442
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4449
		{
			yyVAL.str = ""
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4453
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4459
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4463
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4470
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4474
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4478
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4482
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4488
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4492
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4496
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4500
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4504
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4508
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4512
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4518
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4522
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4526
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4533
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4539
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4543
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 893:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4553
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4557
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4561
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4565
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4575
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4579
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4583
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4587
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4591
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4595
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4599
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4603
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4607
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4611
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4622
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4626
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4632
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4636
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4641
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4645
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4649
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4653
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4657
		{
			yyLOCAL = &JSONAggregateExpr{Name: NewColIdent(yyDollar[1].str), Columns: []*ColName{yyDollar[3].colNameUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4661
		{
			yyLOCAL = &JSONAggregateExpr{Name: NewColIdent(yyDollar[1].str), Columns: []*ColName{yyDollar[3].colNameUnion(), yyDollar[5].colNameUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4665
		{
			yyLOCAL = &JSONUtilityExpr{Name: yyDollar[1].colIdent, Column: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4669
		{
			yyLOCAL = &JSONUtilityExpr{Name: yyDollar[1].colIdent, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4675
		{
			yyVAL.colIdent = NewColIdent(yyDollar[1].str)
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4679
		{
			yyVAL.colIdent = NewColIdent(yyDollar[1].str)
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4683
		{
			yyVAL.colIdent = NewColIdent(yyDollar[1].str)
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4689
		{
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4691
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4695
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4699
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4703
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4707
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4711
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4715
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4719
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4723
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4727
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4731
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4737
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4741
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4745
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4749
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4753
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4757
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4761
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4765
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4769
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4779
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4783
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4787
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4797
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4801
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4805
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4809
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4813
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4819
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4823
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4827
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4831
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4835
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4841
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4845
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4849
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4855
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4859
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4863
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: string(yyDollar[3].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4867
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4871
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4875
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4881
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4885
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4889
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4893
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4897
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4901
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4905
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4910
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4914
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4919
		{
			yyVAL.str = string("")
		}
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4923
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4929
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4933
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 980:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4939
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4944
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4948
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4954
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4958
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4962
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4968
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4977
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4981
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4987
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4991
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4996
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5000
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5005
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5009
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5015
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5021
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5025
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5031
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5036
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5040
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5044
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5049
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5053
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5059
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5063
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5067
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5072
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5076
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5080
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5084
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5088
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5095
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5099
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5103
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5107
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5113
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5117
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5121
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5126
		{
			yyVAL.str = ""
		}
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5130
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5134
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5138
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5143
		{
			yyVAL.str = ""
		}
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5147
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5153
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5157
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1027:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5162
		{
			yyVAL.str = ""
		}
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5166
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1029:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5171
		{
			yyVAL.str = "cascaded"
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5175
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5179
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1032:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5184
		{
			yyVAL.str = ""
		}
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5188
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5194
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5198
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5202
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str) + "@" + string(yyDollar[2].str)
		}
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5206
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5212
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5216
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5222
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5226
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5230
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5235
		{
			yyVAL.str = ""
		}
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5239
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5243
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5248
		{
			yyVAL.str = ""
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5252
		{
			yyVAL.str = " header"
		}
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5257
		{
			yyVAL.str = ""
		}
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5261
		{
			yyVAL.str = " manifest on"
		}
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5265
		{
			yyVAL.str = " manifest off"
		}
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5270
		{
			yyVAL.str = ""
		}
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5274
		{
			yyVAL.str = " overwrite on"
		}
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5278
		{
			yyVAL.str = " overwrite off"
		}
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5284
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1055:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5289
		{
			yyVAL.str = ""
		}
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5293
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5299
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5303
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5309
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5313
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1061:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5318
		{
			yyVAL.str = ""
		}
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5322
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5328
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5332
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5338
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1066:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5342
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5346
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1068:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5351
		{
			yyVAL.str = ""
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5355
		{
			yyVAL.str = " optionally"
		}
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5368
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5372
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5376
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5380
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5384
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5390
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5394
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5398
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1078:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5402
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1079:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5407
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5411
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5417
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5421
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5427
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5431
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5437
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5442
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5452
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5456
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5462
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5468
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5472
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5478
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5482
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5486
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5490
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5494
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5502
		{
			yyVAL.str = "charset"
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5512
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5516
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5520
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5529
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5531
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5534
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5536
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5539
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5541
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5544
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5546
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5549
		{
			yyVAL.empty = struct{}{}
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5551
		{
			yyVAL.empty = struct{}{}
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5553
		{
			yyVAL.empty = struct{}{}
		}
	case 1117:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5557
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5562
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5566
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5571
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5573
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5577
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5583
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5587
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5594
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5600
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5604
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1129:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5610
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5614
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5621
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6087
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6096
		{
			decNesting(yylex)
		}
	case 1576:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6101
		{
			skipToEnd(yylex)
		}
	case 1577:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6106
		{
			skipToEnd(yylex)
		}
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6110
		{
			skipToEnd(yylex)
		}
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6114
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
