// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const NCHAR_STRING = 57430
const INTEGRAL = 57431
const FLOAT = 57432
const HEXNUM = 57433
const VALUE_ARG = 57434
const LIST_ARG = 57435
const COMMENT = 57436
const COMMENT_KEYWORD = 57437
const BIT_LITERAL = 57438
const COMPRESSION = 57439
const EXTRACT = 57440
const JSON_ARRAYAGG = 57441
const JSON_OBJECTAGG = 57442
const JSON_PRETTY = 57443
const JSON_STORAGE_SIZE = 57444
const JSON_STORAGE_FREE = 57445
const NULL = 57446
const TRUE = 57447
const FALSE = 57448
const OFF = 57449
const DISCARD = 57450
const IMPORT = 57451
const ENABLE = 57452
const DISABLE = 57453
const TABLESPACE = 57454
const VIRTUAL = 57455
const STORED = 57456
const EMPTY_FROM_CLAUSE = 57457
const LOWER_THAN_CHARSET = 57458
const CHARSET = 57459
const UNIQUE = 57460
const KEY = 57461
const EXPRESSION_PREC_SETTER = 57462
const OR = 57463
const XOR = 57464
const AND = 57465
const NOT = 57466
const BETWEEN = 57467
const CASE = 57468
const WHEN = 57469
const THEN = 57470
const ELSE = 57471
const END = 57472
const LE = 57473
const GE = 57474
const NE = 57475
const NULL_SAFE_EQUAL = 57476
const IS = 57477
const LIKE = 57478
const REGEXP = 57479
const IN = 57480
const SHIFT_LEFT = 57481
const SHIFT_RIGHT = 57482
const DIV = 57483
const MOD = 57484
const UNARY = 57485
const COLLATE = 57486
const BINARY = 57487
const UNDERSCORE_ARMSCII8 = 57488
const UNDERSCORE_ASCII = 57489
const UNDERSCORE_BIG5 = 57490
const UNDERSCORE_BINARY = 57491
const UNDERSCORE_CP1250 = 57492
const UNDERSCORE_CP1251 = 57493
const UNDERSCORE_CP1256 = 57494
const UNDERSCORE_CP1257 = 57495
const UNDERSCORE_CP850 = 57496
const UNDERSCORE_CP852 = 57497
const UNDERSCORE_CP866 = 57498
const UNDERSCORE_CP932 = 57499
const UNDERSCORE_DEC8 = 57500
const UNDERSCORE_EUCJPMS = 57501
const UNDERSCORE_EUCKR = 57502
const UNDERSCORE_GB18030 = 57503
const UNDERSCORE_GB2312 = 57504
const UNDERSCORE_GBK = 57505
const UNDERSCORE_GEOSTD8 = 57506
const UNDERSCORE_GREEK = 57507
const UNDERSCORE_HEBREW = 57508
const UNDERSCORE_HP8 = 57509
const UNDERSCORE_KEYBCS2 = 57510
const UNDERSCORE_KOI8R = 57511
const UNDERSCORE_KOI8U = 57512
const UNDERSCORE_LATIN1 = 57513
const UNDERSCORE_LATIN2 = 57514
const UNDERSCORE_LATIN5 = 57515
const UNDERSCORE_LATIN7 = 57516
const UNDERSCORE_MACCE = 57517
const UNDERSCORE_MACROMAN = 57518
const UNDERSCORE_SJIS = 57519
const UNDERSCORE_SWE7 = 57520
const UNDERSCORE_TIS620 = 57521
const UNDERSCORE_UCS2 = 57522
const UNDERSCORE_UJIS = 57523
const UNDERSCORE_UTF16 = 57524
const UNDERSCORE_UTF16LE = 57525
const UNDERSCORE_UTF32 = 57526
const UNDERSCORE_UTF8 = 57527
const UNDERSCORE_UTF8MB4 = 57528
const INTERVAL = 57529
const JSON_EXTRACT_OP = 57530
const JSON_UNQUOTE_EXTRACT_OP = 57531
const CREATE = 57532
const ALTER = 57533
const DROP = 57534
const RENAME = 57535
const ANALYZE = 57536
const ADD = 57537
const FLUSH = 57538
const CHANGE = 57539
const MODIFY = 57540
const REVERT = 57541
const SCHEMA = 57542
const TABLE = 57543
const INDEX = 57544
const VIEW = 57545
const TO = 57546
const IGNORE = 57547
const IF = 57548
const PRIMARY = 57549
const COLUMN = 57550
const SPATIAL = 57551
const FULLTEXT = 57552
const KEY_BLOCK_SIZE = 57553
const CHECK = 57554
const INDEXES = 57555
const ACTION = 57556
const CASCADE = 57557
const CONSTRAINT = 57558
const FOREIGN = 57559
const NO = 57560
const REFERENCES = 57561
const RESTRICT = 57562
const SHOW = 57563
const DESCRIBE = 57564
const EXPLAIN = 57565
const DATE = 57566
const ESCAPE = 57567
const REPAIR = 57568
const OPTIMIZE = 57569
const TRUNCATE = 57570
const COALESCE = 57571
const EXCHANGE = 57572
const REBUILD = 57573
const PARTITIONING = 57574
const REMOVE = 57575
const MAXVALUE = 57576
const PARTITION = 57577
const REORGANIZE = 57578
const LESS = 57579
const THAN = 57580
const PROCEDURE = 57581
const TRIGGER = 57582
const VINDEX = 57583
const VINDEXES = 57584
const DIRECTORY = 57585
const NAME = 57586
const UPGRADE = 57587
const STATUS = 57588
const VARIABLES = 57589
const WARNINGS = 57590
const CASCADED = 57591
const DEFINER = 57592
const OPTION = 57593
const SQL = 57594
const UNDEFINED = 57595
const SEQUENCE = 57596
const MERGE = 57597
const TEMPORARY = 57598
const TEMPTABLE = 57599
const INVOKER = 57600
const SECURITY = 57601
const FIRST = 57602
const AFTER = 57603
const LAST = 57604
const VITESS_MIGRATION = 57605
const CANCEL = 57606
const RETRY = 57607
const COMPLETE = 57608
const CLEANUP = 57609
const BEGIN = 57610
const START = 57611
const TRANSACTION = 57612
const COMMIT = 57613
const ROLLBACK = 57614
const SAVEPOINT = 57615
const RELEASE = 57616
const WORK = 57617
const BIT = 57618
const TINYINT = 57619
const SMALLINT = 57620
const MEDIUMINT = 57621
const INT = 57622
const INTEGER = 57623
const BIGINT = 57624
const INTNUM = 57625
const REAL = 57626
const DOUBLE = 57627
const FLOAT_TYPE = 57628
const DECIMAL = 57629
const NUMERIC = 57630
const TIME = 57631
const TIMESTAMP = 57632
const DATETIME = 57633
const YEAR = 57634
const CHAR = 57635
const VARCHAR = 57636
const BOOL = 57637
const CHARACTER = 57638
const VARBINARY = 57639
const NCHAR = 57640
const TEXT = 57641
const TINYTEXT = 57642
const MEDIUMTEXT = 57643
const LONGTEXT = 57644
const BLOB = 57645
const TINYBLOB = 57646
const MEDIUMBLOB = 57647
const LONGBLOB = 57648
const JSON = 57649
const ENUM = 57650
const GEOMETRY = 57651
const POINT = 57652
const LINESTRING = 57653
const POLYGON = 57654
const GEOMETRYCOLLECTION = 57655
const MULTIPOINT = 57656
const MULTILINESTRING = 57657
const MULTIPOLYGON = 57658
const NULLX = 57659
const AUTO_INCREMENT = 57660
const APPROXNUM = 57661
const SIGNED = 57662
const UNSIGNED = 57663
const ZEROFILL = 57664
const CODE = 57665
const COLLATION = 57666
const COLUMNS = 57667
const DATABASES = 57668
const ENGINES = 57669
const EVENT = 57670
const EXTENDED = 57671
const FIELDS = 57672
const FULL = 57673
const FUNCTION = 57674
const GTID_EXECUTED = 57675
const KEYSPACES = 57676
const OPEN = 57677
const PLUGINS = 57678
const PRIVILEGES = 57679
const PROCESSLIST = 57680
const SCHEMAS = 57681
const TABLES = 57682
const TRIGGERS = 57683
const USER = 57684
const VGTID_EXECUTED = 57685
const VITESS_KEYSPACES = 57686
const VITESS_METADATA = 57687
const VITESS_MIGRATIONS = 57688
const VITESS_REPLICATION_STATUS = 57689
const VITESS_SHARDS = 57690
const VITESS_TABLETS = 57691
const VSCHEMA = 57692
const NAMES = 57693
const GLOBAL = 57694
const SESSION = 57695
const ISOLATION = 57696
const LEVEL = 57697
const READ = 57698
const WRITE = 57699
const ONLY = 57700
const REPEATABLE = 57701
const COMMITTED = 57702
const UNCOMMITTED = 57703
const SERIALIZABLE = 57704
const CURRENT_TIMESTAMP = 57705
const DATABASE = 57706
const CURRENT_DATE = 57707
const CURRENT_TIME = 57708
const LOCALTIME = 57709
const LOCALTIMESTAMP = 57710
const CURRENT_USER = 57711
const UTC_DATE = 57712
const UTC_TIME = 57713
const UTC_TIMESTAMP = 57714
const DAY = 57715
const DAY_HOUR = 57716
const DAY_MICROSECOND = 57717
const DAY_MINUTE = 57718
const DAY_SECOND = 57719
const HOUR = 57720
const HOUR_MICROSECOND = 57721
const HOUR_MINUTE = 57722
const HOUR_SECOND = 57723
const MICROSECOND = 57724
const MINUTE = 57725
const MINUTE_MICROSECOND = 57726
const MINUTE_SECOND = 57727
const MONTH = 57728
const QUARTER = 57729
const SECOND = 57730
const SECOND_MICROSECOND = 57731
const YEAR_MONTH = 57732
const WEEK = 57733
const REPLACE = 57734
const CONVERT = 57735
const CAST = 57736
const SUBSTR = 57737
const SUBSTRING = 57738
const GROUP_CONCAT = 57739
const SEPARATOR = 57740
const TIMESTAMPADD = 57741
const TIMESTAMPDIFF = 57742
const MATCH = 57743
const AGAINST = 57744
const BOOLEAN = 57745
const LANGUAGE = 57746
const WITH = 57747
const QUERY = 57748
const EXPANSION = 57749
const WITHOUT = 57750
const VALIDATION = 57751
const UNUSED = 57752
const ARRAY = 57753
const CUME_DIST = 57754
const DESCRIPTION = 57755
const DENSE_RANK = 57756
const EMPTY = 57757
const EXCEPT = 57758
const FIRST_VALUE = 57759
const GROUPING = 57760
const GROUPS = 57761
const JSON_TABLE = 57762
const LAG = 57763
const LAST_VALUE = 57764
const LATERAL = 57765
const LEAD = 57766
const MEMBER = 57767
const NTH_VALUE = 57768
const NTILE = 57769
const OF = 57770
const OVER = 57771
const PERCENT_RANK = 57772
const RANK = 57773
const RECURSIVE = 57774
const ROW_NUMBER = 57775
const SYSTEM = 57776
const WINDOW = 57777
const ACTIVE = 57778
const ADMIN = 57779
const BUCKETS = 57780
const CLONE = 57781
const COMPONENT = 57782
const DEFINITION = 57783
const ENFORCED = 57784
const EXCLUDE = 57785
const FOLLOWING = 57786
const GEOMCOLLECTION = 57787
const GET_MASTER_PUBLIC_KEY = 57788
const HISTOGRAM = 57789
const HISTORY = 57790
const INACTIVE = 57791
const INVISIBLE = 57792
const LOCKED = 57793
const MASTER_COMPRESSION_ALGORITHMS = 57794
const MASTER_PUBLIC_KEY_PATH = 57795
const MASTER_TLS_CIPHERSUITES = 57796
const MASTER_ZSTD_COMPRESSION_LEVEL = 57797
const NESTED = 57798
const NETWORK_NAMESPACE = 57799
const NOWAIT = 57800
const NULLS = 57801
const OJ = 57802
const OLD = 57803
const OPTIONAL = 57804
const ORDINALITY = 57805
const ORGANIZATION = 57806
const OTHERS = 57807
const PATH = 57808
const PERSIST = 57809
const PERSIST_ONLY = 57810
const PRECEDING = 57811
const PRIVILEGE_CHECKS_USER = 57812
const PROCESS = 57813
const RANDOM = 57814
const REFERENCE = 57815
const REQUIRE_ROW_FORMAT = 57816
const RESOURCE = 57817
const RESPECT = 57818
const RESTART = 57819
const RETAIN = 57820
const REUSE = 57821
const ROLE = 57822
const SECONDARY = 57823
const SECONDARY_ENGINE = 57824
const SECONDARY_LOAD = 57825
const SECONDARY_UNLOAD = 57826
const SKIP = 57827
const SRID = 57828
const THREAD_PRIORITY = 57829
const TIES = 57830
const UNBOUNDED = 57831
const VCPU = 57832
const VISIBLE = 57833
const FORMAT = 57834
const TREE = 57835
const VITESS = 57836
const TRADITIONAL = 57837
const LOCAL = 57838
const LOW_PRIORITY = 57839
const NO_WRITE_TO_BINLOG = 57840
const LOGS = 57841
const ERROR = 57842
const GENERAL = 57843
const HOSTS = 57844
const OPTIMIZER_COSTS = 57845
const USER_RESOURCES = 57846
const SLOW = 57847
const CHANNEL = 57848
const RELAY = 57849
const EXPORT = 57850
const AVG_ROW_LENGTH = 57851
const CONNECTION = 57852
const CHECKSUM = 57853
const DELAY_KEY_WRITE = 57854
const ENCRYPTION = 57855
const ENGINE = 57856
const INSERT_METHOD = 57857
const MAX_ROWS = 57858
const MIN_ROWS = 57859
const PACK_KEYS = 57860
const PASSWORD = 57861
const FIXED = 57862
const DYNAMIC = 57863
const COMPRESSED = 57864
const REDUNDANT = 57865
const COMPACT = 57866
const ROW_FORMAT = 57867
const STATS_AUTO_RECALC = 57868
const STATS_PERSISTENT = 57869
const STATS_SAMPLE_PAGES = 57870
const STORAGE = 57871
const MEMORY = 57872
const DISK = 57873
const PARTITIONS = 57874
const LINEAR = 57875
const RANGE = 57876
const LIST = 57877
const SUBPARTITION = 57878
const SUBPARTITIONS = 57879
const HASH = 57880

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"EXTRACT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 44,
	11, 44,
	-2, 34,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 44,
	1, 154,
	556, 154,
	-2, 160,
	-1, 45,
	120, 160,
	160, 160,
	313, 160,
	-2, 458,
	-1, 52,
	33, 631,
	219, 631,
	230, 631,
	263, 645,
	264, 645,
	-2, 633,
	-1, 57,
	221, 655,
	-2, 653,
	-1, 108,
	218, 1108,
	-2, 133,
	-1, 110,
	1, 155,
	556, 155,
	-2, 160,
	-1, 120,
	121, 361,
	224, 361,
	-2, 452,
	-1, 139,
	120, 160,
	160, 160,
	313, 160,
	-2, 467,
	-1, 604,
	204, 1129,
	-2, 1125,
	-1, 605,
	204, 1130,
	-2, 1126,
	-1, 675,
	57, 723,
	-2, 731,
	-1, 712,
	136, 1487,
	-2, 126,
	-1, 713,
	136, 1364,
	-2, 127,
	-1, 719,
	136, 1418,
	-2, 1102,
	-1, 861,
	136, 1297,
	-2, 1099,
	-1, 897,
	229, 38,
	234, 38,
	-2, 372,
	-1, 974,
	1, 506,
	556, 506,
	-2, 160,
	-1, 1173,
	57, 724,
	-2, 736,
	-1, 1174,
	57, 725,
	-2, 737,
	-1, 1226,
	120, 160,
	160, 160,
	313, 160,
	-2, 402,
	-1, 1229,
	23, 179,
	-2, 181,
	-1, 1302,
	121, 361,
	224, 361,
	-2, 452,
	-1, 1311,
	229, 39,
	234, 39,
	-2, 373,
	-1, 1566,
	204, 1134,
	-2, 1128,
	-1, 1643,
	120, 160,
	160, 160,
	313, 160,
	-2, 403,
	-1, 1884,
	75, 91,
	84, 91,
	-2, 790,
	-1, 2052,
	47, 1070,
	-2, 1064,
	-1, 2242,
	5, 50,
	16, 50,
	18, 50,
	85, 50,
	-2, 765,
}

const yyPrivate = 57344

const yyLast = 35075

var yyAct = [...]int{
	604, 2538, 2110, 593, 2534, 2467, 2533, 613, 2397, 1597,
	606, 2393, 2429, 2399, 2288, 2461, 2494, 1640, 2249, 1229,
	2150, 2448, 2435, 2162, 1580, 1904, 1911, 2361, 3, 2063,
	90, 1155, 1037, 2312, 668, 2066, 2151, 554, 595, 34,
	1828, 1913, 1188, 2213, 2067, 596, 2317, 1614, 176, 2064,
	2233, 176, 1856, 514, 176, 550, 2207, 2061, 607, 530,
	1848, 176, 548, 690, 1879, 985, 1675, 1601, 546, 176,
	2053, 1953, 2304, 1930, 594, 1991, 2109, 1695, 1680, 1931,
	1629, 176, 1932, 33, 1868, 576, 717, 35, 1619, 927,
	691, 1618, 864, 1175, 148, 1840, 542, 1560, 1513, 1708,
	134, 670, 2007, 530, 1014, 1740, 530, 176, 530, 1694,
	672, 1682, 676, 1506, 1465, 1924, 1218, 1197, 892, 1621,
	85, 559, 1886, 1309, 1525, 89, 1158, 1483, 1413, 1055,
	693, 871, 1316, 1692, 1325, 714, 1582, 1399, 898, 893,
	1606, 1416, 868, 872, 895, 894, 1217, 1201, 1421, 1278,
	1035, 1030, 1671, 1301, 682, 92, 151, 677, 905, 111,
	1602, 678, 1215, 117, 112, 970, 704, 680, 537, 2511,
	118, 1125, 1121, 2343, 70, 83, 91, 79, 2539, 2430,
	1283, 2251, 1573, 2251, 2252, 2253, 2400, 1971, 1970, 1738,
	679, 71, 8, 7, 6, 698, 1999, 703, 2000, 119,
	2537, 113, 2549, 2548, 1472, 684, 1577, 1578, 1471, 1470,
	1469, 1385, 1468, 487, 1467, 1454, 84, 1459, 178, 179,
	180, 540, 2481, 541, 865, 1826, 929, 2049, 2525, 2489,
	875, 538, 880, 2504, 932, 2131, 1850, 2265, 2357, 943,
	944, 547, 947, 948, 949, 950, 671, 669, 953, 954,
	955, 956, 957, 958, 959, 960, 961, 962, 963, 964,
	965, 966, 967, 718, 96, 711, 908, 113, 685, 692,
	886, 2356, 931, 2283, 887, 885, 2284, 1056, 2536, 930,
	909, 72, 2524, 2458, 74, 933, 934, 935, 2549, 1778,
	2516, 72, 2415, 72, 1687, 72, 2502, 2289, 2449, 172,
	1056, 1726, 98, 99, 2457, 102, 940, 2006, 108, 2194,
	1292, 173, 945, 2414, 482, 1859, 1827, 1685, 2101, 2102,
	178, 179, 180, 114, 1978, 1635, 1636, 2100, 1977, 1634,
	884, 113, 979, 980, 667, 1998, 156, 675, 1775, 1004,
	1860, 1554, 2330, 1219, 1021, 1220, 1023, 1579, 879, 1895,
	665, 881, 1894, 1776, 517, 1896, 664, 2345, 81, 1033,
	2394, 1009, 1010, 1921, 992, 706, 707, 517, 81, 993,
	81, 517, 81, 1005, 998, 992, 1655, 1654, 1563, 1066,
	993, 2186, 1020, 1022, 2184, 2164, 882, 528, 991, 1087,
	990, 1458, 153, 532, 154, 504, 526, 2210, 1752, 1749,
	1751, 1750, 1066, 1460, 1461, 1462, 969, 946, 1162, 171,
	2366, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1095,
	1097, 1098, 1546, 1535, 1536, 1537, 1538, 1548, 1539, 1540,
	1541, 1553, 1549, 1542, 1543, 1550, 1551, 1552, 1544, 1545,
	1547, 503, 1954, 1709, 884, 1974, 876, 1684, 1011, 517,
	1006, 999, 501, 878, 877, 1405, 1741, 1032, 1012, 1375,
	2158, 1400, 2165, 178, 179, 180, 1746, 2515, 2159, 2482,
	1062, 1018, 973, 1054, 1754, 1019, 1755, 1027, 1756, 1007,
	1008, 1013, 176, 975, 176, 1024, 1986, 176, 1757, 888,
	498, 952, 951, 1062, 883, 1745, 2353, 517, 2166, 512,
	882, 1376, 1743, 1377, 2278, 1025, 1711, 1017, 916, 1615,
	1900, 925, 914, 157, 509, 530, 530, 530, 924, 1747,
	923, 900, 162, 922, 921, 582, 583, 584, 601, 603,
	602, 920, 919, 530, 530, 1744, 918, 1295, 913, 1776,
	889, 926, 1917, 1099, 1099, 1990, 869, 518, 869, 2512,
	2500, 901, 867, 869, 988, 1002, 994, 995, 996, 997,
	518, 1414, 1693, 1048, 518, 1315, 2130, 1829, 1831, 705,
	942, 1987, 2498, 34, 1732, 488, 1410, 490, 505, 1034,
	520, 1042, 519, 494, 936, 492, 496, 506, 497, 2138,
	491, 1973, 502, 2036, 2035, 493, 507, 508, 510, 524,
	523, 511, 2510, 500, 521, 2034, 2342, 907, 883, 1290,
	1289, 884, 968, 1028, 1288, 2390, 2346, 1963, 1102, 1103,
	1104, 1105, 1411, 1286, 1976, 2002, 1789, 486, 1110, 149,
	1113, 481, 1061, 1058, 1059, 1060, 1065, 1067, 1064, 1728,
	1063, 1686, 518, 907, 2248, 917, 1406, 1057, 1026, 915,
	1404, 1148, 1100, 1101, 1153, 1061, 1058, 1059, 1060, 1065,
	1067, 1064, 2413, 1063, 2211, 176, 1039, 1040, 1314, 907,
	1057, 2229, 1985, 1891, 972, 1984, 1855, 1818, 1572, 1205,
	1135, 983, 176, 1106, 75, 1641, 2367, 1993, 2535, 907,
	518, 1777, 1992, 1993, 110, 1099, 1098, 80, 1992, 1154,
	2099, 530, 670, 1168, 906, 176, 1166, 80, 1165, 80,
	530, 80, 1169, 978, 687, 981, 530, 1830, 672, 1387,
	1386, 1388, 1389, 1390, 1015, 71, 989, 1051, 1049, 1050,
	105, 1422, 1163, 1031, 2428, 178, 179, 180, 2409, 1508,
	906, 1001, 714, 2223, 928, 910, 900, 522, 1123, 907,
	1124, 1127, 1003, 1742, 2008, 911, 1407, 1154, 178, 179,
	180, 971, 1852, 1167, 987, 515, 906, 89, 941, 1141,
	1142, 1143, 1144, 912, 2496, 883, 1221, 2497, 1052, 2495,
	516, 907, 1526, 1401, 1159, 1402, 906, 2023, 1403, 1943,
	1071, 106, 900, 903, 904, 2326, 869, 92, 2191, 2120,
	897, 901, 2243, 1526, 597, 1803, 577, 579, 598, 599,
	1509, 575, 578, 600, 1478, 1480, 1481, 2119, 1727, 896,
	150, 155, 152, 158, 159, 160, 161, 163, 164, 165,
	166, 1715, 1156, 1853, 2010, 1479, 167, 168, 169, 170,
	580, 581, 1069, 1799, 1070, 1071, 906, 1164, 669, 1187,
	1324, 910, 900, 1069, 671, 1070, 1071, 2441, 1016, 1323,
	1184, 911, 2025, 1182, 176, 1423, 2439, 1725, 1279, 974,
	718, 1070, 1071, 1211, 1212, 2443, 2444, 1287, 906, 1313,
	1915, 1916, 1907, 1723, 900, 903, 904, 2440, 869, 1720,
	916, 914, 897, 901, 1195, 986, 530, 2012, 1311, 2016,
	2475, 2011, 1069, 2009, 1070, 1071, 1320, 2513, 2014, 2105,
	1322, 2530, 1206, 530, 530, 1798, 530, 2013, 530, 530,
	1724, 530, 530, 530, 530, 530, 530, 1908, 1488, 1216,
	2015, 2017, 1607, 1608, 2545, 1069, 530, 1070, 1071, 1170,
	176, 1358, 1489, 1490, 1487, 1794, 1321, 2189, 1182, 2466,
	1069, 1910, 1070, 1071, 1793, 1069, 176, 1070, 1071, 1194,
	1905, 1093, 1094, 1096, 1095, 1097, 1098, 530, 2431, 176,
	1182, 1353, 1354, 81, 1915, 1916, 2264, 1293, 1294, 1720,
	1412, 1906, 2476, 1914, 176, 2514, 1486, 1069, 1307, 1070,
	1071, 1182, 1300, 2263, 1069, 1917, 1070, 1071, 1530, 1069,
	176, 1070, 1071, 2418, 2464, 618, 619, 176, 2136, 1069,
	1722, 1070, 1071, 1912, 1928, 2383, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 530, 530, 530, 1355, 1319,
	1927, 1069, 709, 1070, 1071, 1361, 1362, 1318, 1690, 2419,
	1285, 1367, 1368, 1069, 1297, 1070, 1071, 1310, 1327, 1394,
	1328, 2384, 1330, 1332, 1298, 176, 1336, 1338, 1340, 1342,
	1344, 1296, 1317, 1317, 1426, 1781, 1782, 1783, 1395, 1392,
	1418, 1430, 1380, 1432, 1433, 1434, 1435, 1914, 1379, 2197,
	1439, 1091, 1092, 1093, 1094, 1096, 1095, 1097, 1098, 1917,
	1378, 1369, 1371, 2196, 1453, 1424, 1425, 1356, 1792, 1363,
	1507, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1073, 1429,
	1415, 2432, 1393, 1516, 530, 2349, 1436, 1437, 1438, 1069,
	1382, 1070, 1071, 1929, 1360, 1359, 1334, 2387, 1484, 530,
	530, 113, 1391, 1069, 886, 1070, 1071, 1191, 2386, 885,
	2385, 1559, 2325, 1482, 1558, 1291, 2323, 2301, 1492, 1428,
	1069, 2261, 1070, 1071, 1069, 2116, 1070, 1071, 1527, 1937,
	1925, 176, 1069, 1150, 1070, 1071, 1736, 1735, 1564, 1555,
	1556, 1557, 178, 179, 180, 1449, 1450, 1451, 1600, 1452,
	178, 179, 180, 1381, 2117, 1586, 1192, 176, 1909, 1511,
	530, 1510, 1455, 1585, 605, 1419, 1383, 1370, 1366, 1069,
	176, 1070, 1071, 530, 1485, 178, 179, 180, 176, 1898,
	176, 1365, 176, 176, 530, 1364, 1193, 530, 1029, 178,
	179, 180, 1566, 1703, 2161, 178, 179, 180, 530, 1701,
	1587, 1182, 1588, 1846, 2540, 1568, 1569, 2423, 1564, 2281,
	2509, 86, 177, 95, 89, 177, 714, 2351, 177, 714,
	86, 2350, 87, 531, 94, 177, 93, 88, 1846, 2491,
	89, 87, 2287, 177, 88, 88, 2486, 2485, 95, 1593,
	1846, 2470, 1846, 2455, 1955, 177, 1617, 1565, 1857, 94,
	1940, 93, 1649, 530, 1846, 2422, 1846, 2403, 2222, 1696,
	1697, 1698, 1566, 1857, 1700, 1702, 2224, 531, 2373, 1182,
	531, 177, 531, 2281, 1182, 684, 1182, 530, 1661, 1662,
	1663, 1664, 1068, 530, 1320, 1182, 2408, 1320, 1846, 1320,
	1645, 1644, 1182, 1182, 2528, 1719, 1491, 1627, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504,
	1505, 1595, 1846, 2279, 1677, 1710, 1648, 1612, 1182, 1865,
	1610, 1720, 1182, 2227, 1182, 530, 2062, 1507, 1865, 1683,
	2126, 1632, 1507, 1507, 2222, 1087, 2222, 1647, 1083, 1887,
	1084, 2128, 2127, 1646, 718, 94, 1631, 718, 2124, 2125,
	2124, 2123, 1865, 1182, 1085, 1086, 1082, 1088, 1089, 1090,
	1091, 1092, 1093, 1094, 1096, 1095, 1097, 1098, 176, 1707,
	1790, 1182, 700, 1776, 1972, 176, 1282, 1957, 1951, 1952,
	176, 176, 1846, 1845, 176, 1656, 176, 1657, 1658, 1659,
	1660, 1678, 176, 1691, 1689, 1699, 1688, 1673, 1674, 176,
	2094, 1842, 1888, 1667, 1668, 1669, 1670, 1714, 1887, 1776,
	1717, 1890, 1718, 1790, 1713, 1864, 88, 1729, 1716, 1712,
	908, 1068, 1182, 1678, 1721, 1730, 1633, 176, 530, 1282,
	1281, 1227, 1226, 1790, 909, 1811, 1808, 543, 1807, 1720,
	1731, 1704, 1605, 1186, 1317, 1733, 1734, 1575, 1463, 1409,
	1213, 891, 890, 2468, 2522, 2266, 1512, 2427, 2424, 81,
	1767, 1768, 2402, 1518, 1519, 1770, 694, 1349, 1087, 1865,
	2001, 1888, 674, 1790, 1771, 2396, 2363, 1189, 2337, 2547,
	1776, 1720, 1739, 2258, 1284, 1567, 1676, 2160, 1570, 1571,
	1088, 1089, 1090, 1091, 1092, 1093, 1094, 1096, 1095, 1097,
	1098, 2122, 1087, 1484, 1788, 2267, 2268, 2269, 1958, 2270,
	1760, 1883, 1672, 1087, 1666, 1665, 1397, 1350, 1351, 1352,
	1312, 1592, 1786, 1308, 1088, 1089, 1090, 1091, 1092, 1093,
	1094, 1096, 1095, 1097, 1098, 1088, 1089, 1090, 1091, 1092,
	1093, 1094, 1096, 1095, 1097, 1098, 176, 1280, 107, 81,
	2398, 1934, 973, 2163, 176, 2543, 2271, 2272, 2234, 2235,
	2364, 1687, 530, 1774, 1933, 2472, 2436, 1346, 2237, 2143,
	2142, 2141, 2062, 1851, 1944, 1824, 1761, 1456, 2240, 1485,
	1870, 1873, 1874, 1875, 1871, 1784, 1872, 1876, 2084, 2239,
	2234, 2235, 2081, 2085, 176, 1180, 1176, 176, 1088, 1089,
	1090, 1091, 1092, 1093, 1094, 1096, 1095, 1097, 1098, 2080,
	1177, 1934, 1897, 1861, 1347, 1348, 2082, 2484, 2456, 1802,
	1190, 2083, 1599, 34, 1870, 1873, 1874, 1875, 1871, 1566,
	1872, 1876, 1881, 2228, 1591, 1589, 1590, 1179, 1847, 1178,
	2086, 2147, 1874, 1875, 2054, 2056, 177, 2042, 177, 2041,
	2382, 177, 2215, 2057, 2316, 2218, 2318, 1843, 530, 688,
	2214, 2051, 1408, 176, 663, 1159, 1919, 689, 1652, 1938,
	176, 938, 1825, 937, 2173, 1933, 530, 1880, 1522, 531,
	531, 531, 530, 1839, 1565, 1950, 1320, 1320, 1844, 586,
	1833, 530, 1523, 1854, 86, 1922, 1923, 531, 531, 86,
	1785, 88, 1787, 1969, 1996, 87, 1041, 1965, 1902, 1964,
	87, 1885, 114, 95, 176, 176, 176, 176, 176, 1968,
	1892, 1889, 2220, 88, 94, 2518, 93, 1607, 1608, 1683,
	2139, 176, 176, 1764, 1903, 88, 2405, 2359, 1918, 1878,
	1596, 696, 697, 2040, 1936, 1753, 1780, 176, 529, 94,
	93, 2039, 1926, 1089, 1090, 1091, 1092, 1093, 1094, 1096,
	1095, 1097, 1098, 1935, 2469, 1507, 2324, 1941, 95, 2322,
	2321, 2314, 1967, 2219, 2217, 1300, 1945, 1946, 1947, 94,
	95, 93, 2144, 2103, 1705, 695, 2313, 2208, 1842, 530,
	1857, 94, 716, 2474, 2473, 866, 1809, 873, 1207, 1966,
	1199, 670, 2474, 530, 2388, 2022, 100, 101, 2115, 1959,
	1960, 686, 97, 176, 82, 1, 2438, 530, 499, 2029,
	1576, 2033, 2004, 1157, 513, 2434, 530, 2003, 1384, 177,
	1374, 2290, 2360, 530, 530, 1681, 176, 176, 176, 176,
	176, 1994, 899, 139, 1995, 1988, 177, 1642, 176, 1643,
	2451, 104, 862, 176, 103, 176, 902, 176, 2033, 2005,
	176, 176, 176, 2044, 2074, 531, 2018, 2065, 1000, 177,
	1800, 676, 2065, 1706, 531, 2282, 2068, 2045, 2019, 2093,
	531, 2112, 1920, 2118, 1653, 2032, 1233, 1231, 176, 1232,
	2059, 1169, 1230, 1235, 1234, 1457, 527, 1877, 174, 1222,
	585, 1200, 939, 489, 2129, 2043, 1737, 2046, 495, 2137,
	1815, 1816, 1111, 2038, 1893, 176, 677, 1072, 715, 708,
	678, 2095, 530, 2070, 2096, 2076, 2077, 2075, 2079, 530,
	2078, 2087, 1180, 1176, 176, 2212, 2091, 2037, 2149, 2112,
	2050, 2097, 89, 2052, 176, 1119, 1849, 1177, 1418, 2055,
	2048, 2381, 2111, 2315, 2404, 1650, 1196, 1801, 176, 1118,
	1524, 176, 2146, 2108, 1622, 1584, 2104, 1477, 2073, 552,
	551, 2174, 1173, 1174, 1179, 549, 1178, 1835, 1858, 1074,
	608, 1208, 2133, 1869, 2132, 1867, 1866, 1762, 543, 1628,
	2236, 2232, 2532, 2134, 2135, 2460, 1624, 1620, 1841, 560,
	553, 545, 2107, 1651, 1975, 1683, 2148, 2157, 2155, 176,
	2111, 1053, 2153, 1172, 2145, 2517, 539, 874, 1521, 2365,
	1779, 2193, 1171, 1533, 1534, 2344, 1899, 60, 177, 38,
	2171, 2172, 534, 2169, 2168, 2176, 2480, 1044, 702, 32,
	2175, 31, 30, 29, 28, 23, 22, 21, 20, 2182,
	19, 25, 18, 17, 16, 109, 47, 44, 42, 116,
	531, 115, 45, 41, 976, 176, 2206, 39, 1198, 27,
	26, 15, 14, 13, 12, 11, 10, 531, 531, 2209,
	531, 9, 531, 531, 5, 531, 531, 531, 531, 531,
	531, 2221, 4, 2216, 1047, 24, 2, 2231, 2250, 2238,
	531, 2241, 0, 0, 177, 0, 0, 0, 0, 176,
	0, 2244, 176, 176, 176, 530, 0, 0, 2246, 2247,
	177, 0, 0, 0, 2277, 0, 0, 0, 0, 2245,
	0, 531, 0, 177, 530, 530, 530, 530, 0, 0,
	0, 2257, 2255, 2256, 0, 0, 0, 0, 177, 0,
	0, 2297, 0, 0, 0, 0, 0, 0, 0, 2179,
	2180, 2260, 2181, 2262, 177, 2183, 0, 2185, 0, 2286,
	172, 177, 530, 530, 530, 176, 0, 0, 0, 0,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 531,
	531, 531, 0, 0, 114, 0, 0, 0, 530, 2310,
	530, 0, 0, 0, 716, 716, 716, 156, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2296, 177,
	0, 1559, 1043, 1045, 2339, 2331, 2320, 2300, 2319, 530,
	2065, 0, 670, 2311, 2333, 34, 2335, 0, 2348, 2329,
	2068, 0, 2327, 0, 2068, 2308, 2309, 0, 0, 1901,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	530, 0, 0, 153, 0, 154, 0, 2340, 2341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 531, 0,
	171, 0, 0, 0, 0, 0, 2352, 0, 2355, 0,
	0, 2354, 2362, 531, 531, 0, 0, 0, 0, 0,
	0, 0, 0, 1151, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 0, 0, 2378, 2380, 2392, 0, 0,
	0, 2377, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 530, 176, 2389, 0, 0, 0,
	0, 670, 0, 2410, 530, 2395, 2068, 0, 0, 0,
	0, 177, 0, 0, 531, 0, 0, 0, 2407, 0,
	1420, 530, 0, 0, 177, 0, 0, 531, 34, 2391,
	0, 0, 177, 530, 177, 0, 177, 177, 531, 530,
	530, 531, 2433, 0, 157, 0, 0, 0, 2420, 2295,
	1203, 0, 531, 162, 176, 530, 2065, 0, 530, 716,
	2437, 2442, 0, 0, 2445, 1223, 2450, 2465, 0, 0,
	0, 2362, 2452, 0, 34, 0, 0, 0, 2459, 0,
	0, 0, 0, 0, 1181, 0, 0, 2471, 0, 2425,
	0, 0, 0, 0, 0, 0, 0, 2477, 0, 0,
	0, 1473, 1474, 1475, 1476, 0, 0, 531, 2490, 2483,
	0, 0, 2488, 0, 0, 0, 0, 530, 2493, 2492,
	0, 2499, 0, 0, 0, 0, 0, 1559, 2501, 0,
	2506, 531, 2503, 2507, 0, 2508, 2505, 531, 0, 0,
	0, 1514, 1515, 2520, 0, 0, 0, 0, 2519, 1520,
	2523, 2521, 0, 0, 0, 0, 0, 2526, 0, 530,
	149, 0, 0, 1559, 0, 0, 2529, 2542, 2531, 2541,
	2544, 2112, 2546, 0, 0, 0, 0, 0, 0, 531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 72,
	36, 37, 74, 0, 543, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 78,
	0, 0, 0, 40, 66, 67, 0, 64, 68, 0,
	0, 0, 177, 0, 0, 0, 65, 1603, 1604, 177,
	0, 0, 0, 0, 177, 177, 0, 0, 177, 0,
	177, 0, 0, 0, 0, 866, 177, 0, 0, 0,
	0, 0, 0, 177, 1639, 53, 0, 0, 1151, 0,
	0, 0, 1326, 1326, 0, 1326, 81, 1326, 1326, 0,
	1335, 1326, 1326, 1326, 1326, 1326, 0, 0, 0, 0,
	0, 177, 531, 1151, 1151, 866, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1679, 0, 0, 1396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 150, 155, 152, 158, 159, 160, 161, 163, 164,
	165, 166, 0, 0, 0, 0, 0, 167, 168, 169,
	170, 0, 0, 0, 716, 716, 716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	43, 46, 49, 48, 51, 0, 63, 0, 0, 69,
	177, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 531, 0, 0, 0,
	0, 52, 77, 76, 0, 0, 61, 62, 50, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2487, 177, 0,
	0, 177, 0, 0, 0, 0, 0, 1250, 0, 0,
	0, 0, 0, 1517, 0, 0, 0, 0, 54, 55,
	1151, 56, 57, 58, 59, 0, 0, 0, 1531, 1532,
	0, 1151, 1151, 1151, 0, 716, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	531, 0, 0, 0, 0, 0, 531, 0, 0, 1598,
	0, 0, 0, 0, 0, 531, 0, 0, 0, 0,
	0, 0, 1203, 0, 0, 716, 0, 0, 0, 1804,
	0, 0, 0, 716, 0, 0, 716, 0, 177, 177,
	177, 177, 177, 0, 0, 0, 0, 866, 0, 0,
	0, 0, 0, 0, 0, 177, 177, 0, 1238, 0,
	0, 0, 75, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 80, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 873, 0, 0, 0, 0, 0, 1198, 0,
	0, 0, 0, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 866, 531, 0, 0,
	0, 0, 873, 0, 0, 0, 0, 177, 1251, 0,
	0, 531, 0, 0, 0, 0, 0, 0, 0, 0,
	531, 0, 0, 0, 0, 0, 0, 531, 531, 0,
	177, 177, 177, 177, 177, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 866, 0, 0, 177, 0, 177,
	0, 177, 0, 0, 177, 177, 177, 0, 0, 0,
	1264, 1267, 1268, 1269, 1270, 1271, 1272, 0, 1273, 1274,
	1275, 1276, 1277, 1252, 1253, 1254, 1255, 1236, 1237, 1265,
	0, 1239, 177, 1240, 1241, 1242, 1243, 1244, 1245, 1246,
	1247, 1248, 1249, 1256, 1257, 1258, 1259, 1260, 1261, 1262,
	1263, 0, 1183, 1185, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 531, 0, 0, 0,
	0, 0, 0, 531, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 587, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 1773, 0, 0,
	0, 0, 177, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2020, 2021, 0, 0, 0, 2024, 0, 0, 0,
	2026, 2027, 2028, 175, 0, 0, 485, 1266, 0, 525,
	0, 0, 0, 0, 0, 0, 485, 0, 0, 0,
	0, 0, 0, 177, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 683, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2060, 0, 701, 0, 701, 0, 0, 0, 0, 0,
	0, 0, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2092, 0, 0, 177,
	0, 0, 716, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 177, 177, 177, 531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 531, 531,
	531, 531, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 531, 531, 177,
	0, 0, 0, 0, 0, 0, 0, 1939, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 0, 531, 1598, 0, 0, 2195, 0,
	0, 1956, 0, 0, 0, 0, 0, 0, 0, 0,
	1961, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 543, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2259, 0, 0, 0, 0,
	0, 1151, 531, 0, 0, 0, 0, 0, 716, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1326, 0, 0, 0, 0, 2285, 531, 177,
	0, 0, 0, 0, 0, 0, 2047, 0, 531, 0,
	0, 0, 0, 0, 0, 716, 0, 1528, 0, 1151,
	0, 1529, 2072, 1326, 1151, 531, 0, 0, 0, 0,
	0, 0, 2298, 0, 2299, 0, 0, 531, 0, 2302,
	2303, 0, 0, 531, 531, 0, 0, 0, 0, 1183,
	1574, 0, 0, 0, 0, 0, 0, 0, 177, 531,
	0, 0, 531, 0, 0, 0, 2328, 0, 0, 0,
	0, 172, 0, 0, 0, 0, 0, 2336, 0, 1594,
	2338, 0, 1949, 0, 0, 0, 0, 485, 0, 485,
	0, 0, 485, 0, 0, 114, 0, 136, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 156, 0,
	0, 866, 0, 0, 1151, 0, 0, 0, 1598, 0,
	0, 531, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 146,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2379, 543, 0, 0,
	0, 0, 0, 531, 153, 0, 154, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1303, 1304, 145,
	144, 171, 0, 0, 0, 0, 0, 0, 2401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1152,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2426,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2446,
	0, 484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 533, 0, 0, 615, 73, 0, 0, 0, 666,
	485, 0, 0, 0, 140, 1305, 147, 0, 1302, 0,
	141, 142, 0, 0, 0, 157, 0, 683, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1598, 0, 0, 870, 0, 0,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2291, 2292, 2293, 2294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 673, 0, 73, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 673, 0, 0, 0,
	0, 2306, 2306, 2306, 0, 2527, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1151, 0, 0, 0, 0, 2332, 0, 2334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 0, 0, 0, 0, 1791, 0, 0,
	0, 1795, 0, 1796, 1797, 0, 0, 0, 1598, 0,
	0, 0, 1805, 0, 0, 1806, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 716,
	1810, 0, 1812, 1813, 0, 1814, 0, 0, 0, 0,
	0, 0, 1819, 1820, 1821, 1822, 1823, 0, 1594, 485,
	0, 0, 0, 0, 0, 0, 143, 0, 0, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 0,
	0, 138, 0, 0, 0, 0, 0, 1598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1152, 0, 0, 0, 0, 0,
	0, 0, 0, 1598, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2416, 0, 0, 0, 0, 0, 1152,
	1152, 0, 0, 0, 0, 485, 172, 0, 1151, 0,
	2421, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1372, 1598, 0, 0, 0, 0, 0, 716, 716,
	114, 0, 136, 0, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 156, 2462, 0, 0, 1598, 0, 1417,
	0, 0, 150, 155, 152, 158, 159, 160, 161, 163,
	164, 165, 166, 0, 0, 485, 0, 0, 167, 168,
	169, 170, 485, 0, 146, 0, 0, 0, 0, 135,
	0, 1440, 1441, 485, 485, 485, 485, 485, 485, 485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	0, 154, 0, 0, 0, 0, 2462, 0, 0, 0,
	0, 0, 123, 124, 145, 144, 171, 0, 0, 0,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 977, 0, 982, 0, 0, 984, 1598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2030, 2031, 0, 701, 0, 0, 0, 0, 0, 0,
	701, 701, 0, 0, 0, 0, 1152, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1152, 1152, 1152,
	701, 1417, 701, 701, 701, 701, 701, 0, 0, 140,
	121, 147, 128, 120, 0, 141, 142, 2071, 0, 0,
	157, 0, 0, 0, 0, 0, 1372, 0, 0, 162,
	129, 0, 0, 0, 2089, 2090, 0, 0, 701, 1036,
	1036, 1036, 0, 0, 132, 130, 125, 126, 127, 131,
	0, 0, 683, 0, 122, 0, 0, 0, 0, 73,
	0, 0, 0, 133, 0, 485, 0, 0, 0, 0,
	0, 1417, 0, 485, 0, 485, 0, 485, 1630, 0,
	0, 0, 0, 0, 0, 0, 673, 1107, 1108, 1109,
	0, 1112, 0, 1114, 1115, 1116, 1117, 0, 1120, 1122,
	1122, 0, 1122, 1126, 1126, 1128, 1129, 1130, 1131, 1132,
	1133, 1134, 0, 1136, 1137, 1138, 1139, 1140, 0, 0,
	0, 0, 1126, 1126, 1126, 1126, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2178, 0, 0, 1210, 0, 0, 0, 0,
	0, 0, 0, 2187, 2188, 2190, 2192, 0, 0, 0,
	0, 0, 0, 2198, 2199, 0, 0, 2200, 0, 0,
	0, 1161, 2204, 0, 673, 0, 0, 0, 673, 0,
	0, 0, 0, 0, 673, 0, 0, 0, 0, 0,
	0, 143, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 2225, 2226, 138, 0, 2230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 485, 0, 0, 0, 0, 0, 0,
	485, 0, 0, 0, 0, 485, 485, 0, 0, 485,
	0, 1765, 0, 0, 0, 0, 0, 485, 0, 0,
	0, 0, 0, 0, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 485, 0, 1228, 0, 0, 150, 155, 152,
	158, 159, 160, 161, 163, 164, 165, 166, 0, 0,
	0, 0, 0, 167, 168, 169, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 701, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1357, 0, 0, 0, 0, 0, 0, 0, 0, 2347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 701, 701, 1398,
	0, 0, 0, 0, 0, 0, 0, 0, 1417, 0,
	2358, 485, 0, 0, 0, 0, 0, 0, 0, 1372,
	0, 0, 0, 2368, 2369, 2370, 0, 2371, 2372, 2374,
	1427, 0, 0, 2375, 2376, 0, 0, 1431, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1442, 1443,
	1444, 1445, 1446, 1447, 1448, 0, 0, 0, 0, 485,
	0, 0, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1466, 0, 0, 0, 0,
	2412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1036,
	1036, 1036, 0, 0, 0, 0, 0, 0, 485, 0,
	0, 0, 0, 0, 0, 1948, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2478, 2479, 0, 0, 0, 0, 0, 0, 485,
	485, 485, 485, 485, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 485, 485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 701, 0, 0, 0,
	1609, 0, 0, 0, 0, 0, 0, 0, 1613, 0,
	1616, 0, 0, 1466, 0, 0, 0, 1152, 0, 0,
	0, 0, 0, 701, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1152, 0, 0, 0, 0,
	1152, 485, 485, 485, 485, 485, 1623, 0, 172, 0,
	0, 0, 0, 2088, 0, 0, 0, 1250, 485, 1299,
	1372, 0, 485, 0, 0, 485, 2098, 1417, 0, 0,
	0, 0, 114, 0, 136, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 0, 0, 0, 0,
	0, 0, 0, 485, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 146, 0, 0, 0,
	485, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	1152, 0, 0, 0, 0, 0, 0, 0, 0, 485,
	0, 153, 0, 154, 0, 0, 0, 0, 0, 485,
	0, 0, 0, 0, 1303, 1304, 145, 144, 171, 0,
	0, 0, 0, 485, 0, 0, 485, 0, 1466, 0,
	0, 0, 0, 0, 0, 1748, 0, 0, 0, 0,
	1758, 1759, 0, 0, 1763, 0, 0, 0, 1238, 0,
	0, 0, 1766, 0, 0, 0, 0, 0, 0, 1769,
	616, 617, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1772, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 140, 1305, 147, 0, 1302, 0, 141, 142, 0,
	0, 0, 157, 0, 0, 0, 0, 0, 1251, 0,
	485, 162, 622, 623, 624, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 0, 485, 0, 0, 485, 485, 485,
	1264, 1267, 1268, 1269, 1270, 1271, 1272, 0, 1273, 1274,
	1275, 1276, 1277, 1252, 1253, 1254, 1255, 1236, 1237, 1265,
	0, 1239, 0, 1240, 1241, 1242, 1243, 1244, 1245, 1246,
	1247, 1248, 1249, 1256, 1257, 1258, 1259, 1260, 1261, 1262,
	1263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 149, 0,
	1372, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 1884, 1152, 1817,
	609, 616, 617, 618, 619, 610, 612, 0, 0, 0,
	611, 0, 0, 0, 0, 0, 1832, 0, 614, 620,
	621, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 673, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1266, 0, 1862,
	1863, 0, 0, 143, 0, 0, 0, 0, 1882, 0,
	0, 2113, 2114, 1942, 0, 137, 0, 0, 138, 0,
	0, 0, 0, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 1979, 1980, 1981, 1982, 1983, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 1466, 1989, 609, 616, 617, 618, 619, 610, 612,
	485, 0, 0, 611, 0, 0, 0, 1997, 0, 0,
	0, 614, 620, 621, 0, 0, 1962, 0, 0, 0,
	0, 0, 0, 0, 1152, 0, 0, 0, 0, 150,
	155, 152, 158, 159, 160, 161, 163, 164, 165, 166,
	0, 0, 0, 0, 0, 167, 168, 169, 170, 0,
	0, 0, 0, 0, 2113, 2114, 0, 0, 0, 1372,
	0, 0, 0, 0, 0, 0, 622, 623, 624, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1623, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2121, 0,
	0, 0, 0, 0, 0, 2069, 0, 73, 0, 0,
	1623, 1623, 1623, 1623, 1623, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2140, 0, 1882, 0, 0,
	0, 1623, 0, 0, 1623, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2152, 0, 0, 0, 0, 0,
	0, 0, 2106, 0, 2156, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2167, 0,
	0, 2170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2154, 0, 0, 0, 0, 0, 0, 0, 0, 2205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 597, 0, 0, 0, 598, 599,
	0, 0, 0, 600, 0, 0, 0, 0, 0, 0,
	0, 2177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 609, 616, 617,
	618, 619, 610, 612, 0, 0, 0, 611, 0, 2201,
	2202, 2203, 0, 0, 0, 0, 620, 621, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2273,
	0, 0, 2274, 2275, 2276, 0, 0, 0, 2113, 2114,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1623,
	622, 623, 624, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2069,
	0, 73, 0, 2069, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2069, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2406, 0,
	0, 0, 0, 0, 73, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 844, 830, 409, 0, 778, 847,
	748, 766, 857, 769, 772, 812, 727, 791, 332, 763,
	73, 752, 723, 758, 724, 750, 780, 236, 747, 832,
	795, 846, 288, 233, 729, 753, 346, 768, 187, 814,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 853, 292, 801, 0, 394, 317,
	0, 0, 0, 782, 836, 789, 826, 777, 813, 737,
	800, 848, 764, 809, 849, 278, 219, 186, 329, 395,
	251, 0, 0, 0, 0, 178, 179, 180, 0, 2453,
	0, 2454, 0, 0, 0, 0, 0, 210, 0, 217,
	760, 0, 0, 0, 0, 0, 806, 843, 761, 808,
	231, 276, 238, 230, 413, 854, 835, 0, 0, 202,
	845, 784, 0, 811, 0, 860, 722, 803, 0, 725,
	728, 856, 839, 756, 241, 0, 0, 0, 0, 0,
	0, 0, 781, 790, 823, 775, 0, 0, 0, 0,
	0, 0, 0, 754, 0, 799, 0, 0, 0, 733,
	726, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 779, 0, 0, 0, 736, 0, 755, 824,
	0, 720, 259, 730, 318, 0, 828, 838, 776, 445,
	842, 774, 773, 818, 734, 834, 767, 287, 732, 284,
	182, 198, 0, 765, 328, 368, 374, 833, 751, 759,
	222, 757, 372, 342, 430, 206, 249, 365, 347, 370,
	798, 816, 371, 293, 418, 360, 428, 446, 447, 229,
	322, 436, 407, 442, 458, 199, 226, 336, 400, 433,
	391, 315, 414, 415, 283, 390, 257, 185, 291, 452,
	197, 380, 214, 204, 190, 402, 426, 211, 383, 0,
	0, 460, 192, 424, 399, 311, 280, 281, 191, 0,
	364, 234, 255, 224, 331, 421, 422, 223, 461, 201,
	441, 194, 1038, 440, 324, 417, 425, 312, 303, 193,
	423, 310, 302, 286, 245, 266, 358, 296, 359, 267,
	320, 319, 321, 0, 188, 0, 396, 434, 462, 207,
	208, 209, 746, 244, 248, 254, 256, 262, 263, 270,
	289, 335, 357, 355, 361, 829, 412, 429, 437, 444,
	450, 451, 453, 454, 455, 456, 457, 323, 269, 392,
	285, 294, 821, 859, 341, 373, 212, 432, 393, 741,
	745, 739, 740, 793, 794, 742, 850, 851, 852, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 825, 735,
	0, 743, 744, 0, 831, 840, 841, 797, 181, 195,
	290, 855, 362, 252, 459, 439, 435, 721, 738, 228,
	749, 0, 0, 762, 770, 771, 783, 785, 786, 787,
	788, 314, 804, 805, 807, 815, 817, 820, 822, 827,
	837, 858, 183, 184, 196, 205, 215, 227, 242, 250,
	260, 265, 268, 273, 274, 277, 282, 300, 305, 306,
	307, 308, 325, 326, 327, 330, 333, 334, 337, 339,
	340, 343, 350, 351, 352, 353, 354, 356, 363, 367,
	375, 376, 377, 378, 379, 381, 382, 386, 387, 388,
	389, 397, 401, 419, 420, 431, 443, 448, 261, 427,
	449, 0, 299, 796, 802, 301, 246, 264, 275, 810,
	438, 398, 200, 369, 253, 189, 218, 203, 225, 240,
	243, 279, 309, 316, 345, 349, 258, 237, 216, 366,
	213, 384, 404, 405, 406, 408, 313, 232, 348, 792,
	819, 297, 410, 411, 271, 844, 830, 409, 0, 778,
	847, 748, 766, 857, 769, 772, 812, 727, 791, 332,
	763, 0, 752, 723, 758, 724, 750, 780, 236, 747,
	832, 795, 846, 288, 233, 729, 753, 346, 768, 187,
	814, 385, 221, 298, 295, 416, 247, 239, 235, 220,
	272, 304, 344, 403, 338, 853, 292, 801, 0, 394,
	317, 0, 0, 0, 782, 836, 789, 826, 777, 813,
	737, 800, 848, 764, 809, 849, 278, 219, 186, 329,
	395, 251, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 760, 0, 0, 0, 0, 0, 806, 843, 761,
	808, 231, 276, 238, 230, 413, 854, 835, 0, 0,
	202, 845, 784, 0, 811, 0, 860, 722, 803, 0,
	725, 728, 856, 839, 756, 241, 0, 0, 0, 0,
	0, 0, 0, 781, 790, 823, 775, 0, 0, 0,
	0, 0, 2099, 0, 754, 0, 799, 0, 0, 0,
	733, 726, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 779, 0, 0, 0, 736, 0, 755,
	824, 0, 720, 259, 730, 318, 0, 828, 838, 776,
	445, 842, 774, 773, 818, 734, 834, 767, 287, 732,
	284, 182, 198, 0, 765, 328, 368, 374, 833, 751,
	759, 222, 757, 372, 342, 430, 206, 249, 365, 347,
	370, 798, 816, 371, 293, 418, 360, 428, 446, 447,
	229, 322, 436, 407, 442, 458, 199, 226, 336, 400,
	433, 391, 315, 414, 415, 283, 390, 257, 185, 291,
	452, 197, 380, 214, 204, 190, 402, 426, 211, 383,
	0, 0, 460, 192, 424, 399, 311, 280, 281, 191,
	0, 364, 234, 255, 224, 331, 421, 422, 223, 461,
	201, 441, 194, 1038, 440, 324, 417, 425, 312, 303,
	193, 423, 310, 302, 286, 245, 266, 358, 296, 359,
	267, 320, 319, 321, 0, 188, 0, 396, 434, 462,
	207, 208, 209, 746, 244, 248, 254, 256, 262, 263,
	270, 289, 335, 357, 355, 361, 829, 412, 429, 437,
	444, 450, 451, 453, 454, 455, 456, 457, 323, 269,
	392, 285, 294, 821, 859, 341, 373, 212, 432, 393,
	741, 745, 739, 740, 793, 794, 742, 850, 851, 852,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 825,
	735, 0, 743, 744, 0, 831, 840, 841, 797, 181,
	195, 290, 855, 362, 252, 459, 439, 435, 721, 738,
	228, 749, 0, 0, 762, 770, 771, 783, 785, 786,
	787, 788, 314, 804, 805, 807, 815, 817, 820, 822,
	827, 837, 858, 183, 184, 196, 205, 215, 227, 242,
	250, 260, 265, 268, 273, 274, 277, 282, 300, 305,
	306, 307, 308, 325, 326, 327, 330, 333, 334, 337,
	339, 340, 343, 350, 351, 352, 353, 354, 356, 363,
	367, 375, 376, 377, 378, 379, 381, 382, 386, 387,
	388, 389, 397, 401, 419, 420, 431, 443, 448, 261,
	427, 449, 0, 299, 796, 802, 301, 246, 264, 275,
	810, 438, 398, 200, 369, 253, 189, 218, 203, 225,
	240, 243, 279, 309, 316, 345, 349, 258, 237, 216,
	366, 213, 384, 404, 405, 406, 408, 313, 232, 348,
	792, 819, 297, 410, 411, 271, 844, 830, 409, 0,
	778, 847, 748, 766, 857, 769, 772, 812, 727, 791,
	332, 763, 0, 752, 723, 758, 724, 750, 780, 236,
	747, 832, 795, 846, 288, 233, 729, 753, 346, 768,
	187, 814, 385, 221, 298, 295, 416, 247, 239, 235,
	220, 272, 304, 344, 403, 338, 853, 292, 801, 0,
	394, 317, 0, 0, 0, 782, 836, 789, 826, 777,
	813, 737, 800, 848, 764, 809, 849, 278, 219, 186,
	329, 395, 251, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 217, 760, 0, 0, 0, 0, 0, 806, 843,
	761, 808, 231, 276, 238, 230, 413, 854, 835, 0,
	0, 202, 845, 784, 0, 811, 0, 860, 722, 803,
	0, 725, 728, 856, 839, 756, 241, 0, 0, 0,
	0, 0, 0, 0, 781, 790, 823, 775, 0, 0,
	0, 0, 0, 2058, 0, 754, 0, 799, 0, 0,
	0, 733, 726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 779, 0, 0, 0, 736, 0,
	755, 824, 0, 720, 259, 730, 318, 0, 828, 838,
	776, 445, 842, 774, 773, 818, 734, 834, 767, 287,
	732, 284, 182, 198, 0, 765, 328, 368, 374, 833,
	751, 759, 222, 757, 372, 342, 430, 206, 249, 365,
	347, 370, 798, 816, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 1038, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 746, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 829, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 821, 859, 341, 373, 212, 432,
	393, 741, 745, 739, 740, 793, 794, 742, 850, 851,
	852, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	825, 735, 0, 743, 744, 0, 831, 840, 841, 797,
	181, 195, 290, 855, 362, 252, 459, 439, 435, 721,
	738, 228, 749, 0, 0, 762, 770, 771, 783, 785,
	786, 787, 788, 314, 804, 805, 807, 815, 817, 820,
	822, 827, 837, 858, 183, 184, 196, 205, 215, 227,
	242, 250, 260, 265, 268, 273, 274, 277, 282, 300,
	305, 306, 307, 308, 325, 326, 327, 330, 333, 334,
	337, 339, 340, 343, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 381, 382, 386,
	387, 388, 389, 397, 401, 419, 420, 431, 443, 448,
	261, 427, 449, 0, 299, 796, 802, 301, 246, 264,
	275, 810, 438, 398, 200, 369, 253, 189, 218, 203,
	225, 240, 243, 279, 309, 316, 345, 349, 258, 237,
	216, 366, 213, 384, 404, 405, 406, 408, 313, 232,
	348, 792, 819, 297, 410, 411, 271, 844, 830, 409,
	0, 778, 847, 748, 766, 857, 769, 772, 812, 727,
	791, 332, 763, 0, 752, 723, 758, 724, 750, 780,
	236, 747, 832, 795, 846, 288, 233, 729, 753, 346,
	768, 187, 814, 385, 221, 298, 295, 416, 247, 239,
	235, 220, 272, 304, 344, 403, 338, 853, 292, 801,
	0, 394, 317, 0, 0, 0, 782, 836, 789, 826,
	777, 813, 737, 800, 848, 764, 809, 849, 278, 219,
	186, 329, 395, 251, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 217, 760, 0, 0, 0, 0, 0, 806,
	843, 761, 808, 231, 276, 238, 230, 413, 854, 835,
	0, 0, 202, 845, 784, 0, 811, 0, 860, 722,
	803, 0, 725, 728, 856, 839, 756, 241, 0, 0,
	0, 0, 0, 0, 0, 781, 790, 823, 775, 0,
	0, 0, 0, 0, 1611, 0, 754, 0, 799, 0,
	0, 0, 733, 726, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 779, 0, 0, 0, 736,
	0, 755, 824, 0, 720, 259, 730, 318, 0, 828,
	838, 776, 445, 842, 774, 773, 818, 734, 834, 767,
	287, 732, 284, 182, 198, 0, 765, 328, 368, 374,
	833, 751, 759, 222, 757, 372, 342, 430, 206, 249,
	365, 347, 370, 798, 816, 371, 293, 418, 360, 428,
	446, 447, 229, 322, 436, 407, 442, 458, 199, 226,
	336, 400, 433, 391, 315, 414, 415, 283, 390, 257,
	185, 291, 452, 197, 380, 214, 204, 190, 402, 426,
	211, 383, 0, 0, 460, 192, 424, 399, 311, 280,
	281, 191, 0, 364, 234, 255, 224, 331, 421, 422,
	223, 461, 201, 441, 194, 1038, 440, 324, 417, 425,
	312, 303, 193, 423, 310, 302, 286, 245, 266, 358,
	296, 359, 267, 320, 319, 321, 0, 188, 0, 396,
	434, 462, 207, 208, 209, 746, 244, 248, 254, 256,
	262, 263, 270, 289, 335, 357, 355, 361, 829, 412,
	429, 437, 444, 450, 451, 453, 454, 455, 456, 457,
	323, 269, 392, 285, 294, 821, 859, 341, 373, 212,
	432, 393, 741, 745, 739, 740, 793, 794, 742, 850,
	851, 852, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 825, 735, 0, 743, 744, 0, 831, 840, 841,
	797, 181, 195, 290, 855, 362, 252, 459, 439, 435,
	721, 738, 228, 749, 0, 0, 762, 770, 771, 783,
	785, 786, 787, 788, 314, 804, 805, 807, 815, 817,
	820, 822, 827, 837, 858, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 796, 802, 301, 246,
	264, 275, 810, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 792, 819, 297, 410, 411, 271, 844, 830,
	409, 0, 778, 847, 748, 766, 857, 769, 772, 812,
	727, 791, 332, 763, 0, 752, 723, 758, 724, 750,
	780, 236, 747, 832, 795, 846, 288, 233, 729, 753,
	346, 768, 187, 814, 385, 221, 298, 295, 416, 247,
	239, 235, 220, 272, 304, 344, 403, 338, 853, 292,
	801, 0, 394, 317, 0, 0, 0, 782, 836, 789,
	826, 777, 813, 737, 800, 848, 764, 809, 849, 278,
	219, 186, 329, 395, 251, 0, 81, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 217, 760, 0, 0, 0, 0, 0,
	806, 843, 761, 808, 231, 276, 238, 230, 413, 854,
	835, 0, 0, 202, 845, 784, 0, 811, 0, 860,
	722, 803, 0, 725, 728, 856, 839, 756, 241, 0,
	0, 0, 0, 0, 0, 0, 781, 790, 823, 775,
	0, 0, 0, 0, 0, 0, 0, 754, 0, 799,
	0, 0, 0, 733, 726, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 779, 0, 0, 0,
	736, 0, 755, 824, 0, 720, 259, 730, 318, 0,
	828, 838, 776, 445, 842, 774, 773, 818, 734, 834,
	767, 287, 732, 284, 182, 198, 0, 765, 328, 368,
	374, 833, 751, 759, 222, 757, 372, 342, 430, 206,
	249, 365, 347, 370, 798, 816, 371, 293, 418, 360,
	428, 446, 447, 229, 322, 436, 407, 442, 458, 199,
	226, 336, 400, 433, 391, 315, 414, 415, 283, 390,
	257, 185, 291, 452, 197, 380, 214, 204, 190, 402,
	426, 211, 383, 0, 0, 460, 192, 424, 399, 311,
	280, 281, 191, 0, 364, 234, 255, 224, 331, 421,
	422, 223, 461, 201, 441, 194, 1038, 440, 324, 417,
	425, 312, 303, 193, 423, 310, 302, 286, 245, 266,
	358, 296, 359, 267, 320, 319, 321, 0, 188, 0,
	396, 434, 462, 207, 208, 209, 746, 244, 248, 254,
	256, 262, 263, 270, 289, 335, 357, 355, 361, 829,
	412, 429, 437, 444, 450, 451, 453, 454, 455, 456,
	457, 323, 269, 392, 285, 294, 821, 859, 341, 373,
	212, 432, 393, 741, 745, 739, 740, 793, 794, 742,
	850, 851, 852, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 825, 735, 0, 743, 744, 0, 831, 840,
	841, 797, 181, 195, 290, 855, 362, 252, 459, 439,
	435, 721, 738, 228, 749, 0, 0, 762, 770, 771,
	783, 785, 786, 787, 788, 314, 804, 805, 807, 815,
	817, 820, 822, 827, 837, 858, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 325, 326, 327, 330,
	333, 334, 337, 339, 340, 343, 350, 351, 352, 353,
	354, 356, 363, 367, 375, 376, 377, 378, 379, 381,
	382, 386, 387, 388, 389, 397, 401, 419, 420, 431,
	443, 448, 261, 427, 449, 0, 299, 796, 802, 301,
	246, 264, 275, 810, 438, 398, 200, 369, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 316, 345, 349,
	258, 237, 216, 366, 213, 384, 404, 405, 406, 408,
	313, 232, 348, 792, 819, 297, 410, 411, 271, 844,
	830, 409, 0, 778, 847, 748, 766, 857, 769, 772,
	812, 727, 791, 332, 763, 0, 752, 723, 758, 724,
	750, 780, 236, 747, 832, 795, 846, 288, 233, 729,
	753, 346, 768, 187, 814, 385, 221, 298, 295, 416,
	247, 239, 235, 220, 272, 304, 344, 403, 338, 853,
	292, 801, 0, 394, 317, 0, 0, 0, 782, 836,
	789, 826, 777, 813, 737, 800, 848, 764, 809, 849,
	278, 219, 186, 329, 395, 251, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 217, 760, 0, 0, 0, 0,
	0, 806, 843, 761, 808, 231, 276, 238, 230, 413,
	854, 835, 0, 0, 202, 845, 784, 0, 811, 0,
	860, 722, 803, 0, 725, 728, 856, 839, 756, 241,
	0, 0, 0, 0, 0, 0, 0, 781, 790, 823,
	775, 0, 0, 0, 0, 0, 0, 0, 754, 0,
	799, 0, 0, 0, 733, 726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 779, 0, 0,
	0, 736, 0, 755, 824, 0, 720, 259, 730, 318,
	0, 828, 838, 776, 445, 842, 774, 773, 818, 734,
	834, 767, 287, 732, 284, 182, 198, 0, 765, 328,
	368, 374, 833, 751, 759, 222, 757, 372, 342, 430,
	206, 249, 365, 347, 370, 798, 816, 371, 293, 418,
	360, 428, 446, 447, 229, 322, 436, 407, 442, 458,
	199, 226, 336, 400, 433, 391, 315, 414, 415, 283,
	390, 257, 185, 291, 452, 197, 380, 214, 204, 190,
	402, 426, 211, 383, 0, 0, 460, 192, 424, 399,
	311, 280, 281, 191, 0, 364, 234, 255, 224, 331,
	421, 422, 223, 461, 201, 441, 194, 1038, 440, 324,
	417, 425, 312, 303, 193, 423, 310, 302, 286, 245,
	266, 358, 296, 359, 267, 320, 319, 321, 0, 188,
	0, 396, 434, 462, 207, 208, 209, 746, 244, 248,
	254, 256, 262, 263, 270, 289, 335, 357, 355, 361,
	829, 412, 429, 437, 444, 450, 451, 453, 454, 455,
	456, 457, 323, 269, 392, 285, 294, 821, 859, 341,
	373, 212, 432, 393, 741, 745, 739, 740, 793, 794,
	742, 850, 851, 852, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 825, 735, 0, 743, 744, 0, 831,
	840, 841, 797, 181, 195, 290, 855, 362, 252, 459,
	439, 435, 721, 738, 228, 749, 0, 0, 762, 770,
	771, 783, 785, 786, 787, 788, 314, 804, 805, 807,
	815, 817, 820, 822, 827, 837, 858, 183, 184, 196,
	205, 215, 227, 242, 250, 260, 265, 268, 273, 274,
	277, 282, 300, 305, 306, 307, 308, 325, 326, 327,
	330, 333, 334, 337, 339, 340, 343, 350, 351, 352,
	353, 354, 356, 363, 367, 375, 376, 377, 378, 379,
	381, 382, 386, 387, 388, 389, 397, 401, 419, 420,
	431, 443, 448, 261, 427, 449, 0, 299, 796, 802,
	301, 246, 264, 275, 810, 438, 398, 200, 369, 253,
	189, 218, 203, 225, 240, 243, 279, 309, 316, 345,
	349, 258, 237, 216, 366, 213, 384, 404, 405, 406,
	408, 313, 232, 348, 792, 819, 297, 410, 411, 271,
	844, 830, 409, 0, 778, 847, 748, 766, 857, 769,
	772, 812, 727, 791, 332, 763, 0, 752, 723, 758,
	724, 750, 780, 236, 747, 832, 795, 846, 288, 233,
	729, 753, 346, 768, 187, 814, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	853, 292, 801, 0, 394, 317, 0, 0, 0, 782,
	836, 789, 826, 777, 813, 737, 800, 848, 764, 809,
	849, 278, 219, 186, 329, 395, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 217, 760, 0, 0, 0,
	0, 0, 806, 843, 761, 808, 231, 276, 238, 230,
	413, 854, 835, 0, 0, 861, 845, 784, 0, 811,
	0, 860, 722, 803, 0, 725, 728, 856, 839, 756,
	241, 0, 0, 0, 0, 0, 0, 0, 781, 790,
	823, 775, 0, 0, 0, 0, 0, 0, 0, 754,
	0, 799, 0, 0, 0, 733, 726, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 779, 0,
	0, 0, 736, 0, 755, 824, 0, 720, 259, 730,
	318, 0, 828, 838, 776, 445, 842, 774, 773, 818,
	734, 834, 767, 287, 732, 284, 182, 198, 0, 765,
	328, 368, 374, 833, 751, 759, 222, 757, 372, 342,
	430, 206, 249, 365, 347, 370, 798, 816, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 731, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 746, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 829, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 719, 713, 712, 285, 294, 821, 859,
	341, 373, 212, 432, 393, 741, 745, 739, 740, 793,
	794, 742, 850, 851, 852, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 825, 735, 0, 743, 744, 0,
	831, 840, 841, 797, 181, 195, 290, 855, 362, 252,
	459, 439, 435, 721, 738, 228, 749, 0, 0, 762,
	770, 771, 783, 785, 786, 787, 788, 314, 804, 805,
	807, 815, 817, 820, 822, 827, 837, 858, 183, 184,
	196, 205, 215, 227, 242, 250, 260, 265, 268, 273,
	274, 277, 282, 300, 305, 306, 307, 308, 325, 326,
	327, 330, 333, 334, 337, 339, 340, 343, 350, 351,
	352, 353, 354, 356, 363, 367, 375, 376, 377, 378,
	379, 381, 382, 386, 387, 388, 389, 397, 401, 419,
	420, 431, 443, 448, 261, 427, 449, 0, 299, 796,
	802, 301, 246, 264, 275, 810, 438, 398, 200, 369,
	253, 189, 218, 203, 225, 240, 243, 279, 309, 316,
	345, 349, 258, 237, 216, 366, 213, 384, 404, 405,
	406, 408, 313, 232, 348, 792, 819, 297, 410, 411,
	271, 844, 830, 409, 0, 778, 847, 748, 766, 857,
	769, 772, 812, 727, 791, 332, 763, 0, 752, 723,
	758, 724, 750, 780, 236, 747, 832, 795, 846, 288,
	233, 729, 753, 346, 768, 187, 814, 385, 221, 298,
	295, 416, 247, 239, 235, 220, 272, 304, 344, 403,
	338, 853, 292, 801, 0, 394, 317, 0, 0, 0,
	782, 836, 789, 826, 777, 813, 737, 800, 848, 764,
	809, 849, 278, 219, 186, 329, 395, 251, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 760, 0, 0,
	0, 0, 0, 806, 843, 761, 808, 231, 276, 238,
	230, 413, 854, 835, 0, 0, 861, 845, 784, 0,
	811, 0, 860, 722, 803, 0, 725, 728, 856, 839,
	756, 241, 0, 0, 0, 0, 0, 0, 0, 781,
	790, 823, 775, 0, 0, 0, 0, 0, 0, 0,
	754, 0, 799, 0, 0, 0, 733, 726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 779,
	0, 0, 0, 736, 0, 755, 824, 0, 720, 259,
	730, 318, 0, 828, 838, 776, 445, 842, 774, 773,
	818, 734, 834, 767, 287, 732, 284, 182, 198, 0,
	765, 328, 368, 374, 833, 751, 759, 222, 757, 372,
	342, 430, 206, 249, 365, 347, 370, 798, 816, 371,
	293, 418, 360, 428, 446, 447, 229, 322, 436, 407,
	442, 458, 199, 226, 336, 400, 433, 391, 315, 414,
	415, 283, 390, 257, 185, 291, 452, 197, 380, 214,
	204, 190, 402, 1214, 211, 383, 0, 0, 460, 192,
	424, 399, 311, 280, 281, 191, 0, 364, 234, 255,
	224, 331, 421, 422, 223, 461, 201, 441, 194, 731,
	440, 324, 417, 425, 312, 303, 193, 423, 310, 302,
	286, 245, 266, 358, 296, 359, 267, 320, 319, 321,
	0, 188, 0, 396, 434, 462, 207, 208, 209, 746,
	244, 248, 254, 256, 262, 263, 270, 289, 335, 357,
	355, 361, 829, 412, 429, 437, 444, 450, 451, 453,
	454, 455, 456, 457, 719, 713, 712, 285, 294, 821,
	859, 341, 373, 212, 432, 393, 741, 745, 739, 740,
	793, 794, 742, 850, 851, 852, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 825, 735, 0, 743, 744,
	0, 831, 840, 841, 797, 181, 195, 290, 855, 362,
	252, 459, 439, 435, 721, 738, 228, 749, 0, 0,
	762, 770, 771, 783, 785, 786, 787, 788, 314, 804,
	805, 807, 815, 817, 820, 822, 827, 837, 858, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 261, 427, 449, 0, 299,
	796, 802, 301, 246, 264, 275, 810, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 792, 819, 297, 410,
	411, 271, 844, 830, 409, 0, 778, 847, 748, 766,
	857, 769, 772, 812, 727, 791, 332, 763, 0, 752,
	723, 758, 724, 750, 780, 236, 747, 832, 795, 846,
	288, 233, 729, 753, 346, 768, 187, 814, 385, 221,
	298, 295, 416, 247, 239, 235, 220, 272, 304, 344,
	403, 338, 853, 292, 801, 0, 394, 317, 0, 0,
	0, 782, 836, 789, 826, 777, 813, 737, 800, 848,
	764, 809, 849, 278, 219, 186, 329, 395, 251, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 217, 760, 0,
	0, 0, 0, 0, 806, 843, 761, 808, 231, 276,
	238, 230, 413, 854, 835, 0, 0, 861, 845, 784,
	0, 811, 0, 860, 722, 803, 0, 725, 728, 856,
	839, 756, 241, 0, 0, 0, 0, 0, 0, 0,
	781, 790, 823, 775, 0, 0, 0, 0, 0, 0,
	0, 754, 0, 799, 0, 0, 0, 733, 726, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	779, 0, 0, 0, 736, 0, 755, 824, 0, 720,
	259, 730, 318, 0, 828, 838, 776, 445, 842, 774,
	773, 818, 734, 834, 767, 287, 732, 284, 182, 198,
	0, 765, 328, 368, 374, 833, 751, 759, 222, 757,
	372, 342, 430, 206, 249, 365, 347, 370, 798, 816,
	371, 293, 418, 360, 428, 446, 447, 229, 322, 436,
	407, 442, 458, 199, 226, 336, 400, 433, 391, 315,
	414, 415, 283, 390, 257, 185, 291, 452, 197, 380,
	214, 204, 190, 402, 710, 211, 383, 0, 0, 460,
	192, 424, 399, 311, 280, 281, 191, 0, 364, 234,
	255, 224, 331, 421, 422, 223, 461, 201, 441, 194,
	731, 440, 324, 417, 425, 312, 303, 193, 423, 310,
	302, 286, 245, 266, 358, 296, 359, 267, 320, 319,
	321, 0, 188, 0, 396, 434, 462, 207, 208, 209,
	746, 244, 248, 254, 256, 262, 263, 270, 289, 335,
	357, 355, 361, 829, 412, 429, 437, 444, 450, 451,
	453, 454, 455, 456, 457, 719, 713, 712, 285, 294,
	821, 859, 341, 373, 212, 432, 393, 741, 745, 739,
	740, 793, 794, 742, 850, 851, 852, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 825, 735, 0, 743,
	744, 0, 831, 840, 841, 797, 181, 195, 290, 855,
	362, 252, 459, 439, 435, 721, 738, 228, 749, 0,
	0, 762, 770, 771, 783, 785, 786, 787, 788, 314,
	804, 805, 807, 815, 817, 820, 822, 827, 837, 858,
	183, 184, 196, 205, 215, 227, 242, 250, 260, 265,
	268, 273, 274, 277, 282, 300, 305, 306, 307, 308,
	325, 326, 327, 330, 333, 334, 337, 339, 340, 343,
	350, 351, 352, 353, 354, 356, 363, 367, 375, 376,
	377, 378, 379, 381, 382, 386, 387, 388, 389, 397,
	401, 419, 420, 431, 443, 448, 261, 427, 449, 0,
	299, 796, 802, 301, 246, 264, 275, 810, 438, 398,
	200, 369, 253, 189, 218, 203, 225, 240, 243, 279,
	309, 316, 345, 349, 258, 237, 216, 366, 213, 384,
	404, 405, 406, 408, 313, 232, 348, 792, 819, 297,
	410, 411, 271, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 332, 0, 0, 1561, 0,
	561, 0, 0, 0, 236, 566, 0, 0, 0, 288,
	233, 0, 1562, 346, 0, 187, 0, 385, 221, 298,
	295, 416, 247, 239, 235, 220, 272, 304, 344, 403,
	338, 573, 292, 0, 0, 394, 317, 0, 0, 0,
	0, 0, 568, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 329, 395, 251, 0, 81,
	0, 0, 178, 179, 180, 609, 616, 617, 618, 619,
	610, 612, 0, 0, 210, 611, 217, 582, 583, 584,
	601, 603, 602, 614, 620, 621, 0, 231, 276, 238,
	230, 413, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 544, 558, 0, 572, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 555, 556, 699, 0,
	0, 0, 591, 0, 557, 0, 0, 565, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 318, 0, 590, 0, 0, 445, 0, 0, 588,
	0, 0, 0, 0, 287, 0, 284, 182, 198, 0,
	0, 328, 368, 374, 0, 0, 0, 222, 0, 372,
	342, 430, 206, 249, 365, 347, 370, 0, 0, 371,
	293, 418, 360, 428, 446, 447, 229, 322, 436, 407,
	442, 458, 199, 226, 336, 400, 433, 391, 315, 414,
	415, 283, 390, 257, 185, 291, 452, 197, 380, 214,
	204, 190, 402, 426, 211, 383, 0, 0, 460, 192,
	424, 399, 311, 280, 281, 191, 0, 364, 234, 255,
	224, 331, 421, 422, 223, 461, 201, 441, 194, 0,
	440, 324, 417, 425, 312, 303, 193, 423, 310, 302,
	286, 245, 266, 358, 296, 359, 267, 320, 319, 321,
	0, 188, 0, 396, 434, 462, 207, 208, 209, 0,
	244, 248, 254, 256, 262, 263, 270, 289, 335, 357,
	355, 361, 0, 412, 429, 437, 444, 450, 451, 453,
	454, 455, 456, 457, 323, 269, 392, 285, 294, 0,
	0, 341, 373, 212, 432, 393, 597, 589, 577, 579,
	598, 599, 574, 575, 578, 600, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 592, 564, 563, 0, 570,
	571, 0, 580, 581, 562, 181, 195, 290, 0, 362,
	252, 459, 439, 435, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 261, 427, 449, 0, 299,
	0, 0, 301, 246, 264, 275, 0, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 409, 0, 297, 410,
	411, 271, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 561, 0, 0, 0, 236, 566, 0,
	0, 0, 288, 233, 0, 0, 346, 0, 187, 0,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 573, 292, 0, 0, 394, 317,
	0, 0, 0, 0, 0, 568, 569, 0, 0, 0,
	0, 0, 0, 1637, 0, 278, 219, 186, 329, 395,
	251, 0, 81, 0, 0, 178, 179, 180, 609, 616,
	617, 618, 619, 610, 612, 0, 0, 210, 611, 217,
	582, 583, 584, 601, 603, 602, 614, 620, 621, 1638,
	231, 276, 238, 230, 413, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 544, 558, 0,
	572, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 555,
	556, 0, 0, 0, 0, 591, 0, 557, 0, 0,
	565, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 567, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 318, 0, 590, 0, 0, 445,
	0, 0, 588, 0, 0, 0, 0, 287, 0, 284,
	182, 198, 0, 0, 328, 368, 374, 0, 0, 0,
	222, 0, 372, 342, 430, 206, 249, 365, 347, 370,
	0, 0, 371, 293, 418, 360, 428, 446, 447, 229,
	322, 436, 407, 442, 458, 199, 226, 336, 400, 433,
	391, 315, 414, 415, 283, 390, 257, 185, 291, 452,
	197, 380, 214, 204, 190, 402, 426, 211, 383, 0,
	0, 460, 192, 424, 399, 311, 280, 281, 191, 0,
	364, 234, 255, 224, 331, 421, 422, 223, 461, 201,
	441, 194, 0, 440, 324, 417, 425, 312, 303, 193,
	423, 310, 302, 286, 245, 266, 358, 296, 359, 267,
	320, 319, 321, 0, 188, 0, 396, 434, 462, 207,
	208, 209, 0, 244, 248, 254, 256, 262, 263, 270,
	289, 335, 357, 355, 361, 0, 412, 429, 437, 444,
	450, 451, 453, 454, 455, 456, 457, 323, 269, 392,
	285, 294, 0, 0, 341, 373, 212, 432, 393, 597,
	589, 577, 579, 598, 599, 574, 575, 578, 600, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 592, 564,
	563, 0, 570, 571, 0, 580, 581, 562, 181, 195,
	290, 0, 362, 252, 459, 439, 435, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 205, 215, 227, 242, 250,
	260, 265, 268, 273, 274, 277, 282, 300, 305, 306,
	307, 308, 325, 326, 327, 330, 333, 334, 337, 339,
	340, 343, 350, 351, 352, 353, 354, 356, 363, 367,
	375, 376, 377, 378, 379, 381, 382, 386, 387, 388,
	389, 397, 401, 419, 420, 431, 443, 448, 261, 427,
	449, 0, 299, 0, 0, 301, 246, 264, 275, 0,
	438, 398, 200, 369, 253, 189, 218, 203, 225, 240,
	243, 279, 309, 316, 345, 349, 258, 237, 216, 366,
	213, 384, 404, 405, 406, 408, 313, 232, 348, 72,
	409, 297, 410, 411, 271, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 561, 0, 0,
	0, 236, 566, 0, 0, 0, 288, 233, 0, 0,
	346, 0, 187, 0, 385, 221, 298, 295, 416, 247,
	239, 235, 220, 272, 304, 344, 403, 338, 573, 292,
	0, 0, 394, 317, 0, 0, 0, 0, 0, 568,
	569, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	219, 186, 329, 395, 251, 0, 81, 0, 0, 178,
	179, 180, 609, 616, 617, 618, 619, 610, 612, 0,
	0, 210, 611, 217, 582, 583, 584, 601, 603, 602,
	614, 620, 621, 0, 231, 276, 238, 230, 413, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 544, 558, 0, 572, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 555, 556, 0, 0, 0, 0, 591,
	0, 557, 0, 0, 565, 622, 623, 624, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 567, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 318, 0,
	590, 0, 0, 445, 0, 0, 588, 0, 0, 0,
	0, 287, 0, 284, 182, 198, 0, 0, 328, 368,
	374, 0, 0, 0, 222, 0, 372, 342, 430, 206,
	249, 365, 347, 370, 0, 0, 371, 293, 418, 360,
	428, 446, 447, 229, 322, 436, 407, 442, 458, 199,
	226, 336, 400, 433, 391, 315, 414, 415, 283, 390,
	257, 185, 291, 452, 197, 380, 214, 204, 190, 402,
	426, 211, 383, 0, 0, 460, 192, 424, 399, 311,
	280, 281, 191, 0, 364, 234, 255, 224, 331, 421,
	422, 223, 461, 201, 441, 194, 0, 440, 324, 417,
	425, 312, 303, 193, 423, 310, 302, 286, 245, 266,
	358, 296, 359, 267, 320, 319, 321, 0, 188, 0,
	396, 434, 462, 207, 208, 209, 0, 244, 248, 254,
	256, 262, 263, 270, 289, 335, 357, 355, 361, 0,
	412, 429, 437, 444, 450, 451, 453, 454, 455, 456,
	457, 323, 269, 392, 285, 294, 0, 0, 341, 373,
	212, 432, 393, 597, 589, 577, 579, 598, 599, 574,
	575, 578, 600, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 592, 564, 563, 0, 570, 571, 0, 580,
	581, 562, 181, 195, 290, 80, 362, 252, 459, 439,
	435, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 325, 326, 327, 330,
	333, 334, 337, 339, 340, 343, 350, 351, 352, 353,
	354, 356, 363, 367, 375, 376, 377, 378, 379, 381,
	382, 386, 387, 388, 389, 397, 401, 419, 420, 431,
	443, 448, 261, 427, 449, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 438, 398, 200, 369, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 316, 345, 349,
	258, 237, 216, 366, 213, 384, 404, 405, 406, 408,
	313, 232, 348, 409, 0, 297, 410, 411, 271, 0,
	0, 0, 0, 0, 0, 332, 0, 0, 0, 0,
	561, 0, 0, 0, 236, 566, 0, 0, 0, 288,
	233, 0, 0, 346, 0, 187, 0, 385, 221, 298,
	295, 416, 247, 239, 235, 220, 272, 304, 344, 403,
	338, 573, 292, 0, 0, 394, 317, 0, 0, 0,
	0, 0, 568, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 329, 395, 251, 0, 81,
	0, 0, 178, 179, 180, 609, 616, 617, 618, 619,
	610, 612, 0, 0, 210, 611, 217, 582, 583, 584,
	601, 603, 602, 614, 620, 621, 0, 231, 276, 238,
	230, 413, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 544, 558, 0, 572, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 555, 556, 0, 0,
	0, 0, 591, 0, 557, 0, 0, 565, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 318, 0, 590, 0, 0, 445, 0, 0, 588,
	0, 0, 0, 0, 287, 0, 284, 182, 198, 0,
	0, 328, 368, 374, 0, 0, 0, 222, 0, 372,
	342, 430, 206, 249, 365, 347, 370, 2447, 0, 371,
	293, 418, 360, 428, 446, 447, 229, 322, 436, 407,
	442, 458, 199, 226, 336, 400, 433, 391, 315, 414,
	415, 283, 390, 257, 185, 291, 452, 197, 380, 214,
	204, 190, 402, 426, 211, 383, 0, 0, 460, 192,
	424, 399, 311, 280, 281, 191, 0, 364, 234, 255,
	224, 331, 421, 422, 223, 461, 201, 441, 194, 0,
	440, 324, 417, 425, 312, 303, 193, 423, 310, 302,
	286, 245, 266, 358, 296, 359, 267, 320, 319, 321,
	0, 188, 0, 396, 434, 462, 207, 208, 209, 0,
	244, 248, 254, 256, 262, 263, 270, 289, 335, 357,
	355, 361, 0, 412, 429, 437, 444, 450, 451, 453,
	454, 455, 456, 457, 323, 269, 392, 285, 294, 0,
	0, 341, 373, 212, 432, 393, 597, 589, 577, 579,
	598, 599, 574, 575, 578, 600, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 592, 564, 563, 0, 570,
	571, 0, 580, 581, 562, 181, 195, 290, 0, 362,
	252, 459, 439, 435, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 261, 427, 449, 0, 299,
	0, 0, 301, 246, 264, 275, 0, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 409, 0, 297, 410,
	411, 271, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 561, 0, 0, 0, 236, 566, 0,
	0, 0, 288, 233, 0, 0, 346, 0, 187, 0,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 573, 292, 0, 0, 394, 317,
	0, 0, 0, 0, 0, 568, 569, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 219, 186, 329, 395,
	251, 0, 81, 0, 1182, 178, 179, 180, 609, 616,
	617, 618, 619, 610, 612, 0, 0, 210, 611, 217,
	582, 583, 584, 601, 603, 602, 614, 620, 621, 0,
	231, 276, 238, 230, 413, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 544, 558, 0,
	572, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 555,
	556, 0, 0, 0, 0, 591, 0, 557, 0, 0,
	565, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 567, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 318, 0, 590, 0, 0, 445,
	0, 0, 588, 0, 0, 0, 0, 287, 0, 284,
	182, 198, 0, 0, 328, 368, 374, 0, 0, 0,
	222, 0, 372, 342, 430, 206, 249, 365, 347, 370,
	0, 0, 371, 293, 418, 360, 428, 446, 447, 229,
	322, 436, 407, 442, 458, 199, 226, 336, 400, 433,
	391, 315, 414, 415, 283, 390, 257, 185, 291, 452,
	197, 380, 214, 204, 190, 402, 426, 211, 383, 0,
	0, 460, 192, 424, 399, 311, 280, 281, 191, 0,
	364, 234, 255, 224, 331, 421, 422, 223, 461, 201,
	441, 194, 0, 440, 324, 417, 425, 312, 303, 193,
	423, 310, 302, 286, 245, 266, 358, 296, 359, 267,
	320, 319, 321, 0, 188, 0, 396, 434, 462, 207,
	208, 209, 0, 244, 248, 254, 256, 262, 263, 270,
	289, 335, 357, 355, 361, 0, 412, 429, 437, 444,
	450, 451, 453, 454, 455, 456, 457, 323, 269, 392,
	285, 294, 0, 0, 341, 373, 212, 432, 393, 597,
	589, 577, 579, 598, 599, 574, 575, 578, 600, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 592, 564,
	563, 0, 570, 571, 0, 580, 581, 562, 181, 195,
	290, 0, 362, 252, 459, 439, 435, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 205, 215, 227, 242, 250,
	260, 265, 268, 273, 274, 277, 282, 300, 305, 306,
	307, 308, 325, 326, 327, 330, 333, 334, 337, 339,
	340, 343, 350, 351, 352, 353, 354, 356, 363, 367,
	375, 376, 377, 378, 379, 381, 382, 386, 387, 388,
	389, 397, 401, 419, 420, 431, 443, 448, 261, 427,
	449, 0, 299, 0, 0, 301, 246, 264, 275, 0,
	438, 398, 200, 369, 253, 189, 218, 203, 225, 240,
	243, 279, 309, 316, 345, 349, 258, 237, 216, 366,
	213, 384, 404, 405, 406, 408, 313, 232, 348, 409,
	0, 297, 410, 411, 271, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 0, 561, 0, 0, 0,
	236, 566, 0, 0, 0, 288, 233, 0, 0, 346,
	0, 187, 0, 385, 221, 298, 295, 416, 247, 239,
	235, 220, 272, 304, 344, 403, 338, 573, 292, 0,
	0, 394, 317, 0, 0, 0, 0, 0, 568, 569,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 219,
	186, 329, 395, 251, 0, 81, 0, 0, 178, 179,
	180, 609, 616, 617, 618, 619, 610, 612, 0, 0,
	210, 611, 217, 582, 583, 584, 601, 603, 602, 614,
	620, 621, 0, 231, 276, 238, 230, 413, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	544, 558, 0, 572, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 555, 556, 699, 0, 0, 0, 591, 0,
	557, 0, 0, 565, 622, 623, 624, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 318, 0, 590,
	0, 0, 445, 0, 0, 588, 0, 0, 0, 0,
	287, 0, 284, 182, 198, 0, 0, 328, 368, 374,
	0, 0, 0, 222, 0, 372, 342, 430, 206, 249,
	365, 347, 370, 0, 0, 371, 293, 418, 360, 428,
	446, 447, 229, 322, 436, 407, 442, 458, 199, 226,
	336, 400, 433, 391, 315, 414, 415, 283, 390, 257,
	185, 291, 452, 197, 380, 214, 204, 190, 402, 426,
	211, 383, 0, 0, 460, 192, 424, 399, 311, 280,
	281, 191, 0, 364, 234, 255, 224, 331, 421, 422,
	223, 461, 201, 441, 194, 0, 440, 324, 417, 425,
	312, 303, 193, 423, 310, 302, 286, 245, 266, 358,
	296, 359, 267, 320, 319, 321, 0, 188, 0, 396,
	434, 462, 207, 208, 209, 0, 244, 248, 254, 256,
	262, 263, 270, 289, 335, 357, 355, 361, 0, 412,
	429, 437, 444, 450, 451, 453, 454, 455, 456, 457,
	323, 269, 392, 285, 294, 0, 0, 341, 373, 212,
	432, 393, 597, 589, 577, 579, 598, 599, 574, 575,
	578, 600, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 592, 564, 563, 0, 570, 571, 0, 580, 581,
	562, 181, 195, 290, 0, 362, 252, 459, 439, 435,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 409, 0, 297, 410, 411, 271, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 561,
	0, 0, 0, 236, 566, 0, 0, 0, 288, 233,
	0, 0, 346, 0, 187, 0, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	573, 292, 0, 0, 394, 317, 0, 0, 0, 0,
	0, 568, 569, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 329, 395, 251, 0, 81, 0,
	0, 178, 179, 180, 609, 616, 617, 618, 619, 610,
	612, 0, 0, 210, 611, 217, 582, 583, 584, 601,
	603, 602, 614, 620, 621, 0, 231, 276, 238, 230,
	413, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 544, 558, 0, 572, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 555, 556, 0, 0, 0,
	0, 591, 0, 557, 0, 0, 565, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 567, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	318, 0, 590, 0, 0, 445, 0, 0, 588, 0,
	0, 0, 0, 287, 0, 284, 182, 198, 0, 0,
	328, 368, 374, 0, 0, 0, 222, 0, 372, 342,
	430, 206, 249, 365, 347, 370, 0, 0, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 0, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 0, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 0, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 323, 269, 392, 285, 294, 0, 0,
	341, 373, 212, 432, 393, 597, 589, 577, 579, 598,
	599, 574, 575, 578, 600, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 592, 564, 563, 0, 570, 571,
	0, 580, 581, 562, 181, 195, 290, 0, 362, 252,
	459, 439, 435, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 205, 215, 227, 242, 250, 260, 265, 268, 273,
	274, 277, 282, 300, 305, 306, 307, 308, 325, 326,
	327, 330, 333, 334, 337, 339, 340, 343, 350, 351,
	352, 353, 354, 356, 363, 367, 375, 376, 377, 378,
	379, 381, 382, 386, 387, 388, 389, 397, 401, 419,
	420, 431, 443, 448, 261, 427, 449, 0, 299, 0,
	0, 301, 246, 264, 275, 0, 438, 398, 200, 369,
	253, 189, 218, 203, 225, 240, 243, 279, 309, 316,
	345, 349, 258, 237, 216, 366, 213, 384, 404, 405,
	406, 408, 313, 232, 348, 409, 0, 297, 410, 411,
	271, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 0, 561, 0, 0, 0, 236, 566, 0, 0,
	0, 288, 233, 0, 0, 346, 0, 187, 0, 385,
	221, 298, 295, 416, 247, 239, 235, 220, 272, 304,
	344, 403, 338, 573, 292, 0, 0, 394, 317, 0,
	0, 0, 0, 0, 568, 569, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 219, 186, 329, 395, 251,
	0, 81, 0, 0, 178, 179, 180, 609, 616, 617,
	618, 619, 610, 612, 0, 0, 210, 611, 217, 582,
	583, 584, 601, 603, 602, 614, 620, 621, 0, 231,
	276, 238, 230, 413, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 558, 0, 572,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 555, 556,
	0, 0, 0, 0, 591, 0, 557, 0, 0, 565,
	622, 623, 624, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 318, 0, 590, 0, 0, 445, 0,
	0, 588, 0, 0, 0, 0, 287, 0, 284, 182,
	198, 0, 0, 328, 368, 374, 0, 0, 0, 222,
	0, 372, 342, 430, 206, 249, 365, 347, 370, 0,
	0, 371, 293, 418, 360, 428, 446, 447, 229, 322,
	436, 407, 442, 458, 199, 226, 336, 400, 433, 391,
	315, 414, 415, 283, 390, 257, 185, 291, 452, 197,
	380, 214, 204, 190, 402, 426, 211, 383, 0, 0,
	460, 192, 424, 399, 311, 280, 281, 191, 0, 364,
	234, 255, 224, 331, 421, 422, 223, 461, 201, 441,
	194, 0, 440, 324, 417, 425, 312, 303, 193, 423,
	310, 302, 286, 245, 266, 358, 296, 359, 267, 320,
	319, 321, 0, 188, 0, 396, 434, 462, 207, 208,
	209, 0, 244, 248, 254, 256, 262, 263, 270, 289,
	335, 357, 355, 361, 0, 412, 429, 437, 444, 450,
	451, 453, 454, 455, 456, 457, 323, 269, 392, 285,
	294, 0, 0, 341, 373, 212, 432, 393, 597, 589,
	577, 579, 598, 599, 574, 575, 578, 600, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 592, 564, 563,
	0, 570, 571, 0, 580, 581, 562, 181, 195, 290,
	0, 362, 252, 459, 439, 435, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 205, 215, 227, 242, 250, 260,
	265, 268, 273, 274, 277, 282, 300, 305, 306, 307,
	308, 325, 326, 327, 330, 333, 334, 337, 339, 340,
	343, 350, 351, 352, 353, 354, 356, 363, 367, 375,
	376, 377, 378, 379, 381, 382, 386, 387, 388, 389,
	397, 401, 419, 420, 431, 443, 448, 261, 427, 449,
	0, 299, 0, 0, 301, 246, 264, 275, 0, 438,
	398, 200, 369, 253, 189, 218, 203, 225, 240, 243,
	279, 309, 316, 345, 349, 258, 237, 216, 366, 213,
	384, 404, 405, 406, 408, 313, 232, 348, 409, 0,
	297, 410, 411, 271, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 0, 0, 288, 233, 0, 0, 346, 0,
	187, 0, 385, 221, 298, 295, 416, 247, 239, 235,
	220, 272, 304, 344, 403, 338, 0, 292, 0, 0,
	394, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 219, 186,
	329, 395, 251, 0, 0, 0, 0, 178, 179, 180,
	0, 616, 617, 0, 0, 0, 0, 0, 0, 210,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 413, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 318, 0, 0, 0,
	0, 445, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 182, 198, 0, 0, 328, 368, 374, 0,
	0, 0, 222, 0, 372, 342, 430, 206, 249, 365,
	347, 370, 0, 0, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 0, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 0, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 0, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 0, 0, 341, 373, 212, 432,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 290, 0, 362, 252, 459, 439, 435, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 205, 215, 227,
	242, 250, 260, 265, 268, 273, 274, 277, 282, 300,
	305, 306, 307, 308, 325, 326, 327, 330, 333, 334,
	337, 339, 340, 343, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 381, 382, 386,
	387, 388, 389, 397, 401, 419, 420, 431, 443, 448,
	261, 427, 449, 0, 299, 0, 0, 301, 246, 264,
	275, 0, 438, 398, 200, 369, 253, 189, 218, 203,
	225, 240, 243, 279, 309, 316, 345, 349, 258, 237,
	216, 366, 213, 384, 404, 405, 406, 408, 313, 232,
	348, 409, 0, 297, 410, 411, 271, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 0, 0, 288, 233, 0,
	0, 346, 0, 187, 0, 385, 221, 298, 295, 416,
	247, 239, 235, 220, 272, 304, 344, 403, 338, 0,
	292, 0, 0, 394, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 219, 186, 329, 395, 251, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 231, 276, 238, 230, 413,
	0, 0, 0, 0, 202, 0, 907, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 318,
	0, 0, 0, 906, 445, 0, 0, 0, 0, 0,
	903, 904, 287, 869, 284, 182, 198, 897, 901, 328,
	368, 374, 0, 0, 0, 222, 0, 372, 342, 430,
	206, 249, 365, 347, 370, 0, 0, 371, 293, 418,
	360, 428, 446, 447, 229, 322, 436, 407, 442, 458,
	199, 226, 336, 400, 433, 391, 315, 414, 415, 283,
	390, 257, 185, 291, 452, 197, 380, 214, 204, 190,
	402, 426, 211, 383, 0, 0, 460, 192, 424, 399,
	311, 280, 281, 191, 0, 364, 234, 255, 224, 331,
	421, 422, 223, 461, 201, 441, 194, 0, 440, 324,
	417, 425, 312, 303, 193, 423, 310, 302, 286, 245,
	266, 358, 296, 359, 267, 320, 319, 321, 0, 188,
	0, 396, 434, 462, 207, 208, 209, 0, 244, 248,
	254, 256, 262, 263, 270, 289, 335, 357, 355, 361,
	0, 412, 429, 437, 444, 450, 451, 453, 454, 455,
	456, 457, 323, 269, 392, 285, 294, 0, 0, 341,
	373, 212, 432, 393, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 195, 290, 0, 362, 252, 459,
	439, 435, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	205, 215, 227, 242, 250, 260, 265, 268, 273, 274,
	277, 282, 300, 305, 306, 307, 308, 325, 326, 327,
	330, 333, 334, 337, 339, 340, 343, 350, 351, 352,
	353, 354, 356, 363, 367, 375, 376, 377, 378, 379,
	381, 382, 386, 387, 388, 389, 397, 401, 419, 420,
	431, 443, 448, 261, 427, 449, 0, 299, 0, 0,
	301, 246, 264, 275, 0, 438, 398, 200, 369, 253,
	189, 218, 203, 225, 240, 243, 279, 309, 316, 345,
	349, 258, 237, 216, 366, 213, 384, 404, 405, 406,
	408, 313, 232, 348, 409, 0, 297, 410, 411, 271,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	1202, 0, 0, 0, 0, 236, 0, 0, 0, 0,
	288, 233, 0, 0, 346, 0, 187, 0, 385, 221,
	298, 295, 416, 247, 239, 235, 220, 272, 304, 344,
	403, 338, 0, 292, 0, 0, 394, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 219, 186, 329, 395, 251, 0,
	0, 0, 0, 178, 179, 180, 0, 1204, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 276,
	238, 230, 413, 0, 0, 0, 0, 202, 0, 0,
	0, 1069, 0, 1070, 1071, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 318, 0, 0, 0, 0, 445, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 284, 182, 198,
	0, 0, 328, 368, 374, 0, 0, 0, 222, 0,
	372, 342, 430, 206, 249, 365, 347, 370, 0, 0,
	371, 293, 418, 360, 428, 446, 447, 229, 322, 436,
	407, 442, 458, 199, 226, 336, 400, 433, 391, 315,
	414, 415, 283, 390, 257, 185, 291, 452, 197, 380,
	214, 204, 190, 402, 426, 211, 383, 0, 0, 460,
	192, 424, 399, 311, 280, 281, 191, 0, 364, 234,
	255, 224, 331, 421, 422, 223, 461, 201, 441, 194,
	0, 440, 324, 417, 425, 312, 303, 193, 423, 310,
	302, 286, 245, 266, 358, 296, 359, 267, 320, 319,
	321, 0, 188, 0, 396, 434, 462, 207, 208, 209,
	0, 244, 248, 254, 256, 262, 263, 270, 289, 335,
	357, 355, 361, 0, 412, 429, 437, 444, 450, 451,
	453, 454, 455, 456, 457, 323, 269, 392, 285, 294,
	0, 0, 341, 373, 212, 432, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 290, 0,
	362, 252, 459, 439, 435, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 205, 215, 227, 242, 250, 260, 265,
	268, 273, 274, 277, 282, 300, 305, 306, 307, 308,
	325, 326, 327, 330, 333, 334, 337, 339, 340, 343,
	350, 351, 352, 353, 354, 356, 363, 367, 375, 376,
	377, 378, 379, 381, 382, 386, 387, 388, 389, 397,
	401, 419, 420, 431, 443, 448, 261, 427, 449, 0,
	299, 0, 0, 301, 246, 264, 275, 0, 438, 398,
	200, 369, 253, 189, 218, 203, 225, 240, 243, 279,
	309, 316, 345, 349, 258, 237, 216, 366, 213, 384,
	404, 405, 406, 408, 313, 232, 348, 409, 0, 297,
	410, 411, 271, 0, 0, 0, 0, 0, 0, 332,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 0, 0, 288, 233, 0, 0, 346, 0, 187,
	0, 385, 221, 298, 295, 416, 247, 239, 235, 220,
	272, 304, 344, 403, 338, 0, 292, 0, 0, 394,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 219, 186, 329,
	395, 251, 0, 0, 0, 0, 178, 179, 180, 1147,
	1150, 0, 0, 0, 1146, 1149, 0, 0, 210, 1145,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 276, 238, 230, 413, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 318, 0, 0, 0, 0,
	445, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	284, 182, 198, 0, 0, 328, 368, 374, 0, 0,
	0, 222, 0, 372, 342, 430, 206, 249, 365, 347,
	370, 0, 0, 371, 293, 418, 360, 428, 446, 447,
	229, 322, 436, 407, 442, 458, 199, 226, 336, 400,
	433, 391, 315, 414, 415, 283, 390, 257, 185, 291,
	452, 197, 380, 214, 204, 190, 402, 426, 211, 383,
	0, 0, 460, 192, 424, 399, 311, 280, 281, 191,
	0, 364, 234, 255, 224, 331, 421, 422, 223, 461,
	201, 441, 194, 0, 440, 324, 417, 425, 312, 303,
	193, 423, 310, 302, 286, 245, 266, 358, 296, 359,
	267, 320, 319, 321, 0, 188, 0, 396, 434, 462,
	207, 208, 209, 0, 244, 248, 254, 256, 262, 263,
	270, 289, 335, 357, 355, 361, 0, 412, 429, 437,
	444, 450, 451, 453, 454, 455, 456, 457, 323, 269,
	392, 285, 294, 0, 0, 341, 373, 212, 432, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	195, 290, 0, 362, 252, 459, 439, 435, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 205, 215, 227, 242,
	250, 260, 265, 268, 273, 274, 277, 282, 300, 305,
	306, 307, 308, 325, 326, 327, 330, 333, 334, 337,
	339, 340, 343, 350, 351, 352, 353, 354, 356, 363,
	367, 375, 376, 377, 378, 379, 381, 382, 386, 387,
	388, 389, 397, 401, 419, 420, 431, 443, 448, 261,
	427, 449, 0, 299, 0, 0, 301, 246, 264, 275,
	0, 438, 398, 200, 369, 253, 189, 218, 203, 225,
	240, 243, 279, 309, 316, 345, 349, 258, 237, 216,
	366, 213, 384, 404, 405, 406, 408, 313, 232, 348,
	72, 409, 297, 410, 411, 271, 0, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 0, 0, 288, 233, 0,
	0, 346, 0, 187, 0, 385, 221, 298, 295, 416,
	247, 239, 235, 220, 272, 304, 344, 403, 338, 0,
	292, 0, 0, 394, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 219, 186, 329, 395, 251, 0, 81, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 231, 276, 238, 230, 413,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 318,
	0, 0, 0, 0, 445, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 284, 182, 198, 0, 0, 328,
	368, 374, 0, 0, 0, 222, 0, 372, 342, 430,
	206, 249, 365, 347, 370, 0, 0, 371, 293, 418,
	360, 428, 446, 447, 229, 322, 436, 407, 442, 458,
	199, 226, 336, 400, 433, 391, 315, 414, 415, 283,
	390, 257, 185, 291, 452, 197, 380, 214, 204, 190,
	402, 426, 211, 383, 0, 0, 460, 192, 424, 399,
	311, 280, 281, 191, 0, 364, 234, 255, 224, 331,
	421, 422, 223, 461, 201, 441, 194, 0, 440, 324,
	417, 425, 312, 303, 193, 423, 310, 302, 286, 245,
	266, 358, 296, 359, 267, 320, 319, 321, 0, 188,
	0, 396, 434, 462, 207, 208, 209, 0, 244, 248,
	254, 256, 262, 263, 270, 289, 335, 357, 355, 361,
	0, 412, 429, 437, 444, 450, 451, 453, 454, 455,
	456, 457, 323, 269, 392, 285, 294, 0, 0, 341,
	373, 212, 432, 393, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 195, 290, 80, 362, 252, 459,
	439, 435, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 1625, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	205, 215, 227, 242, 250, 260, 265, 268, 273, 274,
	277, 282, 300, 305, 306, 307, 308, 325, 326, 327,
	330, 333, 334, 337, 339, 340, 343, 350, 351, 352,
	353, 354, 356, 363, 367, 375, 376, 377, 378, 379,
	381, 382, 386, 387, 388, 389, 397, 401, 419, 420,
	431, 443, 448, 261, 427, 449, 0, 299, 0, 0,
	301, 246, 264, 275, 0, 438, 398, 200, 369, 253,
	189, 218, 203, 225, 240, 243, 279, 309, 316, 345,
	349, 258, 237, 216, 366, 213, 384, 404, 405, 406,
	408, 313, 232, 348, 72, 409, 297, 410, 411, 271,
	0, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 288, 233, 0, 0, 346, 0, 187, 0, 385,
	221, 298, 295, 416, 247, 239, 235, 220, 272, 304,
	344, 403, 338, 0, 292, 0, 0, 394, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 219, 186, 329, 395, 251,
	0, 81, 0, 1182, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	276, 238, 230, 413, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 318, 0, 0, 0, 0, 445, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 284, 182,
	198, 0, 0, 328, 368, 374, 0, 0, 0, 222,
	0, 372, 342, 430, 206, 249, 365, 347, 370, 0,
	0, 371, 293, 418, 360, 428, 446, 447, 229, 322,
	436, 407, 442, 458, 199, 226, 336, 400, 433, 391,
	315, 414, 415, 283, 390, 257, 185, 291, 452, 197,
	380, 214, 204, 190, 402, 426, 211, 383, 0, 0,
	460, 192, 424, 399, 311, 280, 281, 191, 0, 364,
	234, 255, 224, 331, 421, 422, 223, 461, 201, 441,
	194, 0, 440, 324, 417, 425, 312, 303, 193, 423,
	310, 302, 286, 245, 266, 358, 296, 359, 267, 320,
	319, 321, 0, 188, 0, 396, 434, 462, 207, 208,
	209, 0, 244, 248, 254, 256, 262, 263, 270, 289,
	335, 357, 355, 361, 0, 412, 429, 437, 444, 450,
	451, 453, 454, 455, 456, 457, 323, 269, 392, 285,
	294, 0, 0, 341, 373, 212, 432, 393, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 195, 290,
	80, 362, 252, 459, 439, 435, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 205, 215, 227, 242, 250, 260,
	265, 268, 273, 274, 277, 282, 300, 305, 306, 307,
	308, 325, 326, 327, 330, 333, 334, 337, 339, 340,
	343, 350, 351, 352, 353, 354, 356, 363, 367, 375,
	376, 377, 378, 379, 381, 382, 386, 387, 388, 389,
	397, 401, 419, 420, 431, 443, 448, 261, 427, 449,
	0, 299, 0, 0, 301, 246, 264, 275, 0, 438,
	398, 200, 369, 253, 189, 218, 203, 225, 240, 243,
	279, 309, 316, 345, 349, 258, 237, 216, 366, 213,
	384, 404, 405, 406, 408, 313, 232, 348, 409, 0,
	297, 410, 411, 271, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 1583, 0, 0, 0, 0, 236,
	0, 0, 0, 0, 288, 233, 0, 0, 346, 0,
	187, 0, 385, 221, 298, 295, 416, 247, 239, 235,
	220, 272, 304, 344, 403, 338, 0, 292, 0, 0,
	394, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 219, 186,
	329, 395, 251, 0, 0, 0, 0, 178, 179, 180,
	0, 1373, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 413, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 318, 0, 0, 0,
	0, 445, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 182, 198, 0, 0, 328, 368, 374, 0,
	0, 0, 222, 0, 372, 342, 430, 206, 249, 365,
	347, 370, 0, 1581, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 0, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 0, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 0, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 0, 0, 341, 373, 212, 432,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 290, 0, 362, 252, 459, 439, 435, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 205, 215, 227,
	242, 250, 260, 265, 268, 273, 274, 277, 282, 300,
	305, 306, 307, 308, 325, 326, 327, 330, 333, 334,
	337, 339, 340, 343, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 381, 382, 386,
	387, 388, 389, 397, 401, 419, 420, 431, 443, 448,
	261, 427, 449, 0, 299, 0, 0, 301, 246, 264,
	275, 0, 438, 398, 200, 369, 253, 189, 218, 203,
	225, 240, 243, 279, 309, 316, 345, 349, 258, 237,
	216, 366, 213, 384, 404, 405, 406, 408, 313, 232,
	348, 409, 0, 297, 410, 411, 271, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 0, 0, 288, 233, 0,
	0, 346, 0, 187, 0, 385, 221, 298, 295, 416,
	247, 239, 235, 220, 272, 304, 344, 403, 338, 0,
	292, 0, 0, 394, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 219, 186, 329, 395, 251, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 231, 276, 238, 230, 413,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 863, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 318,
	0, 0, 0, 0, 445, 0, 0, 0, 0, 0,
	0, 0, 287, 869, 284, 182, 198, 867, 0, 328,
	368, 374, 0, 0, 0, 222, 0, 372, 342, 430,
	206, 249, 365, 347, 370, 0, 0, 371, 293, 418,
	360, 428, 446, 447, 229, 322, 436, 407, 442, 458,
	199, 226, 336, 400, 433, 391, 315, 414, 415, 283,
	390, 257, 185, 291, 452, 197, 380, 214, 204, 190,
	402, 426, 211, 383, 0, 0, 460, 192, 424, 399,
	311, 280, 281, 191, 0, 364, 234, 255, 224, 331,
	421, 422, 223, 461, 201, 441, 194, 0, 440, 324,
	417, 425, 312, 303, 193, 423, 310, 302, 286, 245,
	266, 358, 296, 359, 267, 320, 319, 321, 0, 188,
	0, 396, 434, 462, 207, 208, 209, 0, 244, 248,
	254, 256, 262, 263, 270, 289, 335, 357, 355, 361,
	0, 412, 429, 437, 444, 450, 451, 453, 454, 455,
	456, 457, 323, 269, 392, 285, 294, 0, 0, 341,
	373, 212, 432, 393, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 195, 290, 0, 362, 252, 459,
	439, 435, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	205, 215, 227, 242, 250, 260, 265, 268, 273, 274,
	277, 282, 300, 305, 306, 307, 308, 325, 326, 327,
	330, 333, 334, 337, 339, 340, 343, 350, 351, 352,
	353, 354, 356, 363, 367, 375, 376, 377, 378, 379,
	381, 382, 386, 387, 388, 389, 397, 401, 419, 420,
	431, 443, 448, 261, 427, 449, 0, 299, 0, 0,
	301, 246, 264, 275, 0, 438, 398, 200, 369, 253,
	189, 218, 203, 225, 240, 243, 279, 309, 316, 345,
	349, 258, 237, 216, 366, 213, 384, 404, 405, 406,
	408, 313, 232, 348, 409, 0, 297, 410, 411, 271,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	1583, 0, 0, 0, 0, 236, 0, 0, 0, 0,
	288, 233, 0, 0, 346, 0, 187, 0, 385, 221,
	298, 295, 416, 247, 239, 235, 220, 272, 304, 344,
	403, 338, 0, 292, 0, 0, 394, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 219, 186, 329, 395, 251, 0,
	0, 0, 0, 178, 179, 180, 0, 1373, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 276,
	238, 230, 413, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 318, 0, 0, 0, 0, 445, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 284, 182, 198,
	0, 0, 328, 368, 374, 0, 0, 0, 222, 0,
	372, 342, 430, 206, 249, 365, 347, 370, 0, 0,
	371, 293, 418, 360, 428, 446, 447, 229, 322, 436,
	407, 442, 458, 199, 226, 336, 400, 433, 391, 315,
	414, 415, 283, 390, 257, 185, 291, 452, 197, 380,
	214, 204, 190, 402, 426, 211, 383, 0, 0, 460,
	192, 424, 399, 311, 280, 281, 191, 0, 364, 234,
	255, 224, 331, 421, 422, 223, 461, 201, 441, 194,
	0, 440, 324, 417, 425, 312, 303, 193, 423, 310,
	302, 286, 245, 266, 358, 296, 359, 267, 320, 319,
	321, 0, 188, 0, 396, 434, 462, 207, 208, 209,
	0, 244, 248, 254, 256, 262, 263, 270, 289, 335,
	357, 355, 361, 0, 412, 429, 437, 444, 450, 451,
	453, 454, 455, 456, 457, 323, 269, 392, 285, 294,
	0, 0, 341, 373, 212, 432, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 290, 0,
	362, 252, 459, 439, 435, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 205, 215, 227, 242, 250, 260, 265,
	268, 273, 274, 277, 282, 300, 305, 306, 307, 308,
	325, 326, 327, 330, 333, 334, 337, 339, 340, 343,
	350, 351, 352, 353, 354, 356, 363, 367, 375, 376,
	377, 378, 379, 381, 382, 386, 387, 388, 389, 397,
	401, 419, 420, 431, 443, 448, 261, 427, 449, 0,
	299, 0, 0, 301, 246, 264, 275, 0, 438, 398,
	200, 369, 253, 189, 218, 203, 225, 240, 243, 279,
	309, 316, 345, 349, 258, 237, 216, 366, 213, 384,
	404, 405, 406, 408, 313, 232, 348, 409, 0, 297,
	410, 411, 271, 0, 0, 0, 0, 0, 0, 332,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 0, 0, 288, 233, 0, 0, 346, 0, 187,
	0, 385, 221, 298, 295, 416, 247, 239, 235, 220,
	272, 304, 344, 403, 338, 0, 292, 0, 0, 394,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 219, 186, 329,
	395, 251, 0, 0, 0, 1182, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 276, 238, 230, 413, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 318, 0, 0, 0, 0,
	445, 0, 0, 0, 2307, 0, 0, 0, 287, 0,
	284, 182, 198, 0, 0, 328, 368, 374, 0, 0,
	0, 222, 0, 372, 342, 430, 206, 249, 365, 347,
	370, 0, 0, 371, 293, 418, 360, 428, 446, 447,
	229, 322, 436, 407, 442, 458, 199, 226, 336, 400,
	433, 391, 315, 414, 415, 283, 390, 257, 185, 291,
	452, 197, 380, 214, 204, 190, 402, 426, 211, 383,
	0, 0, 460, 192, 424, 399, 311, 280, 281, 191,
	0, 364, 234, 255, 224, 331, 421, 422, 223, 461,
	201, 441, 194, 0, 440, 324, 417, 425, 312, 303,
	193, 423, 310, 302, 286, 245, 266, 358, 296, 359,
	267, 320, 319, 321, 0, 188, 0, 396, 434, 462,
	207, 208, 209, 0, 244, 248, 254, 256, 262, 263,
	270, 289, 335, 357, 355, 361, 0, 412, 429, 437,
	444, 450, 451, 453, 454, 455, 456, 457, 323, 269,
	392, 285, 294, 0, 0, 341, 373, 212, 432, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	195, 290, 0, 362, 252, 459, 439, 435, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 205, 215, 227, 242,
	250, 260, 265, 268, 273, 274, 277, 282, 300, 305,
	306, 307, 308, 325, 326, 327, 330, 333, 334, 337,
	339, 340, 343, 350, 351, 352, 353, 354, 356, 363,
	367, 375, 376, 377, 378, 379, 381, 382, 386, 387,
	388, 389, 397, 401, 419, 420, 431, 443, 448, 261,
	427, 449, 0, 299, 0, 0, 301, 246, 264, 275,
	0, 438, 398, 200, 369, 253, 189, 218, 203, 225,
	240, 243, 279, 309, 316, 345, 349, 258, 237, 216,
	366, 213, 384, 404, 405, 406, 408, 313, 232, 348,
	409, 0, 297, 410, 411, 271, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 288, 233, 0, 0,
	346, 0, 187, 0, 385, 221, 298, 295, 416, 247,
	239, 235, 220, 272, 304, 344, 403, 338, 0, 292,
	0, 0, 394, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	219, 186, 329, 395, 251, 0, 81, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 276, 238, 230, 413, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 318, 0,
	0, 0, 0, 445, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 284, 182, 198, 0, 0, 328, 368,
	374, 0, 0, 0, 222, 0, 372, 342, 430, 206,
	249, 365, 347, 370, 0, 0, 371, 293, 418, 360,
	428, 446, 447, 229, 322, 436, 407, 442, 458, 199,
	226, 336, 400, 433, 391, 315, 414, 415, 283, 390,
	257, 185, 291, 452, 197, 380, 214, 204, 190, 402,
	426, 211, 383, 0, 0, 460, 192, 424, 399, 311,
	280, 281, 191, 0, 364, 234, 255, 224, 331, 421,
	422, 223, 461, 201, 441, 194, 0, 440, 324, 417,
	425, 312, 303, 193, 423, 310, 302, 286, 245, 266,
	358, 296, 359, 267, 320, 319, 321, 0, 188, 0,
	396, 434, 462, 207, 208, 209, 0, 244, 248, 254,
	256, 262, 263, 270, 289, 335, 357, 355, 361, 0,
	412, 429, 437, 444, 450, 451, 453, 454, 455, 456,
	457, 323, 269, 392, 285, 294, 0, 0, 341, 373,
	212, 432, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 290, 0, 362, 252, 459, 439,
	435, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	1625, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 325, 326, 327, 330,
	333, 334, 337, 339, 340, 343, 350, 351, 352, 353,
	354, 356, 363, 367, 375, 376, 377, 378, 379, 381,
	382, 386, 387, 388, 389, 397, 401, 419, 420, 431,
	443, 448, 261, 427, 449, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 438, 398, 200, 369, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 316, 345, 349,
	258, 237, 216, 366, 213, 384, 404, 405, 406, 408,
	313, 232, 348, 409, 0, 297, 410, 411, 271, 0,
	0, 0, 0, 0, 0, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 288,
	233, 0, 0, 346, 0, 187, 0, 385, 221, 298,
	295, 416, 247, 239, 235, 220, 272, 304, 344, 403,
	338, 0, 292, 0, 0, 394, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 329, 395, 251, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 1837, 0,
	0, 1838, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 276, 238,
	230, 413, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 318, 0, 0, 0, 0, 445, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 284, 182, 198, 0,
	0, 328, 368, 374, 0, 0, 0, 222, 0, 372,
	342, 430, 206, 249, 365, 347, 370, 0, 0, 371,
	293, 418, 360, 428, 446, 447, 229, 322, 436, 407,
	442, 458, 199, 226, 336, 400, 433, 391, 315, 414,
	415, 283, 390, 257, 185, 291, 452, 197, 380, 214,
	204, 190, 402, 426, 211, 383, 0, 0, 460, 192,
	424, 399, 311, 280, 281, 191, 0, 364, 234, 255,
	224, 331, 421, 422, 223, 461, 201, 441, 194, 0,
	440, 324, 417, 425, 312, 303, 193, 423, 310, 302,
	286, 245, 266, 358, 296, 359, 267, 320, 319, 321,
	0, 188, 0, 396, 434, 462, 207, 208, 209, 0,
	244, 248, 254, 256, 262, 263, 270, 289, 335, 357,
	355, 361, 0, 412, 429, 437, 444, 450, 451, 453,
	454, 455, 456, 457, 323, 269, 392, 285, 294, 0,
	0, 341, 373, 212, 432, 393, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 290, 0, 362,
	252, 459, 439, 435, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 261, 427, 449, 0, 299,
	0, 0, 301, 246, 264, 275, 0, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 409, 0, 297, 410,
	411, 271, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 1225, 0,
	0, 0, 288, 233, 0, 0, 346, 0, 187, 0,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 0, 292, 0, 0, 394, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 219, 186, 329, 395,
	251, 0, 0, 0, 0, 178, 179, 180, 0, 1224,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 276, 238, 230, 413, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 318, 0, 0, 0, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 284,
	182, 198, 0, 0, 328, 368, 374, 0, 0, 0,
	222, 0, 372, 342, 430, 206, 249, 365, 347, 370,
	0, 0, 371, 293, 418, 360, 428, 446, 447, 229,
	322, 436, 407, 442, 458, 199, 226, 336, 400, 433,
	391, 315, 414, 415, 283, 390, 257, 185, 291, 452,
	197, 380, 214, 204, 190, 402, 426, 211, 383, 0,
	0, 460, 192, 424, 399, 311, 280, 281, 191, 0,
	364, 234, 255, 224, 331, 421, 422, 223, 461, 201,
	441, 194, 0, 440, 324, 417, 425, 312, 303, 193,
	423, 310, 302, 286, 245, 266, 358, 296, 359, 267,
	320, 319, 321, 0, 188, 0, 396, 434, 462, 207,
	208, 209, 0, 244, 248, 254, 256, 262, 263, 270,
	289, 335, 357, 355, 361, 0, 412, 429, 437, 444,
	450, 451, 453, 454, 455, 456, 457, 323, 269, 392,
	285, 294, 0, 0, 341, 373, 212, 432, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	290, 0, 362, 252, 459, 439, 435, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 205, 215, 227, 242, 250,
	260, 265, 268, 273, 274, 277, 282, 300, 305, 306,
	307, 308, 325, 326, 327, 330, 333, 334, 337, 339,
	340, 343, 350, 351, 352, 353, 354, 356, 363, 367,
	375, 376, 377, 378, 379, 381, 382, 386, 387, 388,
	389, 397, 401, 419, 420, 431, 443, 448, 261, 427,
	449, 0, 299, 0, 0, 301, 246, 264, 275, 0,
	438, 398, 200, 369, 253, 189, 218, 203, 225, 240,
	243, 279, 309, 316, 345, 349, 258, 237, 216, 366,
	213, 384, 404, 405, 406, 408, 313, 232, 348, 409,
	0, 297, 410, 411, 271, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 0, 0, 288, 233, 0, 0, 346,
	0, 187, 0, 385, 221, 298, 295, 416, 247, 239,
	235, 220, 272, 304, 344, 403, 338, 0, 292, 0,
	0, 394, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 219,
	186, 329, 395, 251, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 276, 238, 230, 413, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 318, 0, 0,
	0, 0, 445, 0, 0, 0, 2417, 0, 0, 0,
	287, 0, 284, 182, 198, 0, 0, 328, 368, 374,
	0, 0, 0, 222, 0, 372, 342, 430, 206, 249,
	365, 347, 370, 0, 0, 371, 293, 418, 360, 428,
	446, 447, 229, 322, 436, 407, 442, 458, 199, 226,
	336, 400, 433, 391, 315, 414, 415, 283, 390, 257,
	185, 291, 452, 197, 380, 214, 204, 190, 402, 426,
	211, 383, 0, 0, 460, 192, 424, 399, 311, 280,
	281, 191, 0, 364, 234, 255, 224, 331, 421, 422,
	223, 461, 201, 441, 194, 0, 440, 324, 417, 425,
	312, 303, 193, 423, 310, 302, 286, 245, 266, 358,
	296, 359, 267, 320, 319, 321, 0, 188, 0, 396,
	434, 462, 207, 208, 209, 0, 244, 248, 254, 256,
	262, 263, 270, 289, 335, 357, 355, 361, 0, 412,
	429, 437, 444, 450, 451, 453, 454, 455, 456, 457,
	323, 269, 392, 285, 294, 0, 0, 341, 373, 212,
	432, 393, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 290, 0, 362, 252, 459, 439, 435,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 409, 0, 297, 410, 411, 271, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 346, 0, 187, 0, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	0, 292, 0, 0, 394, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 329, 395, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 276, 238, 230,
	413, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	318, 0, 0, 0, 0, 445, 0, 0, 0, 2307,
	0, 0, 0, 287, 0, 284, 182, 198, 0, 0,
	328, 368, 374, 0, 0, 0, 222, 0, 372, 342,
	430, 206, 249, 365, 347, 370, 0, 0, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 0, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 0, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 0, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 323, 269, 392, 285, 294, 0, 0,
	341, 373, 212, 432, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 290, 0, 362, 252,
	459, 439, 435, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 205, 215, 227, 242, 250, 260, 265, 268, 273,
	274, 277, 282, 300, 305, 306, 307, 308, 325, 326,
	327, 330, 333, 334, 337, 339, 340, 343, 350, 351,
	352, 353, 354, 356, 363, 367, 375, 376, 377, 378,
	379, 381, 382, 386, 387, 388, 389, 397, 401, 419,
	420, 431, 443, 448, 261, 427, 449, 0, 299, 0,
	0, 301, 246, 264, 275, 0, 438, 398, 200, 369,
	253, 189, 218, 203, 225, 240, 243, 279, 309, 316,
	345, 349, 258, 237, 216, 366, 213, 384, 404, 405,
	406, 408, 313, 232, 348, 409, 0, 297, 410, 411,
	271, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 288, 233, 0, 0, 346, 0, 187, 0, 385,
	221, 298, 295, 416, 247, 239, 235, 220, 272, 304,
	344, 403, 338, 0, 292, 0, 0, 394, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 219, 186, 329, 395, 251,
	0, 0, 0, 0, 178, 179, 180, 0, 1373, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	276, 238, 230, 413, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 318, 0, 0, 0, 0, 445, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 284, 182,
	198, 0, 0, 328, 368, 374, 0, 0, 0, 222,
	0, 372, 342, 430, 206, 249, 365, 347, 370, 0,
	0, 371, 293, 418, 360, 428, 446, 447, 229, 322,
	436, 407, 442, 458, 199, 226, 336, 400, 433, 391,
	315, 414, 415, 283, 390, 257, 185, 291, 452, 197,
	380, 214, 204, 190, 402, 426, 211, 383, 0, 0,
	460, 192, 424, 399, 311, 280, 281, 191, 0, 364,
	234, 255, 224, 331, 421, 422, 223, 461, 201, 441,
	194, 0, 440, 324, 417, 425, 312, 303, 193, 423,
	310, 302, 286, 245, 266, 358, 296, 359, 267, 320,
	319, 321, 0, 188, 0, 396, 434, 462, 207, 208,
	209, 0, 244, 248, 254, 256, 262, 263, 270, 289,
	335, 357, 355, 361, 0, 412, 429, 437, 444, 450,
	451, 453, 454, 455, 456, 457, 323, 269, 392, 285,
	294, 0, 0, 341, 373, 212, 432, 393, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 195, 290,
	0, 362, 252, 459, 439, 435, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 205, 215, 227, 242, 250, 260,
	265, 268, 273, 274, 277, 282, 300, 305, 306, 307,
	308, 325, 326, 327, 330, 333, 334, 337, 339, 340,
	343, 350, 351, 352, 353, 354, 356, 363, 367, 375,
	376, 377, 378, 379, 381, 382, 386, 387, 388, 389,
	397, 401, 419, 420, 431, 443, 448, 261, 427, 449,
	0, 299, 0, 0, 301, 246, 264, 275, 0, 438,
	398, 200, 369, 253, 189, 218, 203, 225, 240, 243,
	279, 309, 316, 345, 349, 258, 237, 216, 366, 213,
	384, 404, 405, 406, 408, 313, 232, 348, 0, 409,
	297, 410, 411, 271, 1626, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 0, 0, 288, 233, 0, 0, 346,
	0, 187, 0, 385, 221, 298, 295, 416, 247, 239,
	235, 220, 272, 304, 344, 403, 338, 0, 292, 0,
	0, 394, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 219,
	186, 329, 395, 251, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 276, 238, 230, 413, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 318, 0, 0,
	0, 0, 445, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 284, 182, 198, 0, 0, 328, 368, 374,
	0, 0, 0, 222, 0, 372, 342, 430, 206, 249,
	365, 347, 370, 0, 0, 371, 293, 418, 360, 428,
	446, 447, 229, 322, 436, 407, 442, 458, 199, 226,
	336, 400, 433, 391, 315, 414, 415, 283, 390, 257,
	185, 291, 452, 197, 380, 214, 204, 190, 402, 426,
	211, 383, 0, 0, 460, 192, 424, 399, 311, 280,
	281, 191, 0, 364, 234, 255, 224, 331, 421, 422,
	223, 461, 201, 441, 194, 0, 440, 324, 417, 425,
	312, 303, 193, 423, 310, 302, 286, 245, 266, 358,
	296, 359, 267, 320, 319, 321, 0, 188, 0, 396,
	434, 462, 207, 208, 209, 0, 244, 248, 254, 256,
	262, 263, 270, 289, 335, 357, 355, 361, 0, 412,
	429, 437, 444, 450, 451, 453, 454, 455, 456, 457,
	323, 269, 392, 285, 294, 0, 0, 341, 373, 212,
	432, 393, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 290, 0, 362, 252, 459, 439, 435,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 409, 0, 297, 410, 411, 271, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 346, 0, 187, 0, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	0, 292, 0, 0, 394, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 329, 395, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 1204, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 276, 238, 230,
	413, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	318, 0, 0, 0, 0, 445, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 284, 182, 198, 0, 0,
	328, 368, 374, 0, 0, 0, 222, 0, 372, 342,
	430, 206, 249, 365, 347, 370, 0, 0, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 0, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 0, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 0, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 323, 269, 392, 285, 294, 0, 0,
	341, 373, 212, 432, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 290, 0, 362, 252,
	459, 439, 435, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 205, 215, 227, 242, 250, 260, 265, 268, 273,
	274, 277, 282, 300, 305, 306, 307, 308, 325, 326,
	327, 330, 333, 334, 337, 339, 340, 343, 350, 351,
	352, 353, 354, 356, 363, 367, 375, 376, 377, 378,
	379, 381, 382, 386, 387, 388, 389, 397, 401, 419,
	420, 431, 443, 448, 261, 427, 449, 0, 299, 0,
	0, 301, 246, 264, 275, 0, 438, 398, 200, 369,
	253, 189, 218, 203, 225, 240, 243, 279, 309, 316,
	345, 349, 258, 237, 216, 366, 213, 384, 404, 405,
	406, 408, 313, 232, 348, 409, 0, 297, 410, 411,
	271, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 288, 233, 0, 0, 346, 0, 187, 0, 385,
	221, 298, 295, 416, 247, 239, 235, 220, 272, 304,
	344, 403, 338, 0, 292, 0, 0, 394, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 219, 186, 329, 395, 251,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	276, 238, 230, 413, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1099, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 318, 0, 0, 0, 0, 445, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 284, 182,
	198, 0, 0, 328, 368, 374, 0, 0, 0, 222,
	0, 372, 342, 430, 206, 249, 365, 347, 370, 0,
	0, 371, 293, 418, 360, 428, 446, 447, 229, 322,
	436, 407, 442, 458, 199, 226, 336, 400, 433, 391,
	315, 414, 415, 283, 390, 257, 185, 291, 452, 197,
	380, 214, 204, 190, 402, 426, 211, 383, 0, 0,
	460, 192, 424, 399, 311, 280, 281, 191, 0, 364,
	234, 255, 224, 331, 421, 422, 223, 461, 201, 441,
	194, 0, 440, 324, 417, 425, 312, 303, 193, 423,
	310, 302, 286, 245, 266, 358, 296, 359, 267, 320,
	319, 321, 0, 188, 0, 396, 434, 462, 207, 208,
	209, 0, 244, 248, 254, 256, 262, 263, 270, 289,
	335, 357, 355, 361, 0, 412, 429, 437, 444, 450,
	451, 453, 454, 455, 456, 457, 323, 269, 392, 285,
	294, 0, 0, 341, 373, 212, 432, 393, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 195, 290,
	0, 362, 252, 459, 439, 435, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 205, 215, 227, 242, 250, 260,
	265, 268, 273, 274, 277, 282, 300, 305, 306, 307,
	308, 325, 326, 327, 330, 333, 334, 337, 339, 340,
	343, 350, 351, 352, 353, 354, 356, 363, 367, 375,
	376, 377, 378, 379, 381, 382, 386, 387, 388, 389,
	397, 401, 419, 420, 431, 443, 448, 261, 427, 449,
	0, 299, 0, 0, 301, 246, 264, 275, 0, 438,
	398, 200, 369, 253, 189, 218, 203, 225, 240, 243,
	279, 309, 316, 345, 349, 258, 237, 216, 366, 213,
	384, 404, 405, 406, 408, 313, 232, 348, 409, 0,
	297, 410, 411, 271, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 0, 0, 288, 233, 0, 0, 346, 0,
	187, 0, 385, 221, 298, 295, 416, 247, 239, 235,
	220, 272, 304, 344, 403, 338, 0, 292, 0, 0,
	394, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 219, 186,
	329, 395, 251, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 413, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 318, 0, 0, 0,
	0, 445, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 182, 198, 0, 0, 328, 368, 374, 0,
	0, 0, 222, 0, 372, 342, 430, 206, 249, 365,
	347, 370, 0, 0, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 0, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 0, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 0, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 0, 0, 341, 373, 212, 432,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 290, 1464, 362, 252, 459, 439, 435, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 205, 215, 227,
	242, 250, 260, 265, 268, 273, 274, 277, 282, 300,
	305, 306, 307, 308, 325, 326, 327, 330, 333, 334,
	337, 339, 340, 343, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 381, 382, 386,
	387, 388, 389, 397, 401, 419, 420, 431, 443, 448,
	261, 427, 449, 0, 299, 0, 0, 301, 246, 264,
	275, 0, 438, 398, 200, 369, 253, 189, 218, 203,
	225, 240, 243, 279, 309, 316, 345, 349, 258, 237,
	216, 366, 213, 384, 404, 405, 406, 408, 313, 232,
	348, 409, 0, 297, 410, 411, 271, 0, 0, 0,
	0, 0, 0, 332, 0, 1345, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 0, 0, 288, 233, 0,
	0, 346, 0, 187, 0, 385, 221, 298, 295, 416,
	247, 239, 235, 220, 272, 304, 344, 403, 338, 0,
	292, 0, 0, 394, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 219, 186, 329, 395, 251, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 231, 276, 238, 230, 413,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 318,
	0, 0, 0, 0, 445, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 284, 182, 198, 0, 0, 328,
	368, 374, 0, 0, 0, 222, 0, 372, 342, 430,
	206, 249, 365, 347, 370, 0, 0, 371, 293, 418,
	360, 428, 446, 447, 229, 322, 436, 407, 442, 458,
	199, 226, 336, 400, 433, 391, 315, 414, 415, 283,
	390, 257, 185, 291, 452, 197, 380, 214, 204, 190,
	402, 426, 211, 383, 0, 0, 460, 192, 424, 399,
	311, 280, 281, 191, 0, 364, 234, 255, 224, 331,
	421, 422, 223, 461, 201, 441, 194, 0, 440, 324,
	417, 425, 312, 303, 193, 423, 310, 302, 286, 245,
	266, 358, 296, 359, 267, 320, 319, 321, 0, 188,
	0, 396, 434, 462, 207, 208, 209, 0, 244, 248,
	254, 256, 262, 263, 270, 289, 335, 357, 355, 361,
	0, 412, 429, 437, 444, 450, 451, 453, 454, 455,
	456, 457, 323, 269, 392, 285, 294, 0, 0, 341,
	373, 212, 432, 393, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 195, 290, 0, 362, 252, 459,
	439, 435, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	205, 215, 227, 242, 250, 260, 265, 268, 273, 274,
	277, 282, 300, 305, 306, 307, 308, 325, 326, 327,
	330, 333, 334, 337, 339, 340, 343, 350, 351, 352,
	353, 354, 356, 363, 367, 375, 376, 377, 378, 379,
	381, 382, 386, 387, 388, 389, 397, 401, 419, 420,
	431, 443, 448, 261, 427, 449, 0, 299, 0, 0,
	301, 246, 264, 275, 0, 438, 398, 200, 369, 253,
	189, 218, 203, 225, 240, 243, 279, 309, 316, 345,
	349, 258, 237, 216, 366, 213, 384, 404, 405, 406,
	408, 313, 232, 348, 409, 0, 297, 410, 411, 271,
	0, 0, 0, 0, 0, 0, 332, 0, 1343, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 0, 0,
	288, 233, 0, 0, 346, 0, 187, 0, 385, 221,
	298, 295, 416, 247, 239, 235, 220, 272, 304, 344,
	403, 338, 0, 292, 0, 0, 394, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 219, 186, 329, 395, 251, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 276,
	238, 230, 413, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 318, 0, 0, 0, 0, 445, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 284, 182, 198,
	0, 0, 328, 368, 374, 0, 0, 0, 222, 0,
	372, 342, 430, 206, 249, 365, 347, 370, 0, 0,
	371, 293, 418, 360, 428, 446, 447, 229, 322, 436,
	407, 442, 458, 199, 226, 336, 400, 433, 391, 315,
	414, 415, 283, 390, 257, 185, 291, 452, 197, 380,
	214, 204, 190, 402, 426, 211, 383, 0, 0, 460,
	192, 424, 399, 311, 280, 281, 191, 0, 364, 234,
	255, 224, 331, 421, 422, 223, 461, 201, 441, 194,
	0, 440, 324, 417, 425, 312, 303, 193, 423, 310,
	302, 286, 245, 266, 358, 296, 359, 267, 320, 319,
	321, 0, 188, 0, 396, 434, 462, 207, 208, 209,
	0, 244, 248, 254, 256, 262, 263, 270, 289, 335,
	357, 355, 361, 0, 412, 429, 437, 444, 450, 451,
	453, 454, 455, 456, 457, 323, 269, 392, 285, 294,
	0, 0, 341, 373, 212, 432, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 290, 0,
	362, 252, 459, 439, 435, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 205, 215, 227, 242, 250, 260, 265,
	268, 273, 274, 277, 282, 300, 305, 306, 307, 308,
	325, 326, 327, 330, 333, 334, 337, 339, 340, 343,
	350, 351, 352, 353, 354, 356, 363, 367, 375, 376,
	377, 378, 379, 381, 382, 386, 387, 388, 389, 397,
	401, 419, 420, 431, 443, 448, 261, 427, 449, 0,
	299, 0, 0, 301, 246, 264, 275, 0, 438, 398,
	200, 369, 253, 189, 218, 203, 225, 240, 243, 279,
	309, 316, 345, 349, 258, 237, 216, 366, 213, 384,
	404, 405, 406, 408, 313, 232, 348, 409, 0, 297,
	410, 411, 271, 0, 0, 0, 0, 0, 0, 332,
	0, 1341, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 0, 0, 288, 233, 0, 0, 346, 0, 187,
	0, 385, 221, 298, 295, 416, 247, 239, 235, 220,
	272, 304, 344, 403, 338, 0, 292, 0, 0, 394,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 219, 186, 329,
	395, 251, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 276, 238, 230, 413, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 318, 0, 0, 0, 0,
	445, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	284, 182, 198, 0, 0, 328, 368, 374, 0, 0,
	0, 222, 0, 372, 342, 430, 206, 249, 365, 347,
	370, 0, 0, 371, 293, 418, 360, 428, 446, 447,
	229, 322, 436, 407, 442, 458, 199, 226, 336, 400,
	433, 391, 315, 414, 415, 283, 390, 257, 185, 291,
	452, 197, 380, 214, 204, 190, 402, 426, 211, 383,
	0, 0, 460, 192, 424, 399, 311, 280, 281, 191,
	0, 364, 234, 255, 224, 331, 421, 422, 223, 461,
	201, 441, 194, 0, 440, 324, 417, 425, 312, 303,
	193, 423, 310, 302, 286, 245, 266, 358, 296, 359,
	267, 320, 319, 321, 0, 188, 0, 396, 434, 462,
	207, 208, 209, 0, 244, 248, 254, 256, 262, 263,
	270, 289, 335, 357, 355, 361, 0, 412, 429, 437,
	444, 450, 451, 453, 454, 455, 456, 457, 323, 269,
	392, 285, 294, 0, 0, 341, 373, 212, 432, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	195, 290, 0, 362, 252, 459, 439, 435, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 205, 215, 227, 242,
	250, 260, 265, 268, 273, 274, 277, 282, 300, 305,
	306, 307, 308, 325, 326, 327, 330, 333, 334, 337,
	339, 340, 343, 350, 351, 352, 353, 354, 356, 363,
	367, 375, 376, 377, 378, 379, 381, 382, 386, 387,
	388, 389, 397, 401, 419, 420, 431, 443, 448, 261,
	427, 449, 0, 299, 0, 0, 301, 246, 264, 275,
	0, 438, 398, 200, 369, 253, 189, 218, 203, 225,
	240, 243, 279, 309, 316, 345, 349, 258, 237, 216,
	366, 213, 384, 404, 405, 406, 408, 313, 232, 348,
	409, 0, 297, 410, 411, 271, 0, 0, 0, 0,
	0, 0, 332, 0, 1339, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 288, 233, 0, 0,
	346, 0, 187, 0, 385, 221, 298, 295, 416, 247,
	239, 235, 220, 272, 304, 344, 403, 338, 0, 292,
	0, 0, 394, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	219, 186, 329, 395, 251, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 276, 238, 230, 413, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 318, 0,
	0, 0, 0, 445, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 284, 182, 198, 0, 0, 328, 368,
	374, 0, 0, 0, 222, 0, 372, 342, 430, 206,
	249, 365, 347, 370, 0, 0, 371, 293, 418, 360,
	428, 446, 447, 229, 322, 436, 407, 442, 458, 199,
	226, 336, 400, 433, 391, 315, 414, 415, 283, 390,
	257, 185, 291, 452, 197, 380, 214, 204, 190, 402,
	426, 211, 383, 0, 0, 460, 192, 424, 399, 311,
	280, 281, 191, 0, 364, 234, 255, 224, 331, 421,
	422, 223, 461, 201, 441, 194, 0, 440, 324, 417,
	425, 312, 303, 193, 423, 310, 302, 286, 245, 266,
	358, 296, 359, 267, 320, 319, 321, 0, 188, 0,
	396, 434, 462, 207, 208, 209, 0, 244, 248, 254,
	256, 262, 263, 270, 289, 335, 357, 355, 361, 0,
	412, 429, 437, 444, 450, 451, 453, 454, 455, 456,
	457, 323, 269, 392, 285, 294, 0, 0, 341, 373,
	212, 432, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 290, 0, 362, 252, 459, 439,
	435, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 325, 326, 327, 330,
	333, 334, 337, 339, 340, 343, 350, 351, 352, 353,
	354, 356, 363, 367, 375, 376, 377, 378, 379, 381,
	382, 386, 387, 388, 389, 397, 401, 419, 420, 431,
	443, 448, 261, 427, 449, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 438, 398, 200, 369, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 316, 345, 349,
	258, 237, 216, 366, 213, 384, 404, 405, 406, 408,
	313, 232, 348, 409, 0, 297, 410, 411, 271, 0,
	0, 0, 0, 0, 0, 332, 0, 1337, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 288,
	233, 0, 0, 346, 0, 187, 0, 385, 221, 298,
	295, 416, 247, 239, 235, 220, 272, 304, 344, 403,
	338, 0, 292, 0, 0, 394, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 329, 395, 251, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 276, 238,
	230, 413, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 318, 0, 0, 0, 0, 445, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 284, 182, 198, 0,
	0, 328, 368, 374, 0, 0, 0, 222, 0, 372,
	342, 430, 206, 249, 365, 347, 370, 0, 0, 371,
	293, 418, 360, 428, 446, 447, 229, 322, 436, 407,
	442, 458, 199, 226, 336, 400, 433, 391, 315, 414,
	415, 283, 390, 257, 185, 291, 452, 197, 380, 214,
	204, 190, 402, 426, 211, 383, 0, 0, 460, 192,
	424, 399, 311, 280, 281, 191, 0, 364, 234, 255,
	224, 331, 421, 422, 223, 461, 201, 441, 194, 0,
	440, 324, 417, 425, 312, 303, 193, 423, 310, 302,
	286, 245, 266, 358, 296, 359, 267, 320, 319, 321,
	0, 188, 0, 396, 434, 462, 207, 208, 209, 0,
	244, 248, 254, 256, 262, 263, 270, 289, 335, 357,
	355, 361, 0, 412, 429, 437, 444, 450, 451, 453,
	454, 455, 456, 457, 323, 269, 392, 285, 294, 0,
	0, 341, 373, 212, 432, 393, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 290, 0, 362,
	252, 459, 439, 435, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 261, 427, 449, 0, 299,
	0, 0, 301, 246, 264, 275, 0, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 409, 0, 297, 410,
	411, 271, 0, 0, 0, 0, 0, 0, 332, 0,
	1333, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 288, 233, 0, 0, 346, 0, 187, 0,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 0, 292, 0, 0, 394, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 219, 186, 329, 395,
	251, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 276, 238, 230, 413, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 318, 0, 0, 0, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 284,
	182, 198, 0, 0, 328, 368, 374, 0, 0, 0,
	222, 0, 372, 342, 430, 206, 249, 365, 347, 370,
	0, 0, 371, 293, 418, 360, 428, 446, 447, 229,
	322, 436, 407, 442, 458, 199, 226, 336, 400, 433,
	391, 315, 414, 415, 283, 390, 257, 185, 291, 452,
	197, 380, 214, 204, 190, 402, 426, 211, 383, 0,
	0, 460, 192, 424, 399, 311, 280, 281, 191, 0,
	364, 234, 255, 224, 331, 421, 422, 223, 461, 201,
	441, 194, 0, 440, 324, 417, 425, 312, 303, 193,
	423, 310, 302, 286, 245, 266, 358, 296, 359, 267,
	320, 319, 321, 0, 188, 0, 396, 434, 462, 207,
	208, 209, 0, 244, 248, 254, 256, 262, 263, 270,
	289, 335, 357, 355, 361, 0, 412, 429, 437, 444,
	450, 451, 453, 454, 455, 456, 457, 323, 269, 392,
	285, 294, 0, 0, 341, 373, 212, 432, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	290, 0, 362, 252, 459, 439, 435, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 205, 215, 227, 242, 250,
	260, 265, 268, 273, 274, 277, 282, 300, 305, 306,
	307, 308, 325, 326, 327, 330, 333, 334, 337, 339,
	340, 343, 350, 351, 352, 353, 354, 356, 363, 367,
	375, 376, 377, 378, 379, 381, 382, 386, 387, 388,
	389, 397, 401, 419, 420, 431, 443, 448, 261, 427,
	449, 0, 299, 0, 0, 301, 246, 264, 275, 0,
	438, 398, 200, 369, 253, 189, 218, 203, 225, 240,
	243, 279, 309, 316, 345, 349, 258, 237, 216, 366,
	213, 384, 404, 405, 406, 408, 313, 232, 348, 409,
	0, 297, 410, 411, 271, 0, 0, 0, 0, 0,
	0, 332, 0, 1331, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 0, 0, 288, 233, 0, 0, 346,
	0, 187, 0, 385, 221, 298, 295, 416, 247, 239,
	235, 220, 272, 304, 344, 403, 338, 0, 292, 0,
	0, 394, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 219,
	186, 329, 395, 251, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 231, 276, 238, 230, 413, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 318, 0, 0,
	0, 0, 445, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 284, 182, 198, 0, 0, 328, 368, 374,
	0, 0, 0, 222, 0, 372, 342, 430, 206, 249,
	365, 347, 370, 0, 0, 371, 293, 418, 360, 428,
	446, 447, 229, 322, 436, 407, 442, 458, 199, 226,
	336, 400, 433, 391, 315, 414, 415, 283, 390, 257,
	185, 291, 452, 197, 380, 214, 204, 190, 402, 426,
	211, 383, 0, 0, 460, 192, 424, 399, 311, 280,
	281, 191, 0, 364, 234, 255, 224, 331, 421, 422,
	223, 461, 201, 441, 194, 0, 440, 324, 417, 425,
	312, 303, 193, 423, 310, 302, 286, 245, 266, 358,
	296, 359, 267, 320, 319, 321, 0, 188, 0, 396,
	434, 462, 207, 208, 209, 0, 244, 248, 254, 256,
	262, 263, 270, 289, 335, 357, 355, 361, 0, 412,
	429, 437, 444, 450, 451, 453, 454, 455, 456, 457,
	323, 269, 392, 285, 294, 0, 0, 341, 373, 212,
	432, 393, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 290, 0, 362, 252, 459, 439, 435,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 409, 0, 297, 410, 411, 271, 0, 0,
	0, 0, 0, 0, 332, 0, 1329, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 346, 0, 187, 0, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	0, 292, 0, 0, 394, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 329, 395, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 276, 238, 230,
	413, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	318, 0, 0, 0, 0, 445, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 284, 182, 198, 0, 0,
	328, 368, 374, 0, 0, 0, 222, 0, 372, 342,
	430, 206, 249, 365, 347, 370, 0, 0, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 0, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 0, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 0, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 323, 269, 392, 285, 294, 0, 0,
	341, 373, 212, 432, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 290, 0, 362, 252,
	459, 439, 435, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 205, 215, 227, 242, 250, 260, 265, 268, 273,
	274, 277, 282, 300, 305, 306, 307, 308, 325, 326,
	327, 330, 333, 334, 337, 339, 340, 343, 350, 351,
	352, 353, 354, 356, 363, 367, 375, 376, 377, 378,
	379, 381, 382, 386, 387, 388, 389, 397, 401, 419,
	420, 431, 443, 448, 261, 427, 449, 0, 299, 0,
	0, 301, 246, 264, 275, 0, 438, 398, 200, 369,
	253, 189, 218, 203, 225, 240, 243, 279, 309, 316,
	345, 349, 258, 237, 216, 366, 213, 384, 404, 405,
	406, 408, 313, 232, 348, 409, 0, 297, 410, 411,
	271, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 288, 233, 0, 0, 346, 0, 187, 0, 385,
	221, 298, 295, 416, 247, 239, 235, 220, 272, 304,
	344, 403, 338, 0, 292, 0, 0, 394, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 219, 186, 329, 395, 251,
	0, 1306, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 231,
	276, 238, 230, 413, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 318, 0, 0, 0, 0, 445, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 284, 182,
	198, 0, 0, 328, 368, 374, 0, 0, 0, 222,
	0, 372, 342, 430, 206, 249, 365, 347, 370, 0,
	0, 371, 293, 418, 360, 428, 446, 447, 229, 322,
	436, 407, 442, 458, 199, 226, 336, 400, 433, 391,
	315, 414, 415, 283, 390, 257, 185, 291, 452, 197,
	380, 214, 204, 190, 402, 426, 211, 383, 0, 0,
	460, 192, 424, 399, 311, 280, 281, 191, 0, 364,
	234, 255, 224, 331, 421, 422, 223, 461, 201, 441,
	194, 0, 440, 324, 417, 425, 312, 303, 193, 423,
	310, 302, 286, 245, 266, 358, 296, 359, 267, 320,
	319, 321, 0, 188, 0, 396, 434, 462, 207, 208,
	209, 0, 244, 248, 254, 256, 262, 263, 270, 289,
	335, 357, 355, 361, 0, 412, 429, 437, 444, 450,
	451, 453, 454, 455, 456, 457, 323, 269, 392, 285,
	294, 0, 0, 341, 373, 212, 432, 393, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 195, 290,
	0, 362, 252, 459, 439, 435, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 205, 215, 227, 242, 250, 260,
	265, 268, 273, 274, 277, 282, 300, 305, 306, 307,
	308, 325, 326, 327, 330, 333, 334, 337, 339, 340,
	343, 350, 351, 352, 353, 354, 356, 363, 367, 375,
	376, 377, 378, 379, 381, 382, 386, 387, 388, 389,
	397, 401, 419, 420, 431, 443, 448, 261, 427, 449,
	0, 299, 0, 0, 301, 246, 264, 275, 0, 438,
	398, 200, 369, 253, 189, 218, 203, 225, 240, 243,
	279, 309, 316, 345, 349, 258, 237, 216, 366, 213,
	384, 404, 405, 406, 408, 313, 232, 348, 409, 0,
	297, 410, 411, 271, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 0, 0, 0, 0, 1209, 236,
	0, 0, 0, 0, 288, 233, 0, 0, 346, 0,
	187, 0, 385, 221, 298, 295, 416, 247, 239, 235,
	220, 272, 304, 344, 403, 338, 0, 292, 0, 0,
	394, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 219, 186,
	329, 395, 251, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 413, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 318, 0, 0, 0,
	0, 445, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 182, 198, 0, 0, 328, 368, 374, 0,
	0, 0, 222, 0, 372, 342, 430, 206, 249, 365,
	347, 370, 0, 0, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 0, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 0, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 0, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 0, 0, 341, 373, 212, 432,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 290, 0, 362, 252, 459, 439, 435, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 205, 215, 227,
	242, 250, 260, 265, 268, 273, 274, 277, 282, 300,
	305, 306, 307, 308, 325, 326, 327, 330, 333, 334,
	337, 339, 340, 343, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 381, 382, 386,
	387, 388, 389, 397, 401, 419, 420, 431, 443, 448,
	261, 427, 449, 0, 299, 0, 0, 301, 246, 264,
	275, 0, 438, 398, 200, 369, 253, 189, 218, 203,
	225, 240, 243, 279, 309, 316, 345, 349, 258, 237,
	216, 366, 213, 384, 404, 405, 406, 408, 313, 232,
	348, 409, 0, 297, 410, 411, 271, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 0, 0, 288, 233, 0,
	0, 346, 0, 187, 0, 385, 221, 298, 295, 416,
	247, 239, 235, 220, 272, 304, 344, 403, 338, 0,
	292, 0, 0, 394, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 219, 186, 329, 395, 251, 0, 0, 0, 0,
	178, 179, 180, 0, 1046, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 231, 276, 238, 230, 413,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 318,
	0, 0, 0, 0, 445, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 284, 182, 198, 0, 0, 328,
	368, 374, 0, 0, 0, 222, 0, 372, 342, 430,
	206, 249, 365, 347, 370, 0, 0, 371, 293, 418,
	360, 428, 446, 447, 229, 322, 436, 407, 442, 458,
	199, 226, 336, 400, 433, 391, 315, 414, 415, 283,
	390, 257, 185, 291, 452, 197, 380, 214, 204, 190,
	402, 426, 211, 383, 0, 0, 460, 192, 424, 399,
	311, 280, 281, 191, 0, 364, 234, 255, 224, 331,
	421, 422, 223, 461, 201, 441, 194, 0, 440, 324,
	417, 425, 312, 303, 193, 423, 310, 302, 286, 245,
	266, 358, 296, 359, 267, 320, 319, 321, 0, 188,
	0, 396, 434, 462, 207, 208, 209, 0, 244, 248,
	254, 256, 262, 263, 270, 289, 335, 357, 355, 361,
	0, 412, 429, 437, 444, 450, 451, 453, 454, 455,
	456, 457, 323, 269, 392, 285, 294, 0, 0, 341,
	373, 212, 432, 393, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 195, 290, 0, 362, 252, 459,
	439, 435, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	205, 215, 227, 242, 250, 260, 265, 268, 273, 274,
	277, 282, 300, 305, 306, 307, 308, 325, 326, 327,
	330, 333, 334, 337, 339, 340, 343, 350, 351, 352,
	353, 354, 356, 363, 367, 375, 376, 377, 378, 379,
	381, 382, 386, 387, 388, 389, 397, 401, 419, 420,
	431, 443, 448, 261, 427, 449, 0, 299, 0, 0,
	301, 246, 264, 275, 0, 438, 398, 200, 369, 253,
	189, 218, 203, 225, 240, 243, 279, 309, 316, 345,
	349, 258, 237, 216, 366, 213, 384, 404, 405, 406,
	408, 313, 232, 348, 409, 0, 297, 410, 411, 271,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 0, 0,
	288, 233, 0, 0, 346, 0, 187, 0, 385, 221,
	298, 295, 416, 247, 239, 235, 220, 272, 304, 344,
	403, 338, 0, 292, 0, 0, 394, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 219, 186, 329, 395, 251, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 231, 276,
	238, 230, 413, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 318, 0, 0, 0, 0, 445, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 284, 182, 198,
	0, 0, 328, 368, 374, 0, 0, 0, 222, 0,
	372, 342, 430, 206, 249, 365, 347, 370, 0, 0,
	371, 293, 418, 360, 428, 446, 447, 229, 322, 436,
	407, 442, 458, 199, 226, 336, 400, 433, 391, 315,
	414, 415, 283, 390, 257, 185, 291, 452, 197, 380,
	214, 204, 190, 402, 426, 211, 383, 0, 0, 460,
	192, 424, 399, 311, 280, 281, 191, 0, 364, 234,
	255, 224, 331, 421, 422, 223, 461, 201, 441, 194,
	0, 440, 324, 417, 425, 312, 303, 193, 423, 310,
	302, 286, 245, 266, 358, 296, 359, 267, 320, 319,
	321, 0, 188, 0, 396, 434, 462, 207, 208, 209,
	0, 244, 248, 254, 256, 262, 263, 270, 289, 335,
	357, 355, 361, 0, 412, 429, 437, 444, 450, 451,
	453, 454, 455, 456, 457, 323, 269, 392, 285, 294,
	0, 0, 341, 373, 212, 432, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 290, 0,
	362, 252, 459, 439, 435, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 681, 0, 0, 0,
	183, 184, 196, 205, 215, 227, 242, 250, 260, 265,
	268, 273, 274, 277, 282, 300, 305, 306, 307, 308,
	325, 326, 327, 330, 333, 334, 337, 339, 340, 343,
	350, 351, 352, 353, 354, 356, 363, 367, 375, 376,
	377, 378, 379, 381, 382, 386, 387, 388, 389, 397,
	401, 419, 420, 431, 443, 448, 261, 427, 449, 0,
	299, 0, 0, 301, 246, 264, 275, 0, 438, 398,
	200, 369, 253, 189, 218, 203, 225, 240, 243, 279,
	309, 316, 345, 349, 258, 237, 216, 366, 213, 384,
	404, 405, 406, 408, 313, 232, 348, 409, 0, 297,
	410, 411, 271, 0, 0, 0, 0, 0, 0, 332,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 0, 0, 288, 233, 0, 0, 346, 0, 187,
	0, 385, 221, 298, 295, 416, 247, 239, 235, 220,
	272, 304, 344, 403, 338, 0, 292, 0, 0, 394,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 219, 186, 329,
	395, 251, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 276, 238, 230, 413, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 536, 0, 259, 0, 318, 0, 0, 0, 0,
	445, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	284, 182, 198, 0, 0, 328, 368, 374, 0, 0,
	0, 222, 0, 372, 342, 430, 206, 249, 365, 347,
	370, 0, 0, 371, 293, 418, 360, 428, 446, 447,
	229, 322, 436, 407, 442, 458, 199, 226, 336, 400,
	433, 391, 315, 414, 415, 283, 390, 257, 185, 291,
	452, 197, 380, 214, 204, 190, 402, 426, 211, 383,
	0, 0, 460, 192, 424, 399, 311, 280, 281, 191,
	0, 364, 234, 255, 224, 331, 421, 422, 223, 461,
	201, 441, 194, 0, 440, 324, 417, 425, 312, 303,
	193, 423, 310, 302, 286, 245, 266, 358, 296, 359,
	267, 320, 319, 321, 0, 188, 0, 396, 434, 462,
	207, 208, 209, 0, 244, 248, 254, 256, 262, 263,
	270, 289, 335, 357, 355, 361, 0, 412, 429, 437,
	444, 450, 451, 453, 454, 455, 456, 457, 323, 269,
	392, 285, 294, 0, 0, 341, 373, 212, 432, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	195, 290, 0, 362, 252, 459, 439, 435, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 205, 215, 227, 242,
	250, 260, 265, 268, 273, 274, 277, 282, 300, 305,
	306, 307, 308, 325, 326, 327, 330, 333, 334, 337,
	339, 340, 343, 350, 351, 352, 353, 354, 356, 363,
	367, 375, 376, 377, 378, 379, 381, 382, 386, 387,
	388, 389, 397, 401, 419, 420, 431, 443, 448, 535,
	427, 449, 0, 299, 0, 0, 301, 246, 264, 275,
	0, 438, 398, 200, 369, 253, 189, 218, 203, 225,
	240, 243, 279, 309, 316, 345, 349, 258, 237, 216,
	366, 213, 384, 404, 405, 406, 408, 313, 232, 348,
	409, 0, 297, 410, 411, 271, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 288, 233, 0, 0,
	346, 0, 187, 0, 385, 221, 298, 295, 416, 247,
	239, 235, 220, 272, 304, 344, 403, 338, 0, 292,
	0, 0, 394, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	219, 186, 329, 395, 251, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 276, 238, 230, 413, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 318, 0,
	0, 483, 0, 445, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 284, 182, 198, 0, 0, 328, 368,
	374, 0, 0, 0, 222, 0, 372, 342, 430, 206,
	249, 365, 347, 370, 0, 0, 371, 293, 418, 360,
	428, 446, 447, 229, 322, 436, 407, 442, 458, 199,
	226, 336, 400, 433, 391, 315, 414, 415, 283, 390,
	257, 185, 291, 452, 197, 380, 214, 204, 190, 402,
	426, 211, 383, 0, 0, 460, 192, 424, 399, 311,
	280, 281, 191, 0, 364, 234, 255, 224, 331, 421,
	422, 223, 461, 201, 441, 194, 0, 440, 324, 417,
	425, 312, 303, 193, 423, 310, 302, 286, 245, 266,
	358, 296, 359, 267, 320, 319, 321, 0, 188, 0,
	396, 434, 462, 207, 208, 209, 0, 244, 248, 254,
	256, 262, 263, 270, 289, 335, 357, 355, 361, 0,
	412, 429, 437, 444, 450, 451, 453, 454, 455, 456,
	457, 323, 269, 392, 285, 294, 0, 0, 341, 373,
	212, 432, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 290, 0, 362, 252, 459, 439,
	435, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 325, 326, 327, 330,
	333, 334, 337, 339, 340, 343, 350, 351, 352, 353,
	354, 356, 363, 367, 375, 376, 377, 378, 379, 381,
	382, 386, 387, 388, 389, 397, 401, 419, 420, 431,
	443, 448, 261, 427, 449, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 438, 398, 200, 369, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 316, 345, 349,
	258, 237, 216, 366, 213, 384, 404, 405, 406, 408,
	313, 232, 348, 409, 0, 297, 410, 411, 271, 0,
	0, 0, 0, 0, 0, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 288,
	233, 0, 0, 346, 0, 187, 0, 385, 221, 298,
	295, 416, 247, 239, 235, 220, 272, 304, 344, 403,
	338, 0, 292, 0, 0, 394, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 329, 395, 251, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 231, 276, 238,
	230, 413, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 318, 0, 0, 0, 0, 445, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 284, 182, 198, 0,
	0, 328, 368, 374, 0, 0, 0, 222, 0, 372,
	342, 430, 206, 249, 365, 347, 370, 0, 0, 371,
	293, 418, 360, 428, 446, 447, 229, 322, 436, 407,
	442, 458, 199, 226, 336, 400, 433, 391, 315, 414,
	415, 283, 390, 257, 185, 291, 452, 197, 380, 214,
	204, 190, 402, 426, 211, 383, 0, 0, 460, 192,
	424, 399, 311, 280, 281, 191, 0, 364, 234, 255,
	224, 331, 421, 422, 223, 461, 201, 441, 194, 0,
	440, 324, 417, 425, 312, 303, 193, 423, 310, 302,
	286, 245, 266, 358, 296, 359, 267, 320, 319, 321,
	0, 188, 0, 396, 434, 462, 207, 208, 209, 0,
	244, 248, 254, 256, 262, 263, 270, 289, 335, 357,
	355, 361, 0, 412, 429, 437, 444, 450, 451, 453,
	454, 455, 456, 457, 323, 269, 392, 285, 294, 0,
	0, 341, 373, 212, 432, 393, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 290, 0, 362,
	252, 459, 439, 435, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 261, 427, 449, 0, 299,
	0, 0, 301, 246, 264, 275, 0, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 409, 0, 297, 410,
	411, 271, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 288, 233, 0, 0, 346, 0, 187, 0,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 0, 292, 0, 0, 394, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 219, 186, 329, 395,
	251, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	231, 276, 238, 230, 413, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 318, 0, 0, 0, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 284,
	182, 198, 0, 0, 328, 368, 374, 0, 0, 0,
	222, 0, 372, 342, 430, 206, 249, 365, 347, 370,
	0, 0, 371, 293, 418, 360, 428, 446, 447, 229,
	322, 436, 407, 442, 458, 199, 226, 336, 400, 433,
	391, 315, 414, 415, 283, 390, 257, 185, 291, 452,
	197, 380, 214, 204, 190, 402, 426, 211, 383, 0,
	0, 460, 192, 424, 399, 311, 280, 281, 191, 0,
	364, 234, 255, 224, 331, 421, 422, 223, 461, 201,
	441, 194, 0, 440, 324, 417, 425, 312, 303, 193,
	423, 310, 302, 286, 245, 266, 358, 296, 359, 267,
	320, 319, 321, 0, 188, 0, 396, 434, 462, 207,
	208, 209, 0, 244, 248, 254, 256, 262, 263, 270,
	289, 335, 357, 355, 361, 0, 412, 429, 437, 444,
	450, 451, 453, 454, 455, 456, 457, 323, 269, 392,
	285, 294, 0, 0, 341, 373, 212, 432, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	290, 0, 362, 252, 459, 439, 435, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 205, 215, 227, 242, 250,
	260, 265, 268, 273, 274, 277, 282, 300, 305, 306,
	307, 308, 2463, 326, 327, 330, 333, 334, 337, 339,
	340, 343, 350, 351, 352, 353, 354, 356, 363, 367,
	375, 376, 377, 378, 379, 381, 382, 386, 387, 388,
	389, 397, 401, 419, 420, 431, 443, 448, 261, 427,
	449, 0, 299, 0, 0, 301, 246, 264, 275, 0,
	438, 398, 200, 369, 253, 189, 218, 203, 225, 240,
	243, 279, 309, 316, 345, 349, 258, 237, 216, 366,
	213, 384, 404, 405, 406, 408, 313, 232, 348, 0,
	0, 297, 410, 411, 271,
}

var yyPact = [...]int{
	2553, -1000, -381, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1704, 1738, -1000, -1000, -1000, -1000, 1826,
	-1000, 647, 1495, -1000, 1713, 4101, -1000, 33976, 413, -1000,
	33433, 409, 234, 33976, -1000, 109, -1000, 95, 33976, 103,
	32890, -1000, -1000, -292, 14425, 1652, -1, -7, 33976, -1000,
	1805, 1496, -1000, 289, -1000, -1000, -1000, -1000, -1000, -1000,
	32347, -1000, -1000, -1000, 1726, 1709, 1831, 568, 1649, -1000,
	1762, 1496, -1000, 14425, 1798, 1750, 13882, -1000, 13882, 347,
	-1000, -1000, 10617, -1000, -1000, 19314, 33976, 33976, 227, -1000,
	1713, -1000, -1000, 329, -1000, 290, 1398, -1000, 1397, -1000,
	567, 521, 286, 397, 393, 284, 280, 279, 272, 271,
	268, 266, 259, 292, -1000, 608, 608, -147, -154, 294,
	296, 296, 296, 363, 1670, 1668, -1000, 547, -1000, 608,
	608, 247, 608, 608, 608, 608, 232, 231, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 394, 1713, 221, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 33976, 113, 33976, -1000, 477, 33976, 751, 751, 33,
	751, 751, 751, 751, 111, 522, -18, -1000, 110, 216,
	98, 218, 712, 126, 132, -1000, -1000, 213, 712, 1128,
	589, 100, -1000, 751, 8413, 8413, 8413, -1000, 1706, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 360, -1000, -1000,
	-1000, -1000, 33976, 31804, 275, 642, -1000, -1000, -1000, 116,
	-1000, -1000, 1228, 811, 14425, 965, -1000, 1240, 535, -1000,
	-1000, -1000, -1000, -1000, 447, 14968, 14968, 14968, 14968, -1000,
	-1000, 1406, 1406, 1406, 1406, 14968, 1406, 14968, 1406, 1406,
	1406, 1406, 14425, 1406, 1406, 1406, -1000, 1406, 1406, 1406,
	1406, 1406, 1406, 1406, 1406, 1406, 1406, 476, 1406, 1406,
	1406, 1406, 1406, -1000, -1000, -1000, -1000, 1406, 1406, 1406,
	1406, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 17140, -1000, 12253, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 33976, -1000, 1406, 128, 1762, 1496,
	-1000, 1805, 1793, 289, -1000, 1941, 1238, 1230, 1146, 1496,
	1389, 33976, -1000, 1424, -1000, -1000, -1000, 1591, 1096, 1126,
	-1000, -1000, -1000, -1000, 875, 14425, -1000, -1000, 1818, -1000,
	16597, 475, 815, 1816, 31261, -1000, 347, 347, 1396, 10066,
	-28, -1000, -1000, -1000, 640, 22029, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1706, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1377, 33976, -1000, -1000, 5017, 1086, -1000, 1494,
	-1000, 1375, -1000, 1431, 1504, 405, 1086, 395, 391, 390,
	-1000, -99, -1000, -1000, -1000, -1000, -1000, 608, 608, 288,
	4101, 5033, -1000, -1000, -1000, 30718, 1470, 1086, -1000, 1467,
	-1000, 757, 444, 485, 485, 1086, -1000, -1000, 33976, 1086,
	737, 728, 33976, 33976, -1000, 30175, -1000, 29632, 29089, 1034,
	33976, 28546, 28003, 27460, 26917, 26374, -1000, 1568, -1000, 1468,
	-1000, -1000, -1000, 33976, 33976, 33976, 251, -1000, -1000, 33976,
	1086, -1000, -1000, 1033, 1032, 608, 608, 1007, 1125, 1121,
	1108, 608, 608, 999, 1107, 23658, 224, 998, 986, 980,
	1091, 1106, 182, 1040, 1020, 976, 33976, 1463, 33976, -1000,
	194, 576, 365, 620, 1713, 1650, 1395, 355, 404, 1086,
	338, 338, -1000, 8964, -1000, -1000, 1105, 14425, -1000, 719,
	712, 712, -1000, -1000, -1000, -1000, -1000, -1000, 751, 33976,
	719, -1000, -1000, -1000, 712, 751, 33976, 751, 751, 751,
	751, 712, 712, 712, 751, 33976, 33976, 33976, 33976, 33976,
	33976, 33976, 33976, 33976, 8413, 8413, 8413, 589, 751, -301,
	-1000, 1102, -1000, 1533, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 101, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -107, 1394, 25831, -1000, -302, -304, -306, -307,
	-1000, -1000, -1000, -308, -312, -1000, -1000, -1000, 14425, 14425,
	14425, 14425, -1000, 707, 14968, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 890, 798, 14968, 14968, 14968, 14968, 14968, 14968,
	14968, 14968, 14968, 14968, 14968, 14968, 14968, 14968, 14968, 649,
	1101, 1099, 535, 535, 535, 535, -1000, 13882, 14425, 14425,
	535, -1000, 1086, 25288, 13882, 13882, 14425, 1686, 650, 811,
	33976, -1000, 1146, -1000, -1000, -1000, 906, -1000, 33976, 33976,
	32, 33976, 33976, 15511, 11166, 8964, 13882, 13882, 13882, 13882,
	13882, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 474, 1263, 1221, 1367, -1000, 1393, -1000, -167,
	18771, 14425, 1095, -1000, -1000, -1000, 1762, -1000, 1762, 1263,
	1604, 1607, 13882, -1000, -1000, 1604, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1237, -1000, 33976, 1389, 1747, 33976,
	1592, 1088, 251, -1000, 14425, 14425, 1388, -1000, 907, 33976,
	-1000, -1000, 24745, -1000, -1000, 7862, -1000, 33976, 257, 33976,
	-1000, 20943, 24202, 9515, -28, -1000, 9515, 1372, -1000, -43,
	-49, 11709, 525, -1000, -1000, -1000, 294, 16054, 1197, 1660,
	39, -1000, -1000, -1000, 1431, -1000, 1431, 1431, 1431, 1431,
	251, 251, 251, 251, -1000, -1000, -1000, -1000, -1000, 1462,
	1461, -1000, 1431, 1431, 1431, 1431, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1459, 1459, 1459, 1433, 1433, 324, -1000,
	14425, 219, 33976, 1732, 946, 194, 339, 1516, 1086, 1086,
	1086, 339, -1000, 1139, 1133, -1000, 1387, -1000, -1000, 1797,
	-1000, -1000, 659, 776, 775, 627, 33976, 166, 254, -1000,
	317, -1000, 33976, 1086, 709, 485, 1086, -1000, 1086, -1000,
	-1000, -1000, -1000, -1000, 1086, 1385, -1000, 1427, 895, 768,
	805, 752, 1385, -1000, -1000, -121, 1385, -1000, 1385, -1000,
	1385, -1000, 1385, -1000, 1385, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 609, 33976, 166, 649, -1000, 353, -1000,
	-1000, 649, 649, -1000, -1000, -1000, -1000, 1077, 1076, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -357, 33976, -1000, 187,
	617, 244, 277, 248, 33976, 117, 1754, 204, 228, 33976,
	33976, 338, 1532, 33976, 1739, 33976, -1000, -1000, -1000, -1000,
	811, 33976, -1000, -1000, 751, 751, -1000, -1000, 33976, 751,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 751, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 33976, 33976, -1000, -1000,
	-1000, -1000, -1000, 139, -35, 269, -1000, -1000, -1000, -1000,
	-1000, 1756, -1000, 811, 745, 663, -1000, -1000, -1000, 958,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 890, 14968, 14968,
	14968, 1407, 384, 1418, 1481, 1635, 931, 931, 809, 809,
	539, 539, 539, 539, 539, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1316, -1000, 1075, 870, 1146, -1000, 1316, 1316,
	831, 13882, -1000, -1000, 671, -1000, 14425, 1146, -1000, -1000,
	1146, 1384, 1382, 1814, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1146, 1381, 1146, 1146, 1073,
	1146, 13882, 13882, 1379, 1406, 473, -1000, 1316, 1146, 1146,
	1316, 1316, 8964, 1146, -1000, 33976, -1000, -288, -1000, -58,
	495, 1406, -1000, 23658, 1146, 1228, -1000, -1000, -1000, -1000,
	-1000, 21486, 1419, 1604, -1000, -1000, 1406, 1328, -1000, -1000,
	251, 22, 672, 811, 811, 14425, -1000, -1000, -1000, -1000,
	-1000, -1000, 472, 1807, 285, 1406, -1000, 1415, 1590, -1000,
	-1000, -1000, 1746, 17684, -1000, 1458, 33976, 1426, 1357, -1000,
	469, -1000, 1372, -28, -24, -1000, -1000, -1000, -1000, 811,
	-1000, 1119, 258, 2195, -1000, 319, -1000, -1000, -1000, -1000,
	853, 1745, 1657, 24, -1000, -1000, -1000, 251, 251, -1000,
	-1000, -1000, -1000, -1000, -1000, 1070, 1070, -1000, -1000, -1000,
	-1000, -1000, 938, -1000, -1000, -1000, 922, -1000, -1000, 1038,
	1563, 219, -1000, -1000, 608, 1069, 1662, 33976, -1000, -1000,
	1195, 187, 33976, 661, 1530, -1000, 1516, 1516, 1516, 33976,
	-1000, -1000, -1000, -1000, 3626, 33976, 1324, -1000, 164, -1000,
	1189, 33976, -1000, 1322, 1455, 1086, 1086, -1000, -1000, -1000,
	33976, 1406, -1000, -1000, -1000, -1000, 399, 1710, 1708, 166,
	164, 525, 1086, -1000, -1000, -1000, -1000, -1000, -360, 1319,
	371, 169, 238, 33976, 33976, 33976, 33976, 33976, 463, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 225, 350, -1000,
	33976, 33976, 461, -1000, -1000, -1000, 712, -1000, -1000, 712,
	-1000, -1000, -1000, -1000, -1000, 1703, 33976, -38, -329, -1000,
	-325, -1000, -1000, -1000, -1000, 1373, 383, 1418, 14968, 14968,
	13882, -112, 593, 593, 649, -1000, -1000, -1000, 14425, 14425,
	1359, 652, -1000, 14425, 729, -1000, -1000, 14425, 14425, 14425,
	-1000, 33976, -1000, -1000, -1000, 1316, 1316, 13882, 8964, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 386,
	375, 374, 33976, -1000, -1000, 1761, -1000, 1624, 1622, 1806,
	1807, -1000, 20943, 1604, -1000, -1000, 33976, -282, -1000, 1647,
	1629, -1000, -1000, -1000, -1000, 7311, 1762, 14425, 1528, 33976,
	1406, -1000, 18228, 33976, 33976, 20943, 20943, 20943, 20943, 20943,
	-1000, 1575, 1558, -1000, 1582, 1554, 1606, 33976, -1000, 1298,
	1146, 1793, 17684, 14425, 19857, 1355, 20943, -1000, -1000, 20943,
	33976, 6760, -1000, -1000, -46, -59, -1000, -1000, -1000, -1000,
	1796, 294, -1000, -1000, -1000, -1000, 802, 5434, 1828, -1000,
	1065, -1000, 1094, -1000, 695, 677, -1000, 33976, 1448, -1000,
	-1000, -1000, -1000, -1000, 1296, -1000, 1294, 1276, 1287, 107,
	-1000, 1503, 1674, 608, 608, -1000, 916, -1000, 1086, -1000,
	-1000, 369, -1000, 1736, 33976, 1527, 1526, 1525, -1000, 1795,
	1234, 33976, -1000, -1000, 33976, -1000, 1616, 219, 33976, -1000,
	-1000, -1000, 254, 33976, -1000, 5301, 164, -1000, -1000, -1000,
	-1000, -1000, -1000, 33976, 193, -1000, 1434, 1137, -1000, 1508,
	-1000, -1000, -1000, -1000, 127, 240, -1000, 33976, 455, 1563,
	33976, -1000, -1000, -1000, 751, 751, -1000, -1000, 1673, -1000,
	1086, 14968, 14968, -1000, 535, -1000, 1406, 1146, 1431, 1431,
	-1000, 1431, 1433, -1000, 1431, 86, 1431, 83, 1146, 1146,
	863, 778, -106, -1000, 811, 14425, 1009, 995, 885, 1146,
	-1000, -1000, 1146, -1000, 1406, 1406, 1406, 1267, 33976, -1000,
	-1000, -1000, -1000, 1807, 1803, 1274, -1000, -1000, 22, 348,
	-1000, 1637, 1629, -1000, 1787, 1638, 1786, -1000, -1000, -1000,
	811, -1000, 1724, 1282, -1000, 607, 1212, -1000, -1000, 13339,
	1269, 1608, 467, 1267, 1280, 1590, 1514, 1524, 1546, -1000,
	-1000, -1000, -1000, 1555, -1000, 1544, -1000, -1000, 1424, -1000,
	-1000, 1221, 718, 257, 20943, 1265, 1265, -1000, 440, -1000,
	-1000, -1000, -1000, -367, -1000, -1000, 14425, -1000, -1000, -1000,
	-1000, -1000, -1000, 913, 913, 424, -1000, -1000, -1000, -1000,
	-1000, 1430, 14425, 251, 1061, 251, 901, -1000, 884, -1000,
	-1000, -222, -1000, -1000, 1456, 1510, -1000, -1000, 33976, -1000,
	-1000, 33976, 33976, 33976, 33976, -1000, -1000, 250, -1000, 1258,
	1219, -1000, -149, -1000, 14425, -1000, 1424, -1000, -1000, -1000,
	1177, -1000, -125, 33976, 33976, 33976, 33976, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 535, 14968, -1000, -1000,
	377, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 14425,
	-1000, 14425, -1000, 1762, 1057, 811, 14425, 14425, -1000, -1000,
	-1000, 20400, 23115, 23115, 19857, -1000, 1803, 1801, 1784, 1633,
	1636, 1636, 1637, -1000, 1783, 1782, -1000, 1056, 1779, 1052,
	673, -1000, 33976, 14425, 1406, -1000, 287, 33976, 1406, 33976,
	-1000, 1763, -1000, -1000, 14425, 1425, -1000, 14425, -1000, -1000,
	-1000, -1000, -1000, 5100, 1807, 1265, -1000, -1000, 548, 51,
	274, -1000, -1000, -1000, 885, -1000, -1000, -1000, 33976, 1030,
	-1000, -1000, -1000, 1166, 1162, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1424, -1000, -1000, -1000, 1234, 241, 306,
	-1000, 254, -1000, -155, -188, 885, 1744, -1000, -1000, 8964,
	-1000, -1000, 1423, 1515, -1000, 264, -1000, -1000, 885, 885,
	1146, -1000, 885, 885, 1214, -1000, -1000, -1000, 1214, 1214,
	495, 1801, -1000, 14425, 14425, 1628, 941, -1000, -1000, -1000,
	-1000, 1050, 1048, -1000, 1037, -1000, 1824, -1000, 811, -1000,
	1406, -1000, 411, 1212, -1000, 1762, 811, 33976, 811, 18,
	1763, -1000, 1422, 1502, -363, 14425, 1409, -1000, 1202, -1000,
	-1000, -1000, 1743, 1406, -1000, -1000, -1000, -1000, -1000, 289,
	1232, -1000, 602, 33976, 33976, 1146, 242, -131, -1000, -1000,
	-1000, -1000, -1000, 22572, -1000, -1000, -1000, -1000, -1000, 811,
	1228, -1000, 929, -1000, -1000, -1000, -1000, -1000, 33976, 1212,
	33976, -1000, 1200, 1152, 1405, 1762, 14425, 1404, 598, -374,
	876, 1026, 33976, 1522, 759, 289, 12796, -124, 8964, 6209,
	1188, -1000, -1000, 1588, -117, -141, -1000, -1000, -1000, -1000,
	1204, -1000, -1000, 19857, 34519, -1000, 919, 33976, 857, 1400,
	1777, -1000, -1000, 1186, 1521, -1000, 1813, -1000, -1000, -1000,
	793, 892, -1000, -1000, -1000, -124, 885, 1146, -1000, -44,
	-1000, -1000, -1000, -1000, -1000, 1508, -1000, 1587, -1000, -1000,
	1182, -1000, 2797, -254, -363, 1174, -1000, -1000, 254, -369,
	-1000, -1000, 1822, 542, 542, -1000, -1000, -1000, -1000, -1000,
	321, -1000, -1000, -125, -126, -1000, 34519, -247, 525, 5100,
	-374, -363, 1155, 47, -1000, -1000, -1000, 318, 878, -1000,
	199, -1000, -133, -1000, -1000, 1731, 18, 1400, -374, -1000,
	1401, 1502, -1000, -1000, -1000, -1000, -142, -255, -1000, -1000,
	-1000, 1400, 14425, 1241, -1000, 5100, -1000, 826, 33976, 171,
	-376, 1149, 171, -1000, 1511, -1000, -1000, 5758, -1000, 842,
	-376, -1000, 1435, -229, -1000, -1000, -1000, -315, -1000, -1000,
}

var yyPgo = [...]int{
	0, 18, 2128, 13, 1, 8, 2126, 38, 83, 174,
	28, 177, 87, 2125, 2124, 2122, 2114, 194, 193, 192,
	2111, 2106, 2105, 2104, 2103, 2102, 2101, 2100, 2099, 2097,
	190, 154, 167, 2094, 2093, 2092, 100, 153, 79, 82,
	170, 2091, 2089, 73, 2088, 2087, 2086, 164, 159, 694,
	2085, 156, 99, 2084, 2083, 2082, 2081, 2080, 2078, 2077,
	2076, 2075, 2074, 2073, 2072, 2071, 2069, 264, 2068, 2067,
	21, 2066, 75, 2062, 2059, 2057, 2056, 2055, 12, 2054,
	2053, 2052, 2051, 129, 2050, 2049, 2048, 176, 2047, 2046,
	2045, 378, 97, 98, 2043, 2041, 93, 165, 2037, 105,
	137, 2034, 2033, 1402, 2, 76, 74, 2032, 241, 62,
	3, 58, 10, 2031, 2030, 85, 68, 2029, 95, 64,
	2028, 91, 88, 2027, 2026, 15, 11, 2025, 6, 2022,
	4, 50, 2021, 2020, 114, 2019, 2017, 2016, 84, 2015,
	2013, 3760, 2011, 80, 119, 40, 52, 2010, 2009, 2008,
	2007, 2005, 55, 2000, 1999, 1997, 127, 31, 1995, 35,
	45, 44, 121, 1994, 37, 71, 1990, 124, 1989, 1987,
	56, 33, 34, 1986, 30, 117, 140, 63, 90, 120,
	1985, 1984, 46, 60, 1983, 1981, 1980, 1979, 1976, 1973,
	70, 1970, 43, 1965, 182, 1953, 9, 42, 72, 47,
	134, 57, 29, 1949, 160, 1948, 49, 162, 116, 146,
	1944, 1943, 1942, 166, 236, 1938, 1936, 65, 151, 128,
	133, 1934, 230, 1933, 1932, 86, 1194, 1719, 32, 147,
	1931, 1930, 1929, 3165, 141, 136, 24, 1928, 104, 1927,
	1926, 1925, 168, 150, 113, 929, 102, 19, 1924, 1923,
	1922, 1919, 1917, 1916, 180, 171, 67, 17, 152, 66,
	1914, 1912, 1905, 115, 92, 1903, 145, 139, 118, 158,
	1898, 148, 132, 123, 1886, 89, 1884, 1882, 1881, 1880,
	94, 1879, 1877, 1873, 1872, 143, 131, 111, 77, 1865,
	78, 109, 138, 142, 20, 5, 36, 163, 27, 1862,
	14, 0, 1861, 23, 149, 232, 144, 1860, 1858, 16,
	1855, 22, 1854, 1853, 126, 1850, 1848, 1846, 26, 41,
	25, 7, 1845, 1844, 3824, 2454, 122, 1842, 172,
}

//line sql.y:6124
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprOrColumnsUnion() *ExprOrColumns {
	v, _ := st.union.(*ExprOrColumns)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintsUnion() *IndexHints {
	v, _ := st.union.(*IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 322, 323, 323, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 301, 301, 301, 304, 304,
	28, 62, 30, 30, 29, 29, 32, 32, 31, 7,
	7, 7, 8, 8, 8, 8, 8, 8, 8, 8,
	9, 9, 9, 9, 9, 10, 10, 10, 10, 12,
	12, 12, 12, 12, 15, 16, 11, 11, 17, 17,
	74, 74, 18, 19, 19, 19, 19, 326, 326, 136,
	136, 134, 134, 124, 126, 127, 127, 125, 125, 125,
	125, 125, 125, 90, 90, 129, 128, 130, 130, 130,
	135, 135, 199, 199, 20, 21, 21, 209, 209, 208,
	208, 208, 210, 210, 210, 210, 245, 245, 22, 22,
	22, 22, 22, 88, 88, 303, 303, 302, 300, 300,
	299, 299, 298, 34, 35, 44, 44, 44, 44, 45,
	46, 305, 305, 276, 50, 50, 49, 49, 49, 49,
	51, 51, 48, 48, 47, 47, 278, 278, 265, 265,
	277, 277, 277, 277, 277, 277, 277, 264, 264, 102,
	102, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 317, 317, 181, 181, 181, 181, 181, 181,
	107, 107, 115, 115, 115, 115, 105, 105, 106, 104,
	104, 104, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 114, 114, 111, 111, 112,
	112, 112, 318, 318, 318, 318, 247, 247, 247, 247,
	250, 250, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 249, 249, 249, 249, 249, 251, 251, 251, 251,
	251, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 253, 253, 253, 253,
	253, 253, 253, 253, 263, 263, 254, 254, 258, 258,
	259, 259, 259, 260, 260, 260, 261, 261, 256, 256,
	256, 256, 257, 257, 257, 266, 290, 290, 289, 289,
	287, 287, 287, 287, 275, 275, 284, 284, 284, 284,
	284, 274, 274, 270, 270, 270, 271, 271, 272, 272,
	269, 269, 273, 273, 286, 286, 285, 267, 267, 268,
	268, 292, 319, 319, 319, 319, 320, 320, 293, 310,
	311, 309, 309, 309, 309, 309, 72, 72, 72, 221,
	221, 221, 282, 282, 281, 281, 281, 283, 283, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 216, 216, 216,
	308, 308, 308, 308, 308, 308, 307, 307, 307, 279,
	279, 279, 306, 306, 52, 52, 165, 165, 41, 41,
	41, 41, 41, 41, 40, 40, 40, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	42, 42, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 76, 76, 76, 76, 78, 78, 78, 295, 295,
	1, 1, 5, 5, 2, 2, 77, 77, 3, 3,
	4, 4, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 262, 262, 262, 294, 294, 296,
	296, 24, 33, 33, 25, 25, 25, 25, 26, 26,
	53, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 312,
	312, 215, 215, 223, 223, 214, 214, 238, 238, 238,
	217, 217, 217, 218, 218, 316, 316, 316, 55, 55,
	57, 57, 58, 59, 59, 240, 240, 241, 241, 60,
	61, 73, 73, 73, 73, 73, 73, 75, 75, 75,
	14, 14, 14, 14, 69, 69, 69, 13, 13, 56,
	56, 63, 313, 313, 314, 315, 315, 315, 315, 64,
	66, 27, 27, 27, 27, 27, 27, 95, 95, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 89, 89, 89, 84, 84, 327, 67, 68, 68,
	87, 87, 87, 81, 81, 81, 86, 86, 86, 92,
	92, 94, 94, 94, 94, 94, 96, 96, 96, 96,
	96, 96, 96, 91, 91, 93, 93, 93, 93, 230,
	230, 230, 229, 229, 118, 118, 120, 119, 119, 121,
	121, 122, 122, 122, 122, 163, 144, 144, 197, 197,
	196, 196, 198, 198, 198, 198, 200, 200, 123, 123,
	123, 123, 131, 131, 132, 132, 133, 133, 239, 239,
	236, 236, 236, 235, 235, 137, 137, 137, 139, 138,
	138, 138, 138, 140, 140, 142, 142, 141, 141, 143,
	145, 145, 145, 145, 145, 146, 146, 103, 103, 103,
	103, 103, 103, 113, 113, 113, 113, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 109, 109, 109, 109, 109, 109, 109, 109, 109,
	109, 109, 109, 109, 109, 109, 109, 109, 109, 109,
	109, 109, 109, 109, 212, 212, 147, 147, 155, 155,
	155, 155, 148, 148, 148, 148, 148, 148, 148, 156,
	156, 156, 162, 157, 157, 153, 153, 153, 153, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 152, 152,
	152, 231, 231, 231, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 328, 328, 255, 255, 255,
	154, 154, 154, 154, 154, 85, 85, 85, 85, 85,
	244, 244, 244, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 168, 168, 82, 82,
	166, 166, 167, 169, 169, 164, 164, 164, 150, 150,
	150, 170, 170, 171, 171, 172, 172, 174, 173, 173,
	175, 176, 176, 176, 177, 177, 178, 178, 178, 43,
	43, 43, 43, 43, 38, 38, 38, 38, 39, 39,
	39, 97, 97, 97, 97, 99, 99, 98, 98, 70,
	70, 71, 71, 71, 100, 100, 101, 101, 101, 101,
	194, 194, 179, 179, 179, 186, 186, 186, 182, 182,
	184, 184, 184, 185, 185, 185, 183, 191, 191, 193,
	193, 192, 192, 188, 188, 189, 189, 190, 190, 190,
	187, 187, 149, 149, 149, 149, 149, 195, 195, 195,
	195, 201, 201, 159, 159, 161, 161, 160, 117, 202,
	202, 206, 203, 203, 207, 207, 207, 207, 207, 204,
	204, 205, 205, 232, 232, 232, 211, 211, 222, 222,
	219, 219, 220, 220, 213, 213, 224, 224, 224, 65,
	158, 158, 291, 291, 288, 227, 227, 228, 228, 233,
	233, 237, 237, 234, 234, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 324, 325, 242, 243,
	243, 243,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	2, 3, 2, 3, 0, 1, 3, 1, 4, 3,
	3, 4, 3, 2, 3, 4, 3, 4, 2, 7,
	1, 3, 3, 3, 3, 1, 2, 1, 1, 3,
	2, 3, 3, 2, 5, 7, 9, 8, 7, 8,
	1, 1, 10, 11, 9, 8, 8, 1, 1, 1,
	3, 1, 3, 8, 4, 1, 3, 3, 6, 7,
	7, 8, 4, 0, 1, 3, 3, 1, 1, 2,
	1, 3, 0, 4, 3, 5, 4, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 1, 1, 2, 2,
	6, 12, 2, 0, 2, 0, 2, 1, 0, 2,
	1, 3, 3, 6, 4, 7, 8, 8, 8, 6,
	3, 1, 1, 5, 0, 1, 1, 1, 2, 2,
	0, 1, 4, 4, 4, 4, 2, 4, 1, 3,
	1, 1, 3, 4, 3, 3, 3, 4, 9, 0,
	2, 0, 2, 3, 5, 3, 4, 2, 3, 2,
	3, 3, 1, 1, 0, 2, 2, 3, 3, 2,
	1, 1, 2, 2, 2, 2, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 1, 2, 1, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 3, 3, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 5, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 3, 0, 5,
	0, 3, 5, 0, 1, 1, 0, 1, 0, 2,
	2, 2, 0, 2, 2, 5, 0, 1, 1, 2,
	1, 3, 2, 3, 0, 1, 4, 3, 3, 4,
	2, 0, 2, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 0, 1, 1, 3, 3, 3, 1, 3,
	1, 7, 5, 6, 6, 7, 0, 1, 5, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 1, 0,
	1, 2, 0, 1, 1, 3, 2, 1, 2, 3,
	3, 4, 4, 3, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 5, 0, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 1, 0, 2, 0, 1,
	5, 1, 3, 7, 1, 3, 3, 1, 2, 2,
	2, 5, 5, 5, 6, 8, 6, 5, 5, 2,
	2, 2, 2, 3, 3, 3, 4, 1, 3, 5,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 2, 4, 4, 2, 11, 3, 6, 8, 6,
	6, 6, 13, 8, 6, 10, 5, 5, 5, 5,
	5, 0, 10, 11, 7, 0, 8, 9, 0, 3,
	0, 1, 0, 3, 1, 1, 3, 4, 0, 2,
	0, 2, 5, 3, 7, 4, 4, 4, 4, 3,
	3, 3, 7, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 0, 2, 2, 1, 3, 8,
	8, 3, 3, 5, 7, 7, 6, 5, 3, 2,
	3, 3, 3, 7, 3, 3, 3, 3, 4, 7,
	5, 2, 4, 4, 4, 4, 4, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	2, 4, 2, 4, 5, 4, 4, 4, 4, 4,
	3, 3, 3, 5, 2, 3, 3, 3, 3, 1,
	1, 0, 1, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 2, 0, 2, 0, 1, 1, 2, 1,
	1, 2, 1, 1, 5, 0, 1, 0, 1, 2,
	3, 0, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 3, 3, 2,
	2, 3, 1, 3, 2, 1, 2, 1, 2, 2,
	4, 3, 3, 6, 4, 7, 6, 1, 3, 2,
	2, 2, 2, 1, 1, 1, 3, 2, 1, 1,
	1, 0, 1, 1, 0, 3, 0, 2, 0, 2,
	1, 2, 2, 0, 1, 1, 0, 1, 1, 0,
	1, 0, 1, 2, 3, 4, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 2, 3, 5, 0,
	1, 2, 1, 1, 0, 1, 2, 1, 3, 1,
	1, 1, 4, 3, 1, 3, 3, 7, 0, 3,
	1, 3, 1, 1, 3, 3, 1, 3, 4, 4,
	4, 3, 2, 4, 0, 1, 0, 2, 0, 1,
	0, 1, 2, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 2, 2, 2, 1, 1, 3, 3,
	0, 5, 4, 5, 5, 0, 2, 3, 3, 3,
	2, 3, 1, 3, 4, 3, 1, 3, 4, 5,
	6, 3, 4, 5, 6, 3, 4, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 3, 1, 1, 2, 2,
	2, 2, 1, 1, 2, 9, 6, 6, 6, 2,
	2, 3, 3, 3, 0, 3, 1, 1, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 5, 5, 6, 4,
	4, 8, 6, 8, 6, 8, 5, 4, 2, 2,
	1, 2, 2, 2, 8, 8, 6, 4, 6, 4,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 2, 3,
	4, 4, 4, 4, 4, 0, 3, 4, 7, 3,
	1, 1, 1, 2, 3, 3, 1, 2, 2, 1,
	2, 1, 2, 2, 1, 2, 0, 1, 0, 2,
	1, 2, 4, 0, 2, 1, 3, 5, 1, 2,
	2, 0, 3, 0, 2, 0, 1, 3, 1, 3,
	2, 0, 1, 1, 0, 1, 2, 4, 4, 0,
	2, 2, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 0, 3, 3, 3, 0, 3, 1, 1, 0,
	4, 0, 1, 1, 0, 3, 1, 3, 2, 1,
	2, 4, 9, 3, 5, 0, 3, 3, 0, 1,
	0, 2, 2, 0, 2, 2, 2, 0, 2, 1,
	2, 3, 3, 0, 2, 1, 2, 3, 4, 3,
	0, 1, 2, 1, 5, 4, 4, 1, 3, 3,
	5, 0, 5, 1, 3, 1, 2, 3, 1, 1,
	3, 3, 1, 3, 3, 3, 3, 3, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 1, 1, 5,
	0, 1, 0, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 0,
	1, 1,
}

var yyChk = [...]int{
	-1000, -322, -6, -10, -15, -16, -17, -18, -19, -20,
	-21, -22, -23, -24, -25, -26, -53, -54, -55, -57,
	-58, -59, -60, -61, -13, -56, -27, -28, -62, -63,
	-64, -65, -66, -8, -7, -12, 7, 8, -74, -29,
	30, -34, -44, 207, -45, -35, 208, -46, 210, 209,
	245, 211, 238, 72, 285, 286, 288, 289, 290, 291,
	-75, 243, 244, 213, 34, 43, 31, 32, 35, 216,
	-9, -30, 6, -324, 9, 409, 240, 239, 26, -11,
	422, 83, -323, 556, -194, -179, 20, 31, 27, -178,
	-174, -87, -179, 18, 16, 5, -67, -327, -67, -67,
	10, 11, -67, -276, -278, 83, 144, 83, -67, -50,
	-49, -48, -47, -51, 29, -41, -42, -297, -40, -37,
	212, 209, 253, 111, 112, 245, 246, 247, 211, 229,
	244, 248, 243, 262, -36, 78, 31, 422, 425, -283,
	208, 214, 215, 410, 114, 113, 73, 210, -280, 335,
	526, -51, 528, 98, 100, 527, 42, 219, 529, 530,
	531, 532, 228, 533, 534, 535, 536, 542, 543, 544,
	545, 115, 5, -67, -237, -233, -301, -226, 86, 87,
	88, 419, 231, 453, 454, 278, 78, 39, 335, 526,
	285, 299, 293, 320, 312, 420, 455, 281, 232, 266,
	523, 310, 120, 528, 284, 456, 246, 340, 341, 342,
	98, 288, 377, 541, 283, 457, 539, 100, 527, 77,
	49, 42, 241, 308, 304, 529, 267, 458, 430, 260,
	114, 111, 548, 34, 302, 48, 28, 538, 113, 47,
	530, 135, 459, 531, 344, 325, 517, 46, 345, 247,
	460, 81, 424, 525, 346, 303, 347, 277, 537, 213,
	461, 509, 348, 349, 518, 462, 326, 330, 463, 369,
	350, 555, 50, 464, 465, 519, 112, 466, 76, 532,
	297, 298, 467, 275, 230, 371, 324, 228, 33, 351,
	421, 279, 56, 254, 372, 44, 328, 552, 43, 513,
	468, 516, 323, 319, 51, 469, 470, 471, 472, 533,
	322, 296, 318, 547, 442, 272, 534, 60, 215, 332,
	331, 333, 261, 368, 315, 473, 474, 475, 235, 79,
	476, 305, 19, 477, 478, 352, 268, 479, 54, 480,
	481, 375, 244, 482, 52, 535, 37, 249, 549, 536,
	483, 484, 485, 486, 487, 354, 488, 353, 327, 329,
	256, 355, 423, 489, 301, 248, 540, 490, 236, 524,
	250, 253, 243, 376, 237, 491, 492, 493, 494, 495,
	282, 496, 497, 289, 542, 41, 498, 499, 500, 501,
	276, 271, 370, 379, 59, 80, 337, 502, 522, 295,
	269, 503, 286, 53, 543, 544, 545, 263, 546, 7,
	553, 554, 357, 115, 273, 274, 45, 316, 255, 504,
	505, 306, 307, 321, 294, 317, 287, 510, 257, 358,
	245, 506, 378, 270, 338, 427, 262, 359, 521, 426,
	314, 311, 264, 507, 360, 220, 258, 259, 508, 511,
	361, 362, 280, 363, 364, 365, 366, 367, 265, 425,
	292, 309, 339, 390, 391, 392, 393, 394, 395, 396,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 218, -67, 218, -141, -233, 218, -204, 341, -223,
	343, 356, 351, 361, 349, -215, 352, 354, 256, -316,
	369, 218, 358, 207, 161, 344, 353, 362, 363, 280,
	364, 367, 265, -312, -301, 531, 546, 120, 313, 348,
	346, 370, 513, 366, 365, -233, 287, -240, 292, -227,
	-301, -226, 290, -141, -73, 509, 211, -242, -242, -89,
	513, 515, -157, -103, 128, -113, -116, -108, -109, -151,
	-152, -153, -154, -114, -164, 150, 151, 158, 129, -162,
	-117, 24, 418, 411, 410, 161, 29, 203, 66, 67,
	413, 414, 131, 55, 386, 387, -115, 382, 388, 383,
	416, 417, 101, 102, 103, -231, -227, -233, 223, 381,
	217, 156, 409, -110, -106, -7, -160, 380, 384, 385,
	389, 104, 106, 105, -301, -226, -112, -111, -147, 89,
	94, 99, 95, -321, 107, -324, 90, 91, 92, 93,
	108, 109, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 42, 357, 357, -141, -67, -172, -87,
	-174, -9, -7, -324, 6, -67, -7, -8, -12, -30,
	-32, 449, -31, -233, -179, -194, 10, 146, 40, 48,
	-177, -178, -11, -7, -103, 17, 21, 22, -93, 152,
	-103, -233, -68, -93, -213, 222, -67, -67, -203, -245,
	287, -207, 370, 369, -228, -205, -227, -225, -204, 368,
	212, 428, 127, 23, 25, 130, 161, 17, 131, 35,
	214, 313, 229, 160, 225, 410, 207, 70, 429, 382,
	383, 380, 386, 412, 413, 381, 343, 29, 11, 431,
	26, 239, 22, 36, 154, 209, 134, 242, 24, 240,
	101, 109, 434, 20, 73, 234, 12, 227, 38, 14,
	435, 436, 15, 223, 222, 146, 219, 68, 9, 203,
	27, 143, 64, 437, 122, 438, 439, 440, 441, 66,
	144, 18, 550, 384, 385, 31, 514, 418, 251, 156,
	71, 57, 515, 128, 443, 444, 107, 445, 110, 74,
	520, 124, 16, 69, 40, 446, 252, 447, 224, 551,
	448, 373, 449, 145, 210, 409, 67, 450, 217, 356,
	6, 415, 30, 238, 226, 117, 65, 451, 218, 133,
	416, 417, 221, 108, 5, 121, 32, 10, 72, 75,
	387, 388, 389, 55, 116, 422, 132, 13, 452, 374,
	126, 120, -277, 144, -264, -268, -227, 233, -293, 229,
	-141, -286, -285, -227, -88, -222, 219, 227, 226, 121,
	-305, 124, 273, 381, 217, -47, -48, -204, 160, 250,
	84, 84, -268, -267, -266, -306, 252, 233, -292, -284,
	225, 234, -274, 226, 227, -269, 219, 122, -306, -269,
	224, 234, 252, 252, 115, 252, 115, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 249, -275, 136, -275,
	426, 426, -280, -306, -306, -306, 221, 33, 33, -224,
	-269, 221, 23, -275, -275, -204, 160, -275, -275, -275,
	-275, 260, 260, -275, -275, -275, -275, -275, -275, -275,
	-275, -275, -275, -275, -275, -275, -275, -275, 218, -305,
	-97, 367, 280, 78, -49, 262, -33, -141, -222, 219,
	220, -305, -141, 204, -141, -217, 144, 13, -217, -214,
	357, 355, 342, 347, -217, -217, -217, -217, 263, 340,
	-270, 219, 33, 230, 357, 263, 340, 263, 264, 263,
	264, 350, 360, 263, -238, 12, 146, 381, 345, 349,
	256, 218, 257, 220, 359, -301, 516, 264, -238, 90,
	-218, 144, 357, 259, -217, -243, -324, -228, 313, -243,
	-243, 30, 221, -227, -69, -227, 90, -14, -10, -18,
	-17, -19, 136, -95, 357, -83, 161, 531, 517, 518,
	519, 516, 354, 524, 522, 520, 263, 521, 84, 124,
	126, 127, -103, 143, -148, 136, 137, 138, 139, 140,
	141, 142, 146, 128, 130, 144, 145, 125, 147, 148,
	149, 150, 151, 152, 153, 155, 154, 156, 157, 160,
	205, 206, -109, -109, -109, -109, -162, -324, -324, -324,
	-109, -212, -324, -109, -324, -324, -324, -324, -168, -103,
	-324, -328, -324, -328, -328, -255, -324, -255, -324, -324,
	-324, -324, -324, -324, -324, 204, -324, -324, -324, -324,
	-324, -255, -255, -255, -255, 99, 94, 89, -164, 95,
	90, -227, -233, -7, -8, -157, -242, -313, -314, -144,
	-141, -324, 280, -177, -11, -7, -172, -178, -174, -7,
	-67, -81, -94, 61, 62, -96, 22, 36, 65, 63,
	21, -325, 85, -325, -194, -325, 84, -32, -197, 83,
	59, 41, 90, 90, 84, 19, -173, -175, -103, 12,
	-230, -229, 23, -227, 90, 204, 97, 12, -142, 27,
	-141, -213, -213, 84, 287, -207, -245, -209, -208, 371,
	373, 136, -232, -227, 90, 29, 85, 84, -141, -247,
	-250, -252, -251, -253, -248, -249, 310, 311, 161, 314,
	316, 317, 318, 319, 320, 321, 322, 323, 324, 325,
	30, 241, 306, 307, 308, 309, 326, 327, 328, 329,
	330, 331, 332, 333, 293, 312, 420, 294, 295, 296,
	297, 298, 299, 301, 302, 303, 304, 305, -304, -301,
	83, 85, 84, -254, 83, -97, 218, -301, 219, 219,
	219, -67, 409, -275, -275, 249, -40, -37, -297, 16,
	-36, -37, 212, 111, 112, 209, 83, -264, 83, -273,
	-304, -301, 83, 122, 224, 121, -272, -269, -272, -273,
	-301, -164, -301, 122, 122, -200, -227, -200, -200, 21,
	-200, 21, -200, 21, 92, -227, -200, 21, -200, 21,
	-200, 21, -200, 21, -200, 21, 29, 76, 77, 29,
	79, 80, 81, -164, -164, -264, -204, -141, -301, 92,
	92, -275, -275, 92, 90, 90, 90, -275, -275, 92,
	90, -235, -233, 90, -307, 235, 277, 279, 92, 92,
	92, 92, 29, 90, -308, 29, 538, 537, 539, 540,
	541, 92, 29, 92, 29, 92, -227, 83, -141, -100,
	267, 207, 209, 212, 74, 90, 281, 136, 42, 84,
	221, 218, -301, -219, 223, -219, -234, -233, -225, 90,
	-103, -271, 12, 146, -238, -238, -217, -141, -271, -238,
	-217, -141, -217, -217, -217, -217, -238, -238, -238, -217,
	-233, -233, -141, -141, -141, -141, -141, -141, -141, -243,
	-243, -243, -218, -217, 516, 90, 74, -241, 290, 324,
	510, 511, 512, 84, 422, -134, -141, 516, 516, 516,
	516, 516, 516, -103, -103, -103, -103, -155, 107, 128,
	108, 109, -116, -156, -160, -162, 96, 146, 130, 144,
	145, -108, -109, -108, -108, -108, -108, -108, -108, -108,
	-108, -108, -108, -108, -108, -108, -244, -301, 90, 161,
	90, 90, -91, -93, -103, -103, -301, -227, -91, -91,
	-103, -86, 22, 36, -166, -167, 132, -164, -325, -325,
	92, -227, -227, -80, -79, 391, 392, 393, 394, 396,
	397, 398, 401, 402, 406, 407, 390, 408, 395, 400,
	403, 404, 405, 399, 309, -164, -164, -164, -112, -321,
	-92, 22, 36, -91, -228, -234, -225, -91, -92, -92,
	-91, -91, 204, -194, -325, 84, -315, 373, 374, 514,
	-236, 252, -235, 23, -158, -157, 90, -177, -177, 61,
	62, 57, -91, -96, -325, -31, 23, -196, -227, 60,
	90, -256, -204, -103, -103, 84, -176, 25, 26, -141,
	-229, 152, -234, -141, -199, 252, -141, -119, -121, -122,
	-123, -144, -163, -324, -124, 437, 12, -134, -135, -143,
	-233, -207, -209, 84, 372, 374, 375, 74, 110, -103,
	-257, 160, -282, -281, -280, -264, -266, -267, -268, 85,
	-180, -102, 38, -260, 338, 337, -254, -254, -254, -254,
	-254, -256, -256, -256, -256, 83, 83, -254, -254, -254,
	-254, -258, 83, -258, -258, -259, 83, -259, -293, -103,
	-290, -289, -287, -288, 228, 98, 422, 75, -285, -176,
	92, -100, -220, 223, -291, -288, -301, -301, -301, -220,
	-301, 90, -301, 90, 84, 17, -265, -264, -52, 277,
	-296, 252, -292, -286, -273, 122, -272, -273, -273, -301,
	84, 27, 115, 115, 115, 115, 422, 209, 30, -264,
	-52, -244, 221, -244, -244, 90, 90, -216, 546, -134,
	-99, 269, 136, 258, 258, 218, 218, 271, -141, 282,
	284, 283, 281, 21, 270, 272, 274, 260, -141, -141,
	-219, 74, -136, -141, 24, -233, -141, -217, -217, -141,
	-217, -217, -141, -227, -83, 373, 84, 422, 20, -84,
	20, 107, 108, 109, -156, -108, -109, -108, 127, 242,
	84, -325, 23, 84, 75, -325, -325, -325, 84, 12,
	-91, -169, -167, 134, -103, -325, -325, 84, 84, 12,
	-325, 84, -325, -325, -325, -91, -91, -324, 204, -325,
	-325, -325, -325, -325, -228, -314, 513, 374, -145, 72,
	222, 73, -324, -235, -325, -150, -227, 92, 95, -179,
	-118, -120, 12, -96, -162, 85, 84, -256, -183, -188,
	-214, -301, 90, 161, -175, 204, -146, 13, -149, 30,
	55, -10, -324, -324, 30, 84, -137, -139, -138, -140,
	64, 68, 70, 65, 66, 67, 71, -239, 23, -119,
	-8, -7, -324, 83, -141, -134, -326, 12, 75, -326,
	84, 204, -208, -210, 376, 373, 379, -301, 90, -76,
	252, 84, -280, -268, -320, 107, 128, 29, 74, 335,
	98, -318, 160, -319, 224, 121, 122, 236, 23, 39,
	-261, 339, -256, -256, -263, 90, -263, 92, 92, 85,
	-43, -38, -39, 31, 78, -287, -275, 90, 37, -227,
	85, -99, -141, 128, 74, -291, -291, -291, -233, 16,
	-196, 84, 85, -165, 278, 85, -227, 85, 83, -273,
	-273, -227, -324, 218, 29, 29, -52, -165, -257, -301,
	548, 547, 85, 220, 276, -101, 386, 90, 86, -141,
	-141, -141, -141, -141, 212, 209, 261, 221, -134, -141,
	84, -72, 237, 232, -238, -238, 31, -141, 373, 525,
	523, 127, 242, -116, -109, -93, 419, -246, 161, 310,
	241, 308, 304, 324, 315, 337, 306, 338, -246, -244,
	-103, -103, -172, 135, -103, 133, -103, -103, -103, -164,
	-325, -325, -92, -228, 219, 219, 219, -200, -211, 20,
	12, 55, 55, -118, -146, -119, -96, -227, -186, 509,
	-191, 44, -189, -190, 45, -187, 46, 54, 152, -177,
	-103, -201, 74, -202, -206, -164, -159, -161, -160, -324,
	-195, -325, -227, -200, -202, -121, -122, -122, -121, -122,
	64, 64, 64, 69, 64, 69, 64, -138, -233, -325,
	-325, -8, -103, -236, 75, -119, -119, -143, -233, 152,
	373, 377, 378, 17, -280, 107, -324, -107, -115, -105,
	-104, -106, -110, 150, 151, 10, 90, 90, -301, 122,
	122, -141, 83, 85, 84, 85, 84, 85, 84, -221,
	459, 128, -39, -38, -275, -275, 92, -301, 220, 24,
	-141, 74, 74, 74, 17, -264, -164, 55, -290, -196,
	-294, -296, -141, -105, -324, -165, -141, -98, 267, 275,
	83, 87, -303, 75, 258, 335, 258, -141, -72, -43,
	-141, -217, -217, 31, -301, -116, -109, -324, -325, -254,
	-254, -254, -259, -254, 298, -254, 298, -325, -325, 84,
	-325, 20, -325, -82, 415, -103, 84, 84, -325, -325,
	-325, -324, -324, -324, -325, -141, -146, -170, 14, -183,
	49, 316, -193, -192, 53, 45, -190, 17, 47, 17,
	28, -201, 84, 136, 84, -325, -325, 84, 55, 204,
	-325, -146, -132, -131, 74, 75, -133, 74, -131, 64,
	64, -197, -325, 84, -199, -119, -146, -146, 204, -1,
	-2, 550, 551, 552, -103, -111, -111, -152, 83, -103,
	-256, 90, -256, 92, 92, 459, 29, 79, 80, 81,
	29, 76, 77, -141, -141, -141, -141, -196, 254, 85,
	-325, 84, -262, 422, 425, -103, -197, 85, -300, 422,
	-302, -227, -227, -227, -227, -108, -256, -301, -103, -103,
	-177, 90, -103, -103, -198, -325, -227, 224, -198, -198,
	-236, -170, -171, 15, 17, -184, 51, -182, 50, -182,
	-192, 17, 17, 90, 17, 90, 122, -206, -103, -161,
	55, -10, -227, -159, -227, -172, -103, 83, -103, -112,
	-146, -146, 555, 122, -77, 83, 342, -325, -196, 85,
	85, 85, -197, 255, -319, -296, 426, 426, -325, 23,
	-299, -298, -228, 83, 75, -85, 146, 422, -325, -325,
	-325, -325, -325, 84, -325, -325, -325, -145, -171, -103,
	-157, -185, 52, 74, 110, 90, 90, 90, 10, -159,
	204, -177, -196, -126, 342, -172, 83, -5, 78, -3,
	549, -103, 83, 85, -181, 23, -324, -10, 84, 136,
	-196, -141, -325, 420, 71, 423, -227, 224, 74, 110,
	-202, -227, 85, 85, 83, -177, -103, 83, 136, -78,
	553, 92, 85, -196, -310, -311, 74, -320, -317, 107,
	128, 98, -318, 116, 117, -10, -103, 251, -70, 422,
	-298, -279, -228, 90, 92, 85, 60, 421, 424, -236,
	-127, -125, -227, 473, 85, -196, 92, -295, 83, 17,
	85, -311, 74, 11, 10, 107, 90, -70, -325, -325,
	-71, 266, 513, -303, 60, 85, 84, 20, -247, 483,
	-3, 85, -294, -1, -309, 237, 232, 235, 30, -309,
	229, -300, 422, -125, 480, -257, -112, -78, -3, 85,
	555, 122, 231, 29, 107, 268, 423, -90, 24, -126,
	-295, -78, 83, -5, 424, 483, -295, -103, 83, -112,
	85, -196, -129, -128, -130, 517, 107, 29, -4, 554,
	85, -128, -130, 74, -104, 92, -4, 74, 432, 517,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 65, 67, 68, 716, 716, 716, 0,
	716, 0, 0, 716, -2, -2, 716, 1131, 0, 716,
	0, 0, -2, 649, 650, 0, 652, -2, 0, 0,
	661, 1578, 1578, 711, 0, 0, 0, 0, 0, 716,
	995, 45, 716, 0, 80, 81, 667, 668, 669, 60,
	0, 1576, 1, 3, 66, 70, 0, 0, 0, 53,
	1004, 0, 73, 0, 0, 720, 0, 718, 0, 1114,
	716, 716, 0, 128, 129, 0, 0, 0, -2, 132,
	-2, 156, 157, 0, 161, 501, 461, 504, 459, 490,
	-2, 452, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 464, 354, 354, 0, 0, -2,
	452, 452, 452, 0, 0, 0, 487, 1116, 407, 354,
	354, 0, 354, 354, 354, 354, 0, 0, 354, 354,
	354, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 1021, 160, 1132, 1129, 1130, 35, 36,
	37, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284,
	1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294,
	1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304,
	1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314,
	1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324,
	1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334,
	1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344,
	1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354,
	1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364,
	1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374,
	1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384,
	1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394,
	1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434,
	1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444,
	1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454,
	1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464,
	1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474,
	1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484,
	1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504,
	1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514,
	1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524,
	1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534,
	1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544,
	1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554,
	1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564,
	1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574,
	1575, 0, 1108, 0, 579, 807, 0, 640, 640, 0,
	640, 640, 640, 640, 0, 0, 0, 591, 0, 0,
	0, 0, 637, 0, 0, 610, 612, 0, 637, 0,
	643, 0, 624, 640, 1579, 1579, 1579, 1099, 0, 634,
	632, 646, 647, 629, 630, 648, 651, 0, 656, 659,
	1125, 1126, 0, 674, 44, 1356, 666, 679, 680, 0,
	712, 713, 40, 893, 0, 822, 826, 837, 850, 851,
	852, 853, 854, 856, 857, 0, 0, 0, 0, 862,
	863, 0, 0, 0, 0, 0, 874, 0, 0, 0,
	0, 0, 976, 0, 945, 945, 910, 945, 947, 947,
	0, 0, 0, 0, 0, 0, 985, 0, 0, 0,
	0, 0, 0, 265, 266, 892, 1088, 947, 947, 947,
	947, 921, 922, 923, -2, -2, 212, 213, 214, 215,
	216, 217, 218, 0, 208, 0, 269, 270, 267, 268,
	876, 877, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 258, 259, 260, 261,
	262, 263, 264, 1578, 0, 689, 0, 0, 1004, 0,
	996, 995, 58, 0, 716, -2, 0, 0, 0, 0,
	42, 0, 47, 768, 72, 71, 1040, 0, 0, 0,
	54, 1005, 62, 64, 1006, 0, 721, 722, 0, 745,
	749, 0, 717, 0, 0, 1115, 1114, 1114, 114, 0,
	1521, 1092, -2, -2, 0, 0, 1127, 1128, 1101, -2,
	1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144,
	1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154,
	1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164,
	1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174,
	1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184,
	1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194,
	1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204,
	1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214,
	1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224,
	1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234,
	1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244,
	1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254,
	1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264,
	1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274,
	1275, -2, 0, 0, 170, 171, 0, 38, 380, 0,
	166, 0, 374, 326, 1021, 0, 0, 0, 0, 0,
	716, 0, 1109, 151, 152, 158, 159, 354, 354, 0,
	160, 160, 468, 469, 470, 0, 0, -2, 378, 0,
	453, 0, 0, 368, 368, 372, 370, 371, 0, 0,
	0, 0, 0, 0, 481, 0, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 563, 0, 355, 0,
	499, 500, 408, 0, 0, 0, 0, 479, 480, 0,
	0, 1117, 1118, 0, 0, 354, 354, 0, 0, 0,
	0, 354, 354, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 150,
	1034, 0, 0, 0, -2, 0, 571, 0, 0, 0,
	1110, 1110, 578, 0, 580, 581, 0, 0, 582, 0,
	637, 637, 635, 636, 584, 585, 586, 587, 640, 0,
	0, 363, 364, 365, 637, 640, 0, 640, 640, 640,
	640, 637, 637, 637, 640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1579, 1579, 1579, 643, 640, 0,
	620, 0, 621, 622, 625, 626, 1580, 1581, 1146, 627,
	628, 1100, 657, 660, 677, 675, 676, 678, 670, 671,
	672, 673, 0, 691, 692, 697, 0, 0, 0, 0,
	703, 704, 705, 0, 0, 708, 709, 710, 0, 0,
	0, 0, 820, 0, 0, 882, 883, 884, 885, 886,
	887, 888, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 858, 859, 860, 861, 864, 0, 0, 0,
	869, 870, 0, 0, 0, 0, 0, 726, 0, 977,
	0, 908, 0, 909, 911, 912, 0, 913, 0, 0,
	0, 0, 0, 0, 729, 0, 0, 729, 729, 0,
	0, 202, 203, 204, 205, 219, 220, 221, 222, 223,
	271, 985, 0, 892, 0, 0, 41, 681, 682, 0,
	790, 1120, 0, 52, 61, 63, 1004, 56, 1004, 0,
	731, 0, 0, -2, -2, 732, 738, 739, 740, 741,
	742, 49, 1577, 50, 0, 69, 0, 43, 0, 0,
	0, 0, 338, 1043, 0, 0, 997, 998, 1001, 0,
	746, 750, 0, 752, 753, 0, 719, 0, 112, 0,
	806, 0, 0, 0, 1521, 1098, 0, 116, 117, 0,
	0, 0, 342, 1103, 1104, 1105, -2, 361, 0, -2,
	333, 277, 278, 279, 326, 281, 326, 326, 326, 326,
	338, 338, 338, 338, 309, 310, 311, 312, 313, 0,
	0, 296, 326, 326, 326, 326, 316, 317, 318, 319,
	320, 321, 322, 323, 282, 283, 284, 285, 286, 287,
	288, 289, 290, 328, 328, 328, 330, 330, 0, 39,
	0, 346, 0, 1001, 0, 1034, 1112, 1122, 0, 0,
	0, 1112, 134, 0, 0, 502, 462, 491, 503, 0,
	465, 466, -2, 0, 0, 452, 0, 454, 0, 362,
	0, -2, 0, 372, 0, 368, 372, 369, 372, 360,
	373, 483, 484, 485, 0, 543, 776, 0, 0, 0,
	0, 0, 549, 550, 551, 0, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 562, 492, 493, 494, 495,
	496, 497, 498, 0, 0, 454, 0, 488, 0, 409,
	410, 0, 0, 413, 414, 415, 416, 0, 0, 419,
	420, 421, 793, 794, 422, 446, 447, 448, 423, 424,
	425, 426, 427, 428, 429, 440, 441, 442, 443, 444,
	445, 430, 431, 432, 433, 434, 437, 0, 144, 1025,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1110, 0, 0, 0, 0, 808, 1133, 1134, 641,
	642, 0, 366, 367, 640, 640, 588, 611, 0, 640,
	592, 613, 593, 595, 594, 596, 615, 616, 640, 599,
	638, 639, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 617, 618, 619, 644, 0, 0, 658, 662,
	663, 664, 665, 0, 0, 694, 91, 699, 700, 701,
	702, 714, 707, 894, 817, 818, 819, 821, 823, 0,
	878, 880, 825, 827, 889, 890, 891, 0, 0, 0,
	0, 0, 831, 835, 838, 839, 840, 841, 842, 843,
	844, 845, 846, 847, 848, 849, 855, 960, 961, 962,
	872, 873, 0, 743, 0, 0, 0, 871, 0, 0,
	0, 0, 727, 728, 983, 980, 0, 0, 946, 948,
	0, 0, 0, 0, 924, 925, 926, 927, 928, 929,
	930, 931, 932, 933, 934, 935, 936, 937, 938, 939,
	940, 941, 942, 943, 944, 0, 0, 0, 0, 0,
	0, 0, 0, 730, 986, 0, -2, 0, 0, 0,
	0, 0, 0, 0, 1087, 0, 684, 685, 687, 0,
	810, 0, 791, 0, 0, 1121, 690, 55, 57, 736,
	737, 0, 754, 733, 51, 46, 0, 0, 770, 1041,
	338, 1063, 0, 1007, 1008, 0, 1000, 1002, 1003, 74,
	751, 747, 0, 815, 0, 0, 805, 0, 757, 759,
	760, 761, 788, 0, 764, 0, 0, 0, 0, 110,
	807, 1093, 115, 0, 0, 120, 121, 1094, 1095, 1096,
	1097, 0, 521, -2, 404, 172, 174, 175, 176, 167,
	386, 0, 0, 336, 334, 335, 280, 338, 338, 303,
	304, 305, 306, 307, 308, 0, 0, 297, 298, 299,
	300, 291, 0, 292, 293, 294, 0, 295, 379, 0,
	1009, 347, 348, 350, 354, 0, 0, 0, 375, 376,
	0, 1025, 0, 0, 0, 1123, 1122, 1122, 1122, 0,
	162, 163, 164, 165, 160, 0, 0, 168, 456, 455,
	0, 0, 377, 0, 0, 372, 372, 357, 358, 486,
	0, 0, 545, 546, 547, 548, 0, 0, 0, 454,
	456, 342, 0, 411, 412, 417, 418, 435, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 516,
	517, 518, 519, 520, 1022, 1023, 1024, 0, 0, 572,
	0, 0, 396, 89, 1111, 577, 637, 598, 614, 637,
	590, 597, 623, 654, 698, 0, 0, 0, 0, 706,
	0, 824, 879, 881, 828, 0, 832, 836, 0, 0,
	0, 0, 0, 0, 0, 875, 899, 900, 0, 0,
	995, 0, 981, 0, 0, 907, 949, 0, 0, 0,
	917, 0, 919, 920, 895, 0, 0, 729, 0, 950,
	951, 952, 953, 954, 986, 683, 686, 688, 766, 0,
	0, 0, 0, 792, 1119, 0, 988, 0, 0, 754,
	815, 755, 0, 734, 48, 769, 0, 1045, 1044, 1057,
	1070, 339, 340, 341, 999, 0, 1004, 0, 1081, 0,
	0, 1073, 0, 0, 0, 0, 0, 0, 0, 0,
	795, 0, 0, 798, 0, 0, 0, 0, 789, 0,
	0, 0, 0, 0, -2, 0, 0, 87, 88, 0,
	0, 0, 118, 119, 0, 0, 125, 343, 344, 153,
	0, 160, 406, 173, 177, 182, 0, 0, 0, 187,
	0, 189, 0, 387, 0, 273, 275, 0, 0, 180,
	276, 337, 301, 302, 0, 324, 0, 0, 0, 399,
	130, 1013, 1012, 354, 354, 349, 0, 352, 0, 1124,
	327, 0, 143, 0, 0, 0, 0, 0, 149, 0,
	460, 0, 471, 472, 0, 542, 0, 346, 0, 356,
	359, 777, 0, 0, 473, 0, 456, 477, 478, 489,
	438, 439, 436, 0, 0, 1035, 1036, 0, 1039, 135,
	509, 511, 510, 514, 0, 0, 507, 0, 396, 1009,
	0, 576, 397, 398, 640, 640, 693, 92, 0, 696,
	0, 0, 0, 829, 833, 744, 0, 0, 326, 326,
	966, 326, 330, 969, 326, 971, 326, 974, 0, 0,
	0, 0, 978, 906, 984, 0, 0, 0, 0, 0,
	896, 897, 0, 987, 0, 0, 0, 0, 0, 1106,
	1107, 989, 990, 815, 991, 756, 735, 771, 1063, 0,
	1056, 0, -2, 1065, 0, 0, 0, 1071, 748, 75,
	816, 78, 0, 1081, 1089, 0, 1072, 1083, 1085, 0,
	0, 0, 1077, 0, 815, 758, 784, 786, 0, 781,
	796, 797, 799, 0, 801, 0, 803, 804, 768, 763,
	765, 0, 0, 112, 0, 815, 815, 111, 0, 809,
	122, 123, 124, 530, 405, 183, 0, 185, 200, 201,
	206, 207, 209, 0, 0, 0, 188, 190, 191, 272,
	274, 0, 0, 338, 0, 338, 0, 331, 0, 388,
	400, 0, 1010, 1011, 0, 0, 351, 353, 0, 1113,
	145, 0, 0, 0, 0, 169, 457, 0, 345, 0,
	0, 567, 564, 474, 0, 476, 768, 1026, 1027, 1028,
	0, 1038, 138, 0, 0, 0, 0, 573, 574, 575,
	90, 583, 589, 695, 715, 830, 834, 0, 866, 963,
	338, 967, 968, 970, 972, 973, 975, 867, 868, 0,
	902, 0, 904, 1004, 0, 982, 0, 0, 916, 918,
	898, 0, 0, 0, 790, 59, 991, 993, 0, 1050,
	1048, 1048, 1058, 1059, 0, 0, 1066, 0, 0, 0,
	0, 79, 0, 0, 0, 1086, 0, 0, 0, 0,
	113, 995, 778, 785, 0, 0, 779, 0, 780, 800,
	802, 762, -2, 0, 815, 815, 85, 86, 0, 0,
	0, 531, 534, 535, 0, 210, 211, 186, 0, 0,
	314, 325, 315, 0, 0, 401, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 768, 146, 147, 148, 463, 0, 0,
	544, 0, 552, 0, 0, 0, 0, 1037, 508, 0,
	136, 137, 0, 0, 513, 955, 964, 965, 0, 0,
	0, 979, 0, 0, 0, 812, 772, 773, 0, 0,
	810, 993, 77, 0, 0, 1053, 0, 1046, 1049, 1047,
	1060, 0, 0, 1067, 0, 1069, 0, 1090, 1091, 1084,
	0, 1076, 1079, 1075, 1078, 1004, 782, 0, 787, 0,
	995, 84, 0, 532, 538, 0, 0, 184, 0, 194,
	329, 332, 0, 0, 381, 568, 565, 566, 475, 0,
	139, 140, 0, 0, 0, 0, 0, 0, 901, 903,
	905, 914, 915, 0, 811, 813, 814, 767, 76, 994,
	992, 1042, 0, 1051, 1052, 1061, 1062, 1068, 0, 1074,
	0, 82, 0, 0, 0, 1004, 0, 0, 0, 525,
	0, 0, 0, 382, 386, 0, 0, 1029, 0, 0,
	0, 515, 865, 0, 0, 0, 774, 775, 1054, 1055,
	1082, 1080, 783, 790, 0, 83, 0, 0, 0, 528,
	0, 539, 536, 0, 383, 384, 0, 178, 195, 196,
	0, 0, 199, 192, 193, 1029, 0, 0, 505, 1031,
	141, 142, 449, 450, 451, 135, 956, 0, 959, 93,
	0, 95, 0, 1420, 538, 0, 533, 524, 0, 530,
	537, 385, 0, 0, 0, 197, 198, 131, 569, 570,
	0, 1032, 1033, 138, 957, 94, 0, 0, 342, 0,
	525, 538, 0, 0, 389, 391, 392, 0, 0, 390,
	0, 512, 0, 96, 97, 103, 0, 528, 525, 529,
	0, 532, 393, 394, 395, 1030, 0, 0, 104, 102,
	522, 528, 0, 0, 958, 0, 523, 0, 0, 98,
	540, 0, 99, 100, 0, 107, 108, 0, 526, 0,
	540, 101, 0, 0, 109, 541, 527, 0, 105, 106,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 129, 3, 3, 3, 155, 147, 3,
	83, 85, 152, 150, 84, 151, 204, 153, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 556,
	137, 136, 138, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 157, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 125, 3, 158,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	126, 127, 128, 130, 131, 132, 133, 134, 135, 139,
	140, 141, 142, 143, 144, 145, 146, 148, 149, 154,
	156, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:469
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:474
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:475
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:479
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:512
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:518
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:522
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:526
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:531
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:535
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:541
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:547
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:553
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:557
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:562
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:566
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:572
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:576
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:582
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:588
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:592
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:596
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:619
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:625
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:630
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:636
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:643
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:649
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:656
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:660
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:666
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:670
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:674
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:678
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:682
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:688
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:692
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:697
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:701
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:707
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:711
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:716
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:722
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:728
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:735
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:741
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:749
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:753
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:761
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:773
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:785
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:789
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:795
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:801
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:805
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:809
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:813
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:818
		{
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:819
		{
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:823
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:827
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:833
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:837
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:843
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:849
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:855
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:859
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:865
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:869
		{
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, Collate: yyDollar[3].str, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:874
		{
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, Collate: yyDollar[3].str, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:879
		{
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, Collate: yyDollar[3].str, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:884
		{
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, Collate: yyDollar[3].str, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:889
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:896
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:900
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:906
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:912
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:918
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:922
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:926
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:932
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:936
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:941
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:945
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:951
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:957
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:961
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:967
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:971
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:977
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:981
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:985
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:991
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:995
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:999
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1003
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1009
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1013
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1019
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1025
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1032
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1041
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].str, Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1045
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1052
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1056
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1061
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1065
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1071
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1076
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1081
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1087
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1092
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1098
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 143:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1104
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1111
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1118
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1123
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1128
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1133
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1140
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1147
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1158
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1165
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1169
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1175
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1179
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1183
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1187
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 160:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1193
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1197
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1203
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 163:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1207
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1213
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 165:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1217
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1224
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1228
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1234
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1238
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1244
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1249
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1254
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1258
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1263
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1267
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1271
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1277
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[4].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1283
		{
			yyDollar[2].columnType.Options = yyDollar[8].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[6].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[9].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1291
		{
			yyVAL.str = ""
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1295
		{
			yyVAL.str = ""
		}
	case 181:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1304
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1308
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1314
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1320
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1325
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1330
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1335
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1340
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1345
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1350
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1354
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1361
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1365
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1370
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1374
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1379
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1385
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1391
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1396
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1403
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1410
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1414
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1418
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1422
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1433
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1440
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1444
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1450
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1454
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1458
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1462
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1466
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1470
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1474
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1479
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1483
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1487
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1491
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1495
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1502
		{
			yyVAL.str = Armscii8Str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1506
		{
			yyVAL.str = ASCIIStr
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1510
		{
			yyVAL.str = Big5Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1514
		{
			yyVAL.str = UBinaryStr
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1518
		{
			yyVAL.str = Cp1250Str
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1522
		{
			yyVAL.str = Cp1251Str
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1526
		{
			yyVAL.str = Cp1256Str
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1530
		{
			yyVAL.str = Cp1257Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1534
		{
			yyVAL.str = Cp850Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1538
		{
			yyVAL.str = Cp852Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1542
		{
			yyVAL.str = Cp866Str
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1546
		{
			yyVAL.str = Cp932Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1550
		{
			yyVAL.str = Dec8Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1554
		{
			yyVAL.str = EucjpmsStr
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1558
		{
			yyVAL.str = EuckrStr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1562
		{
			yyVAL.str = Gb18030Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1566
		{
			yyVAL.str = Gb2312Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1570
		{
			yyVAL.str = GbkStr
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1574
		{
			yyVAL.str = Geostd8Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1578
		{
			yyVAL.str = GreekStr
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1582
		{
			yyVAL.str = HebrewStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1586
		{
			yyVAL.str = Hp8Str
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1590
		{
			yyVAL.str = Keybcs2Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1594
		{
			yyVAL.str = Koi8rStr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1598
		{
			yyVAL.str = Koi8uStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1602
		{
			yyVAL.str = Latin1Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1606
		{
			yyVAL.str = Latin2Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1610
		{
			yyVAL.str = Latin5Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1614
		{
			yyVAL.str = Latin7Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1618
		{
			yyVAL.str = MacceStr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1622
		{
			yyVAL.str = MacromanStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1626
		{
			yyVAL.str = SjisStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1630
		{
			yyVAL.str = Swe7Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1634
		{
			yyVAL.str = Tis620Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1638
		{
			yyVAL.str = Ucs2Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = UjisStr
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.str = Utf16Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1650
		{
			yyVAL.str = Utf16leStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1654
		{
			yyVAL.str = Utf32Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1658
		{
			yyVAL.str = Utf8Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1662
		{
			yyVAL.str = Utf8mb4Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1672
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1676
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1683
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1687
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1691
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1697
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1701
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1705
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1709
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1715
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1726
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1731
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1737
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1741
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1745
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1749
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1753
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1757
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1761
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1765
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1769
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1775
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1781
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1787
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1793
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1799
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1807
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1811
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1815
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1819
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1823
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1829
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1833
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1837
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1841
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1845
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1849
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1853
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1857
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1861
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1865
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1869
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1873
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1881
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 315:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1886
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1892
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1896
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1900
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1904
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1912
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1916
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1920
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1926
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1931
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 326:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1936
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1940
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1945
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 329:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1949
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 330:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1957
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1961
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 332:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1967
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1975
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1979
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1983
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1988
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1992
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1997
		{
			yyVAL.str = ""
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2001
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2005
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2009
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2014
		{
			yyVAL.str = ""
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2018
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2022
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 345:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2029
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2034
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2038
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2044
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2048
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2054
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2058
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2063
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2067
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2073
		{
			yyVAL.str = ""
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2077
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2083
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2087
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2091
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2095
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2099
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2104
		{
			yyVAL.str = ""
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2108
		{
			yyVAL.str = yyDollar[2].str
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2114
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2118
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2122
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2129
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2133
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2138
		{
			yyVAL.str = "key"
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2142
		{
			yyVAL.str = yyDollar[1].str
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2148
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2152
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2157
		{
			yyVAL.str = ""
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2161
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2167
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2171
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2177
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2183
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2187
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2193
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2197
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2203
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2209
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2213
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2217
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2221
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2226
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2230
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2236
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2242
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2248
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2254
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2258
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2262
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2266
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2270
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2275
		{
			yyVAL.str = ""
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2279
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2283
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2288
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2292
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2296
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2301
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2305
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2311
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2315
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2319
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2325
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2329
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2335
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2339
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2343
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2347
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2351
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2355
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2359
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2363
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2367
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2371
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2375
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2379
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2383
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2387
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2391
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2395
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2399
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2403
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2407
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2411
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2415
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2419
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2423
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2427
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2431
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2435
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2439
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2443
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2448
		{
			yyVAL.str = ""
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2452
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2456
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2475
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2479
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2483
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2488
		{
			yyVAL.str = ""
		}
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2494
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2498
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2503
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2507
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2512
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2516
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2520
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2524
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2528
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 463:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2532
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2538
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2542
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2546
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2552
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2556
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2560
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2564
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2568
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2572
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2576
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2580
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2584
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2588
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2592
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2596
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2600
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2604
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2608
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2612
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2616
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2620
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2624
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2628
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2632
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2636
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2640
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2646
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2650
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2656
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2660
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2664
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2668
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2672
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2676
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2680
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2684
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2688
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2694
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2700
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2707
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2714
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2720
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2724
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2731
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2738
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2750
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2760
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2764
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2768
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2781
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2791
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2795
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2806
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2813
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2820
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2827
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2834
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2841
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2846
		{
			yyLOCAL = &PartitionOption{
				Linear:       yyDollar[3].str,
				isHASH:       true,
				Expr:         yyDollar[6].exprUnion(),
				Partitions:   yyDollar[8].str,
				SubPartition: yyDollar[9].subPartitionUnion(),
				Definitions:  yyDollar[10].partDefsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2858
		{
			yyLOCAL = &PartitionOption{
				Linear:       yyDollar[3].str,
				isKEY:        true,
				KeyAlgorithm: yyDollar[5].str,
				KeyColList:   yyDollar[7].columnsUnion(),
				Partitions:   yyDollar[9].str,
				SubPartition: yyDollar[10].subPartitionUnion(),
				Definitions:  yyDollar[11].partDefsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2871
		{
			yyLOCAL = &PartitionOption{
				RangeOrList:  yyDollar[3].str,
				ExprOrCol:    yyDollar[4].exprOrColumnsUnion(),
				Partitions:   yyDollar[5].str,
				SubPartition: yyDollar[6].subPartitionUnion(),
				Definitions:  yyDollar[7].partDefsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2882
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2886
		{
			yyLOCAL = &SubPartition{
				Linear:        yyDollar[3].str,
				isHASH:        true,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2895
		{
			yyLOCAL = &SubPartition{
				Linear:        yyDollar[3].str,
				isKEY:         true,
				KeyAlgorithm:  yyDollar[5].str,
				KeyColList:    yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2906
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2910
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2915
		{
			yyVAL.str = ""
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2919
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 532:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2924
		{
			yyVAL.str = ""
		}
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2928
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2934
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2938
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ExprOrColumns
//line sql.y:2944
		{
			yyLOCAL = &ExprOrColumns{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ExprOrColumns
//line sql.y:2948
		{
			yyLOCAL = &ExprOrColumns{ColumnList: yyDollar[3].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2953
		{
			yyVAL.str = ""
		}
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2957
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2962
		{
			yyVAL.str = ""
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2966
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2972
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2976
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2980
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2984
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2988
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2992
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2996
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3000
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3004
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3008
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3012
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3016
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3020
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3024
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3028
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3032
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3036
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3040
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3044
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3048
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3052
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3056
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3061
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3065
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3069
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3076
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3080
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 569:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3086
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3090
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3096
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3102
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3106
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 574:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3112
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3116
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3125
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3129
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3135
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3139
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3144
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3150
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3154
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3158
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3162
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3166
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3170
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3174
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3178
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3182
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3186
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3190
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3194
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3198
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3202
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3206
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3210
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3214
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3218
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3222
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3226
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3230
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3234
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3238
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3242
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3246
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3250
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3254
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3258
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3262
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3266
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3270
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3274
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3278
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3282
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3286
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3290
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3294
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3299
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3303
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3307
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3312
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3316
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3320
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3324
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3329
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3343
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3347
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3351
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3357
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3361
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 631:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3367
		{
			yyVAL.str = ""
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3371
		{
			yyVAL.str = "extended "
		}
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3377
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3381
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3387
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3391
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3397
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3401
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3405
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3411
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3415
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3419
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3425
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3429
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3435
		{
			yyVAL.empty = struct{}{}
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3439
		{
			yyVAL.empty = struct{}{}
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3443
		{
			yyVAL.empty = struct{}{}
		}
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3449
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3453
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3459
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3463
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3469
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3475
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3479
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3484
		{
			yyVAL.empty = struct{}{}
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3486
		{
			yyVAL.empty = struct{}{}
		}
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3489
		{
			yyVAL.empty = struct{}{}
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3491
		{
			yyVAL.empty = struct{}{}
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3496
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3502
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3507
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3511
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3515
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3519
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3523
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3527
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3533
		{
			yyVAL.str = yyDollar[1].str
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3537
		{
			yyVAL.str = yyDollar[1].str
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3541
		{
			yyVAL.str = yyDollar[1].str
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3547
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3551
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3555
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3559
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3564
		{
			yyVAL.str = ""
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3568
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3572
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3578
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3582
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3588
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3592
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3598
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3604
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3608
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3614
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3620
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3624
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3628
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3632
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3638
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3644
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3650
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3654
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3658
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3662
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3666
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3670
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3676
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3680
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3686
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3690
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3694
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3698
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3702
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3706
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3710
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3714
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3718
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3722
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3726
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3730
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3735
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3739
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3743
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3748
		{
			yyVAL.str = ""
		}
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3752
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3757
		{
			setAllowComments(yylex, true)
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3761
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3767
		{
			yyVAL.strs = nil
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3771
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3777
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3781
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3785
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3790
		{
			yyVAL.str = ""
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3794
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3798
		{
			yyVAL.str = SQLCacheStr
		}
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3803
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3807
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3811
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3816
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3820
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3825
		{
			yyVAL.strs = nil
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3829
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3833
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3837
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3841
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3847
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3851
		{
			yyVAL.str = SQLCacheStr
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3855
		{
			yyVAL.str = DistinctStr
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3859
		{
			yyVAL.str = DistinctStr
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3863
		{
			yyVAL.str = StraightJoinHint
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3867
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3871
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3877
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3881
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3887
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3891
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3895
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3899
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3904
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3908
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3912
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3919
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3924
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3928
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3934
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3940
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3944
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3954
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3958
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3962
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3966
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3972
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3978
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3982
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3987
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3991
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3997
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4001
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4007
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4011
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4015
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4019
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4025
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4029
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4042
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4046
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4050
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4054
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4060
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 783:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4062
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4066
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4068
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4072
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4074
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4077
		{
			yyVAL.empty = struct{}{}
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4079
		{
			yyVAL.empty = struct{}{}
		}
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4082
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4086
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4090
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4097
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4103
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4107
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4111
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4117
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4123
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4127
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4131
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4135
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4141
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4145
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4155
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4159
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4165
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4169
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4175
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4180
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4184
		{
			yyLOCAL = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4188
		{
			yyLOCAL = &IndexHints{Type: UseOp}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4192
		{
			yyLOCAL = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4196
		{
			yyLOCAL = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4201
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4205
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4212
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4216
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4220
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4224
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4228
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4232
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4239
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4243
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4247
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4251
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4257
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4261
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4265
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4269
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4273
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4277
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4281
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4285
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4289
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4293
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4297
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4303
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4307
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4311
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4315
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4319
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4323
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4327
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4331
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4335
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4339
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4343
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4347
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4351
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4357
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4361
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4365
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4369
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4373
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4377
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4381
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4385
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4389
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4393
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4397
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4401
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4405
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4409
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4413
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4417
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4421
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4425
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4429
		{
			yyLOCAL = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4433
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4437
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4445
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4449
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4456
		{
			yyVAL.str = ""
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4460
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4466
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4470
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4477
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4481
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4485
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4489
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4495
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4499
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4503
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4507
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4511
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4515
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4519
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4525
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4529
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4533
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4540
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4546
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4550
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4560
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4564
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4568
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4572
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4582
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4586
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4590
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4594
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4598
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4602
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4606
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4610
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4614
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4618
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4629
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4633
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4639
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4643
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4648
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4652
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4656
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4660
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4664
		{
			yyLOCAL = &JSONAggregateExpr{Name: NewColIdent(yyDollar[1].str), Columns: []*ColName{yyDollar[3].colNameUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4668
		{
			yyLOCAL = &JSONAggregateExpr{Name: NewColIdent(yyDollar[1].str), Columns: []*ColName{yyDollar[3].colNameUnion(), yyDollar[5].colNameUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4672
		{
			yyLOCAL = &JSONUtilityExpr{Name: yyDollar[1].colIdent, Column: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4676
		{
			yyLOCAL = &JSONUtilityExpr{Name: yyDollar[1].colIdent, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4682
		{
			yyVAL.colIdent = NewColIdent(yyDollar[1].str)
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4686
		{
			yyVAL.colIdent = NewColIdent(yyDollar[1].str)
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4690
		{
			yyVAL.colIdent = NewColIdent(yyDollar[1].str)
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4696
		{
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4698
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4702
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4706
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4710
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4714
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4718
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4722
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4726
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4730
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4734
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4738
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4744
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4748
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4752
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4756
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4760
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4764
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4768
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4772
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4776
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4786
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4790
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4794
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4804
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4808
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4812
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4816
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4820
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4826
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4830
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4834
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4838
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4842
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4848
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4852
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4856
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4862
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4866
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4870
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: string(yyDollar[3].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4874
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4878
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4882
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4888
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4892
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4896
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4900
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4904
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4908
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4912
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4917
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4921
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4926
		{
			yyVAL.str = string("")
		}
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4930
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4936
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4940
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4946
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4951
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4955
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4961
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4965
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4969
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4975
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4984
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4988
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4994
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4998
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5003
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5007
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5012
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5016
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5022
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5028
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5032
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5038
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5043
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5047
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5051
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5056
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5060
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5066
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5070
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5074
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5079
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5083
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5087
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5091
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5095
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5102
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5106
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5110
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5114
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5120
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5124
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5128
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5133
		{
			yyVAL.str = ""
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5137
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5141
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5145
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1025:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5150
		{
			yyVAL.str = ""
		}
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5154
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5160
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5164
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1029:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5169
		{
			yyVAL.str = ""
		}
	case 1030:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5173
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1031:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5178
		{
			yyVAL.str = "cascaded"
		}
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5182
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5186
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1034:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5191
		{
			yyVAL.str = ""
		}
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5195
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5201
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5205
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5209
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str) + "@" + string(yyDollar[2].str)
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5213
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5219
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5223
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5229
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5233
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5237
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5242
		{
			yyVAL.str = ""
		}
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5246
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5250
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5255
		{
			yyVAL.str = ""
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5259
		{
			yyVAL.str = " header"
		}
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5264
		{
			yyVAL.str = ""
		}
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5268
		{
			yyVAL.str = " manifest on"
		}
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5272
		{
			yyVAL.str = " manifest off"
		}
	case 1053:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5277
		{
			yyVAL.str = ""
		}
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5281
		{
			yyVAL.str = " overwrite on"
		}
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5285
		{
			yyVAL.str = " overwrite off"
		}
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5291
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1057:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5296
		{
			yyVAL.str = ""
		}
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5300
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5306
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5310
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5316
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5320
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1063:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5325
		{
			yyVAL.str = ""
		}
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5329
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5335
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5339
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5345
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1068:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5349
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5353
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1070:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5358
		{
			yyVAL.str = ""
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5362
		{
			yyVAL.str = " optionally"
		}
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5375
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5379
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5383
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5387
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5391
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5397
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5401
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5405
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1080:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5409
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1081:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5414
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5418
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5424
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5428
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5434
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5438
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5444
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5449
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5459
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5463
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5469
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5475
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5479
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5485
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5489
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5493
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5497
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5501
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5509
		{
			yyVAL.str = "charset"
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5519
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5523
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5527
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5536
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5538
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5541
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5543
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5546
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5548
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5551
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5553
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5556
		{
			yyVAL.empty = struct{}{}
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5558
		{
			yyVAL.empty = struct{}{}
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5560
		{
			yyVAL.empty = struct{}{}
		}
	case 1119:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5564
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5569
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5573
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5578
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5580
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5584
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5590
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5594
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5601
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5607
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5611
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1131:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5617
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5621
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5628
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6094
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6103
		{
			decNesting(yylex)
		}
	case 1578:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6108
		{
			skipToEnd(yylex)
		}
	case 1579:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6113
		{
			skipToEnd(yylex)
		}
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6117
		{
			skipToEnd(yylex)
		}
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6121
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
